# interRAI Codebook {-}

# Pulling interRAI Data for BI Dashboard

This chapter was compiled by the Office of System Performance at Compass / Boussole / Akii-Izhinoogan to assist organizations who use the interRAI ChYMH suite of assesssment tools in analyzing clinical data in the free open source data analysis language R. This code was adapted from that provided by interRAI on the interRAI repository in SAS. This based on interRAI Algorithms V1.35. See individual CAPs and Scales for version number and update dates.

::: Lightbulb
All scale items are copyrighted material of [InterRAI](https://interrai.org/about-interrai/#!/licensing). For more information please follow the [link](https://interrai.org/about-interrai/#!/licensing).
:::

```{r setup-interRAI, warning=FALSE, echo=FALSE, include=FALSE}

knitr::opts_chunk$set(echo = TRUE)

knitr::write_bib(c(
  .packages(), 'bookdown', 'knitr', 'rmarkdown', 'readr', 'dplyr', 'readxl', 'data.table', 'magrittr', 'stringr', 'tidyverse', 'Hmisc', 'kableExtra', 'sjlabelled', 'summarytools'
), 'packages.bib')

library(readr)
library(dplyr)
library(readxl)
library(data.table)
library(magrittr)
library(stringr)
library(sjmisc)
library(tidyverse)
library(Hmisc)
library(kableExtra)
library(sjlabelled)
library(summarytools)
library(DT)

knitr::opts_chunk$set(class.source = "foldable")

```

## Preparing Data

### Loading Codebooks

The following codebooks include information specific to variables necessary to run the interRAI calculations. Have a look at them to check out what they're all about.

```{r, warning=FALSE, message=FALSE}

SAS_interRAI_Code_Info <- read_excel("Codebooks/SAS interRAI Code Info.xlsx")

interRAI_Code_Info <- read_excel("Codebooks/interRAI Codebook.xlsx")

varsummary <- read_excel("Codebooks/Compass interRAI Codebook.xlsx", 
    sheet = "iCodes")[,c(1,3,9)]

scalesummary <- read_excel("Codebooks/Compass interRAI Codebook.xlsx", 
    sheet = "Final Calculated")[,c(1,2,3,4,6)]

# The code that follows this line is idiosyncratic to Compass's system, however I've left the code in in case you have a similar situation where you need to normalize coding from an old system to match up with a newer system. 

Compass_interRAI_Codebook <- read_excel("Codebooks/Compass interRAI Codebook.xlsx", 
    sheet = "iCodes")

```

### Pulling and Tidying Data

The following code should be updated to reflect your organizations file/directory structure.

```{r data-pull, message=FALSE, warning=FALSE, eval=FALSE}

# Grab EMHware codebook

EMHware_CodeBook <- read_excel("M:\\DATA & REPORTS\\Clinical & Client Services\\Clinical Data\\interRAI\\interRAI Matching Codebook.xlsx", sheet = "EMHware Variables")

# Grab new ChYMH data 

ChYMH_folder <- "M:/DATA & REPORTS/Clinical & Client Services/Clinical Data/interRAI/EMHware interRAI ChYMH Export"

# merge all of the interRAI dfs

allfiles <- list.files(path=ChYMH_folder, pattern="*.csv", full.names=TRUE)

ChYMH_export <- plyr::ldply(allfiles, read_csv, show_col_types = FALSE)

ChYMH_1 <- filter(ChYMH_export,!is.na(program_name)) # remove rows w/NAs in program_name

ChYMH_1 <- subset(ChYMH_1, !grepl("default", program_name)) # remove rows w/default as program

```

### Data formatting

Amend the following code according to your own data structure and cleaning needs.

```{r data-clean, message=FALSE, warning=FALSE, cache=TRUE, eval=FALSE}

# auto format column types

ChYMH_2 <- type_convert(ChYMH_1)

ChYMH_3 <- transform(ChYMH_2,cihiU3=as.numeric(cihiU3),client_id=as.character(client_id),iA5d=as.character(iA5d))

# recode assessment type

ChYMH_3$iA8 <- gsub("1", "Initial", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("6First", "Initial", ChYMH_3$iA8) 
ChYMH_3$iA8 <- gsub("5First", "Initial", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("5", "Discharge", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("2", "Reassessment", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("6", "Discharge", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("4", "Reassessment", ChYMH_3$iA8)

ChYMH_4 <- subset(ChYMH_3, !grepl("default", program_name))
ChYMH_4$EMHID <- ChYMH_4$client_id

df <- ChYMH_4 %>%
  dplyr::rename("Tool" = "type_cd",
         "ref"="iA9", # date of assessment
         "ED_Screen"="iW29",
         "ID_Screen"="iA47",
         "ComorbidMedical_Screen" = "iA48")

```

### Dummy Columns

These calculated columns are used in PowerBI queries to filter scores.

```{r,eval=FALSE}

##------------------------------------------------------------------------
##  1. Type of assessment (Initial, Reassessment, Monitoring, Discharge)   
##------------------------------------------------------------------------

df <- df %>% mutate(Type = if_else(Tool =="chymh_monitoring_op", "Monitoring Assessment",
                                                       if_else(is.na(iA8), oA8, iA8))) 

df$Type <- recode(df$Type,`S-INTL`="Initial",
          `2`= "Reassessment",
        `S-SQNT`="Reassessment",
         `Readmission Initial`="Initial")

##---------------------------------
##  2. Last assessment completed      
##---------------------------------

df <- mutate(df, compl = if_else(is.na(iU2), iT1, iU2))

##---------------------
##  3. Calculate Age   
##---------------------

# calculate age in years at reference date (df$ref)

df$Age <- as.integer((df$ref - as.Date(paste0(df$iA3, "-01-01")))/365.25)

##------------------------------------------
##  4. Dummy FirstChYMH and last ChYMH  
##------------------------------------------

df <- df %>%
  group_by(EMHID) %>%
  mutate(MinRef = min(if_else(Tool != "rscr", ref, as.Date(Inf)), na.rm = FALSE),
         MaxRef = max(if_else(Tool != "rscr", ref, as.Date(-Inf)), na.rm = FALSE),
         FirstChYMH = as.integer(ref == MinRef),
         LastChYMH = as.integer(ref == MaxRef)) %>%
  ungroup() %>%
  select(-MinRef, -MaxRef)

##--------------------------------------------
##  5. Dummy FirstAx and last AX variable  
##--------------------------------------------

df <- df %>%
  group_by(EMHID) %>%
  mutate(MinRef = min(ref, na.rm = FALSE),
         MaxRef = max(ref, na.rm = FALSE),
         FirstAx = as.integer(ref == MinRef),
         LastAx = as.integer(ref == MaxRef)) %>%
  ungroup() %>%
  select(-MinRef, -MaxRef)

##-----------------------------
##  6. First & Last  Screener  
##-----------------------------
 
df <- df %>%
  group_by(EMHID) %>%
  mutate(MinRef = min(if_else(Tool == "rscr", ref, as.Date(Inf)), na.rm = FALSE),
         MaxRef = max(if_else(Tool == "rscr", ref, as.Date(-Inf)), na.rm = FALSE),
         FirstScreener = as.integer(ref == MinRef),
         LastScreener = as.integer(ref == MaxRef)) %>%
  ungroup() %>%
  select(-MinRef, -MaxRef)

#test <- df %>% select(EMHID, Tool, ref, FirstChYMH, LastChYMH, FirstAx, LastAx, FirstScreener, LastScreener)


```

### Recode Variables {#vallabels}

This code will convert all multiple choice responses to their numerical equivalent (for scoring).

```{r, warning=FALSE, message=FALSE,eval=FALSE, class.source = 'fold-hide'}
#Check value labels and variables with frq(df$__)

# convert all true and false to 0 and 1
# use the code below to subset all columns that contain the string (to double check not removing important text)
#sub <- ChYMH_export[grep("true", ChYMH_export)] 

df[df == 'false'] <- 0
df[df == 'true'] <- 1

df[df == 'FALSE'] <- 0
df[df == 'TRUE'] <- 1

df <- df %>% set_labels(iE15a, iE15d, iE15e, iE6, iX16c, iX16a, iX1c, iX2a, iX2b,
                        iX2c, iY1al, iY1am, iY1an, iY1ao, iY1aq, iY1au, iY1av,
                        iY1ar, iY1at, iY1ak, iY1aj, iY1ap, iY1aa, iX18, iW3a, 
                        iW3b, iW3c, iW3e, iW3f,
                        labels = c("Never"= 0, "More than 1 year ago" = 1, 
                        "31 days - 1 year ago" = 2,"8-30 days ago" = 3,
                        "4-7 days ago" = 4 ,"In the last 3 days" = 5))

df <- df %>% set_labels(iC7, labels = c("Adapts without difficulty" = 0, 
                        "Adapts with some difficulty" = 1,"Has difficulty adapting
                        to even minor change" = 2))

df <- df %>% set_labels(iJ3, labels = c("Absence of symptom" = 0, 
                        "Absent at rest, but present when performed moderate 
                        activities" = 1, "Absent at rest, but present when performed
                        normal day-to-day acitivties" = 2,"Present at rest" = 3))

df <- df %>% set_labels(iD3a, labels = c("Adequate" = 0, "Minimal difficulty" = 1,
                        "Moderate difficulty" = 2,"Severe difficulty" = 3, "No 
                        hearing" = 4))

df <- df %>% set_labels(iD4a, labels = c("Adequate" = 0, "Minimal difficulty" = 1,
                        "Moderate difficulty" = 2,"Severe difficulty" = 3, "No 
                        vision" = 4))

df <- df %>% set_labels(iBB14a, labels = c("Exceptionally higher ability" = 0,
                        "Typical ability" = 1, "Exceptionally lower ability" = 2,
                        "Minimal or no evidence of ability" = 3, 
                        "Not applicable" = 8))

df <- df %>% set_labels(iE7, labels = c("Full" = 0, "Limited" = 1, "None" = 2))

df <- df %>% set_labels(iG1aa, iG1ab, iG1ba, iG1bb, iG1ca, iG1cb, iG1da, iG1db, 
                        iG1ea, iG1eb, iG1fa, iG1fb, iG1ga, iG1gb, iG1ha, iG1hb, 
                        iG1na, iG1nb, iG1oa, iG1ob, iG1pa, iG1pb, iG2a, iG2b, 
                        iG2c, iG2d, iG2j, labels = c("Independent" = 0,
                        "Set-up help only" = 1, "Supervision" = 2, 
                        "Limited assistance" = 3, "Extensive assistance" = 4,
                        "Maximal assistance" = 5, "Total dependence" = 6,
                        "Activity did not occur" = 8))

df <- df %>% set_labels(iC1d, labels = c("Independent" = 0, 
                       "Modified independence" = 1, "Minimally independent" = 2,
                       "Moderately dependent" = 3, "Severely dependent" = 4, 
                       "No discernible consciousness, coma" = 5))

df <- df %>% set_labels(RS_I1d, RS_I1a, RS_I1b, labels = c("Minimal" = 0,
                        "Mild" = 1, "Moderate" = 2, "Severe" = 3, 
                        "Very Severe" = 4))

df <- df %>% set_labels(iP15a, iP15b, iP15c, iP15d, iP15e, iP15f, labels = c(
                        "Most of the time" = 0, "Occasionally" = 1, 
                        "Rarely or never" = 2, "No parent/ primary caregiver" = 8))

df <- df %>% set_labels(iBB10, labels = c("No" = 0, "Child/youth only" = 1,
                        "Parent/primary caregiver only" = 2, "Both" = 3))

df <- df %>% set_labels(iB12, iB32a, iB32b, iB35, iB38a, iB38b, iE14d, iE18a, 
                        iE19a, iF13, iF15a, iF15c, iF15d, iF15e, iF15f, iF15g,
                        iF8b, iJ10a, iK2i, iK2j, iK2k, iK8a, iK8b, iK8c, iM6, 
                        iP8, iQ4, iS11a, iS11b, iS11c, iS12, iW8, iX3, iY2a, 
                        iY2b, iY2c, iY2d, iZ12, RS_E3, RS_G3,iBB11a, iBB11b, 
                        iE14a, iE14b, iE14c, iF8a, iJ9a, iJ9b, iJ9c, iJ9d, iJ9e, 
                        iJ9f, iJ9g, iP24a, iP24b, iX1d, iX1e,	RS_G6, 
                        labels = c("No" = 0, "Yes" = 1))

df <- df %>% set_labels(iY1ab, labels = c("No" = 0, "Yes" = 1, "No attempt" = 8))

df <- df %>% set_labels(iR16a, iR16b, labels = c("No" = 0, "Yes" = 1, "Refused" = 2,
                                                 "Not needed" = 8))

df <- df %>% set_labels(iBB5a, iBB5b, iBB5e, iBB5f, iP19b, iP19d, iP19e, iP19f, 
                        iP19h, iP16a, iP16b, iP19a, iP19c, iP19g, 
                        labels = c("No" = 0, "Yes" = 1, "Not applicable" = 8))

df <- df %>% set_labels(iY8a, iY8b, iY9, labels = c("No" = 0, "Yes" = 1, 
                                          "Unknown or not applicable" = 8))

df <- df %>% set_labels(iM12, labels = c("No" = 0, "Yes" = 1, "Not needed or no 
                                          parent/primary caregiver" = 8))

df <- df %>% set_labels(iX4, labels = c("No" = 0, "Yes, but not exhibited in last 7
                        days" = 1, "Yes, exhibited in last 7 days" = 2))

df <- df %>% set_labels(iJ2dd, iJ2gg, iJ2k, iJ2ll, iJ2y, iJ2c, iJ2x, iJ2n,labels =
                        c("Not present" = 0,"Present but not exhibited in last 3 
                          days" = 1, "Exhibited on 1 of last 3 days" = 2, "Exhibited 
                          on 2 of last 3 days" = 3, "Exhibited daily in 
                          last 3 days" = 4))

df <- df %>% set_labels(iE1aaa, iE1aaaa, iE1bbbb, iE1eee, iE1eeee, iE1fff, iE1ggg,
                        iE1hhh, iE1iii, iE1kkk, iE1lll, iE1mmm, iE1nnn, iE1oo, 
                        iE1ooo, iE1pp, iE1ppp, iE1qq, iE1qqq, iE1rr, iE1rrr, iE1ss,
                        iE1sss, iE1tt, iE1ttt, iE1uu, iE1vv, iE1ww, iE1xx, iE1yy,
                        iE1yyy, iE1zzz, iE3aa, iE3l, iE3m, iE3n, iE3p, iE3q, iE3r,
                        iE3s, iE3t, iE3w, cE3ab, cE3ac, iE1ccc, iE1ddd, iE1dddd, 
                        iE1jjj, iE1llll, iE1zz, iE3o, iE3y, iK21, 
                        labels = c("Not present" = 0, 
                        "Present but not exhibited in last 3 days" = 1, 
                        "Exhibited on 1-2 of last 3 days" = 2, 
                        "Exhibited daily in last 3 days, 1-2 episodes" = 3, 
                        "Exhibited daily in last 3 days, 3 or more episodes or 
                        continuously" = 4))

df <- df %>% set_labels(iD1, labels = c("Understood" = 0, "Usually understood" = 1, 
                        "Often understood" = 2, "Sometimes understood" = 3,
                        "Rarely or never understood" = 4))

df <- df %>% set_labels(iD2, labels = c("Understands" = 0, "Usually understands" = 1,
                        "Often understands" = 2, "Sometimes understands" = 3,
                        "Rarely or never understands" = 4))

df <- df %>% set_labels(iH1, labels = c("Continent—Complete control; DOES NOT USE 
                        any type of catheter or other urinary collection device" = 0,
                        "Control with any catheter or ostomy over last 3 days" = 1,
                        "Infrequently incontinent—Not incontinent over last 3 days, 
                        but does have incontinent episodes" = 2, "Occasionally
                        incontinent—Less than daily" = 3, "Frequently incontinent—
                        Daily, but some control present" = 4, "Incontinent—No control
                        present" = 5, "Did not occur—No urine output from bladder in
                        last 3 days" = 8))

df <- df %>% set_labels(iH3, labels = c("Continent - Complete Control; DOES NOT
                        USE any type of ostomy device" = 0,"Control with ostomy-
                        Control with ostomy device over last 3 years" = 1, 
                        "Infrequently incontinent-Not incontinent over last 3 days, 
                        but does have incontinent episodes" = 2, "Occasionally
                        incontinent-Less than daily" = 3, "Frequently 
                        incontinent-Daily, but some control present" = 4,
                        "Incontinent-No control present" = 5, "Did not occur - 
                        No bowel movement in last 3 days" = 8))

df <- df %>% set_labels(iC2a, iC2b, labels = c("Yes,memory okay" = 0 ,"Memory 
                                               problem" = 1))

df <- df %>% set_labels(iC9a, iC9b, labels = c("Adequate or better" = 0, 
                        "Inadequate" = 1, "Minimal or no evidence thereof" = 8))

df <- df %>% set_labels(iD28, iD29, labels = c("Adequate" = 0, "Minimal difficulty"
                        = 1, "Moderate difficulty" = 2,"Severe difficulty" = 3, 
                        "No ability to move body (full paralysis)" = 4))

df <- df %>% set_labels(iM3, labels = c("Always adherent" = 0, "Adherent 80% of 
                        the time or more" = 1, "Adherent less than 80% of the time,
                        including failure to purchase prescribed medications" = 2, 
                        "No medications prescribed" = 8))

df <- df %>% set_labels(iG2a, iG2b, iG2c, iG2d, iG2f, iG2h, iG2j, 
                  labels = c("Independent" = 0, "Independent, set-up only"= 1, 
                             "Supervision" = 2, "Limited assistance"= 3, 
                             "Extensive assistance" = 4, "Maximal assistance" = 5, 
                             "Total dependence" = 6, "Activity did not occur during 
                             entire period"= 8))

df <- df %>% set_labels(iBB4b, labels = c("Never enrolled" = 0, "No, but previously
                        enrolled" = 1, "Yes, part-time" = 2, "Yes, full-time" = 3))

df <- df %>% set_labels(iS7b, iS7d, iY1b, labels = c("No or not applicable" = 0, 
                        "Yes" = 1, "Could not (would not) respond)" = 8))

df <- df %>% set_labels(iJ5a, labels = c("No pain" = 0, "Present but not exhibited
                        in last 3 days" = 1, "Exhibited on 1-2 of last 3 days" = 2, 
                        "Exhibited daily in last 3 days" = 3))

df <- df %>% set_labels(iW20a, labels = c("No" = 0, "Not in the last 3 days, but
                        smokes occassionally" = 1, "Not in the last 3 days, but is 
                        a usually daily smoker" = 2, "Yes" = 3))

df <- df %>% set_labels(iW20b, labels = c("No" = 0, "Not in the last 3 days, but
                        uses occassionally" = 1, "Not in the last 3 days, but is a 
                        usually daily user" = 2, "Yes" = 3))

df <- df %>% set_labels(iR16a, iR16b, labels = c("No" = 0, "Yes" = 1, "Refused" = 2,
                                                 "Not needed" = 8))

df <- df %>% set_labels(iM4, labels = c("No, or no medications" = 0, "Yes" = 1))

df <- df %>% set_labels(iM5, labels = c("No, or no psychotropic medications" = 0,
                                        "Yes" = 1))

df <- df %>% set_labels(iB15, labels = c("None" = 0, "Borderline" = 1, "Mild" = 2,
                        "Moderate" = 3, "Severe" = 4, "Profound" = 5, "Not 
                        documented" = 8))

df <- df %>% set_labels(iB34a, iB34b, iB34c, labels = c("None" = 0, "0-4 years" = 1, 
                        "5-11 years" = 2,"12-18 years" = 3))

df <- df %>% set_labels(iW2, labels = c("None" = 0, "1 day" = 1, "2-8 days" = 2,
                       "9 or more days, but not daily" = 3, "Daily" = 4))

df <- df %>% set_labels(iB33, labels = c("None" = 0, "1 foster family" = 1, 
                                         "Multiple foster families" = 2))

df <- df %>% set_labels(iV1, labels = c("None" = 0, "1-22" = 1, "3 or more" = 2))

df <- df %>% set_labels(iW10, labels = c("None" = 0, "1-22" = 1, "3-56" = 2, 
                                         "6 or more" = 3))

df <- df %>% set_labels(iG6a, labels = c("None" = 0, "Less than 1 hour" = 1, 
                                         "1-2 hours" = 2, "3-4 hours" = 3,
                                         "More than 4 hours" = 4))

df <- df %>% set_labels(iW21, labels = c("None" = 0, "Minimal" = 1, "Moderate" = 2,
                                         "Severe" = 3))

df <- df %>% set_labels(iJ4, labels = c("None" = 0, "Minimal" = 1, "Moderate" = 2,
                  "Severe" = 3, "Unable to commence any normal day-to-day 
                  activities" = 4))

df <- df %>% set_labels(iK3, labels = c("Normal" = 0, "Modified independent" = 1, 
                    "Requires diet modification to swallow solid food" = 2, 
                    "Requires modification to swallow liquids" = 3, "Can swallow 
                    only pureed solids and thickened liquids" = 4, "Combined oral
                    and parenteral or tube feeding" = 5, "Nasogastric tube 
                    feeding" = 6, "Abdominal tube feeding" = 7, "Parenteral 
                    feeding only" = 8, "Activity did not occur" = 9))

df <- df %>% set_labels(iP18a, iP18b, iP18c, iP18e, labels = c("Not needed" = 0,
                      "Consistently available" = 1, "Occasionally available" = 2,
                      "Not available" = 3))

df <- df %>% set_labels(iF5a, iF5b, iF5e, iF5f, labels = c("Not present" = 0, 
                      "Present but not exhibited in the last 3 days" = 1, 
                      "Exhibited on 1-2 of last 3 days" = 2, "Exhibited daily
                      in last 3 days" = 3))
                      
df <- df %>% set_labels(iAA1a, iAA1c, iAA1f, iN6c, labels = c("Not used" = 0, "Used
                      less than daily" = 1, "Used daily-nights only" = 2, 
                      "Used daily-days only" = 3, "Used night and days, but not
                      constant" = 4))

df <- df %>% set_labels(iE5, labels = c("30 days or less(from this facility)" = 1,
                      "30 days or less(from another facility)" = 2, "31 days -
                      90 days" = 3, "91 days - 1 year" = 4, "More than 1 year" = 5, 
                      "Not applicable(no prior admission" = 6))

df <- df %>% set_labels(iA12e, labels = c("Alone" = 1, "With parent(s) or primary
                      caregiver(s)" = 2, "With sibling(s), no parent(s)/primary
                      caregiver(s)" = 3, "With other relative(s)" = 4, "With 
                      foster family" = 5, "With non-relative(s), excluding foster
                      family" = 6 ))

df <- df %>% set_labels(iBB2, labels = c("Competitive employment" = 1, "Supported
                      employment" = 2, "Vocational rehabilitation" = 3, "Not 
                      applicable" = 8))

df <- df %>% set_labels(iR9, labels = c("Deterioration" = 1, "No change" = 2, 
                      "Improvement" = 3, "Marked improvement" = 4))

df <- df %>% set_labels(iB31, labels = c("Never married"  = 1, "Married" = 2, 
                      "Partner/Significant other" = 3, "Widowed" = 4, "Separated" = 5,
                      "Divorced" = 6, "Marital status unknown" = 8))

df <- df %>% set_labels(iA11b, labels = c("Private home/apartment/rented room" = 1, 
                      "Board and care" = 2, "Assisted living or semi-independent
                      living" = 3, "Mental health residence (e.g., psychiatric 
                      home)" = 4, "Group home for persons with a physical 
                      disability" = 5, " Setting for persons with intellectual
                      disabilities" = 6, "Psychiatric hospital or unit" = 7, 
                      "Homeless (with or without shelter)" = 8, "Residential
                      care facility (e.g., long-term care home, nursing home" = 9,
                      "Rehabilitation hospital/unit" = 10, "Hospice facility/
                      palliative care unit" = 11, "Acute care hospital" = 12, 
                      "Continuing care hospital/unit" = 13, "Residential treatment
                      facility" = 14, "Other" = 15))

df <- df %>% set_labels(iM7, labels = c("Actual number of acute control medications
                      as per definition in the last 3 days" > 0))

df <- type_convert(df) # auto-format variable columns

```

# Caps and Scales Summary Tables

The following tables include all scales, their coded name and description as well as possible values and intermediary variables (if necessary) needed to calculate their respective scores. Use the search function to look up a specific scale or CAP quickly.

## Scales Summary Table

```{r, warning=FALSE, message=FALSE, echo=FALSE}

scaletable <- filter(scalesummary, Coded_Name == "sCYPSS"| Coded_Name == "sCYABS"| 
                      Coded_Name == "sCYRHO"| Coded_Name == "sASSC"| 
                      Coded_Name == "sCHAMHPS"| Coded_Name == "sCYDISTRACT"|
                      Coded_Name == "sCYFAMILY"| Coded_Name == "sCYSLEEP"|
                      Coded_Name == "sCYSLEEP"| Coded_Name == "sCYADL"|
                      Coded_Name == "sCYANXS"| Coded_Name == "sCYDABS"|
                      Coded_Name == "sCYDSI"| Coded_Name == "sCYMHANHEDO"|
                      Coded_Name == "sCYPEER"| Coded_Name == "sEXTERN"|
                      Coded_Name == "sINTERN"| Coded_Name == "sCYRISSK"|
                      Coded_Name == "sCYRIO"| Coded_Name == "sDbSI"|
                      Coded_Name == "sCYPS"| Coded_Name == "sCYSOS"|
                      Coded_Name == "sCYRIChY"| Coded_Name == "sCYMHSDeS"|
                      Coded_Name == "sCYYIADLC"| Coded_Name == "sCYYIADLP"|
                      Coded_Name == "sDEPRESSION_OLD"| Coded_Name == "sANXIETY_OLD"|
                      Coded_Name == "sMANIA_OLD"| Coded_Name == "iCCareD"|
                      Coded_Name == "DABSS"| Coded_Name == "EXTS"|
                      Coded_Name == "INTS"| Coded_Name == "ADLcomplex"|
                      Coded_Name == "ADLlesscomplex"| Coded_Name == "cognitivefunction"|
                      Coded_Name == "caregiverdistress"| Coded_Name == "sCYSchDis"|
                      Coded_Name == "sCYSenSDiff"| Coded_Name == "sCYRelStren"|
                      Coded_Name == "ALEIC"| Coded_Name == "sCOMM")


datatable(scaletable, options = list(
  columnDefs = list(list(className = 'dt-center', targets = 4)),
  pageLength = 5,
  lengthMenu = c(5, 10, 15, 20)
))

```

## CAPS Summary Table

```{r, warning=FALSE, message=FALSE,echo=FALSE}

captable <- filter(scalesummary, Coded_Name == "cCYMHATTACH"| Coded_Name == "cCYMHCAFFE"| 
                      Coded_Name == "cCYMHCAREDIST"| Coded_Name == "cCYMHCOMM"| 
                      Coded_Name == "cCYMHCTRLINT"| Coded_Name == "cCYMHCRIM"|
                      Coded_Name == "cCYMHHARMOTH"| Coded_Name == "cCYMHFIRE"|
                      Coded_Name == "cCYMHINFSUPP"| Coded_Name == "cCYMHIPCON"|
                      Coded_Name == "cCYMHMEDADH"| Coded_Name == "cCYMHMEDREV"|
                      Coded_Name == "cCYMHPARENT"| Coded_Name == "cCYMHPA"|
                      Coded_Name == "cCYMHREAD"| Coded_Name == "cCYMHSLEEP"|
                      Coded_Name == "cCYMHSOCREL"| Coded_Name == "cCYMHSTR"|
                      Coded_Name == "cCYMHSSH"| Coded_Name == "cCYMHSSDIS"|
                      Coded_Name == "cCYMHTOBAC"| Coded_Name == "cCYMHTRANS"|
                      Coded_Name == "cCYMHTRAUMA"| Coded_Name == "cCYMHVG"|
                      Coded_Name == "cCYMHEDU"| Coded_Name == "cCYMHGAMB"|
                      Coded_Name == "cCYMHLIFSKIL"| Coded_Name == "cCYMHSEX"|
                      Coded_Name == "cCYMHWTMGT"| Coded_Name == "cCYMHSUBUSE"|
                      Coded_Name == "cCYDDCONTI"| Coded_Name == "cCYDDSSH"|
                      Coded_Name == "cCYDDAM"| Coded_Name == "cCYDDEDU"|
                      Coded_Name == "cCYDDINJUR"| Coded_Name == "cCYDDNUTRI"|
                      Coded_Name == "cCYDDTRAUMA"| Coded_Name == "cCYDDPLAY"|
                      Coded_Name == "cCYDDEAT"| Coded_Name == "cCYDDSOCREL"|
                      Coded_Name == "cCYDDSTR"| Coded_Name == "cCYDDSSDIS")

datatable(captable, options = list(
  columnDefs = list(list(className = 'dt-center', targets = 4)),
  pageLength = 5,
  lengthMenu = c(5, 10, 15, 20)
), caption="CAP name, description, accepted values and 
                                              intermediary variables.")



```

# Calculating Scales {#scales}

The following code is used to score each scale and CAP included in the ChYMH screener, screener + and full ChYMH. R equations are based on the original SAS code provided by the scale developer. The original SAS code is referenced at the beginning of each scale calculation presented and hard copies can be found in the "Codebook" folder of this project.

### sCYPSS: Positive Symptoms Scale (sCYPSS) {#sCYPSS}

**Last Updated:** August 8, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for (sCYPSS)**

```{r, warning=FALSE, message=FALSE, echo=FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYPSS",][,1:2])

```

**sCYPSS Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}

scypss_var <- filter(varsummary, iCodes == "iE1mmm"| iCodes == "iE1nnn"| 
                                 iCodes == "iE1ooo"| iCodes == "iE1ppp")  

vartable <- scypss_var %>% kbl(caption = "sCYPSS variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYPSS Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validpss = case_when(iE1mmm %in% c(0,1,2,3,4) & 
                                         iE1ooo %in% c(0,1,2,3,4) & 
                                         iE1nnn %in% c(0,1,2,3,4) & 
                                         iE1ppp %in% c(0,1,2,3,4) ~ 1,
                                         TRUE ~ 0))
```

**sCYPSS Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYPSS = case_when(validpss == 1 ~ 
                (case_when(iE1mmm %in% c(0,1,2,3) ~ iE1mmm, iE1mmm == 4 ~ + 3)) + 
                (case_when(iE1ooo %in% c(0,1,2,3) ~ + iE1ooo, iE1ooo == 4 ~ + 3)) +
                (case_when(iE1nnn %in% c(0,1,2,3) ~ + iE1nnn, iE1nnn == 4 ~ + 3)) +
                (case_when(iE1ppp %in% c(0,1,2,3) ~ + iE1ppp, iE1ppp == 4 ~ + 3)))) 
```

**sCYPSS Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYPSStest <- subset(df, select=c("iE1mmm","iE1ppp","iE1ooo","iE1nnn"))
sCYPSSdf <- sCYPSStest[complete.cases(sCYPSStest),]
sCYPSSdf <- sCYPSSdf %>% mutate(
  iE1mmm = case_when(iE1mmm %in% c(0,1,2,3) ~ iE1mmm, iE1mmm == 4 ~ + 3), 
  iE1ooo = case_when(iE1ooo %in% c(0,1,2,3) ~ iE1ooo, iE1ooo == 4 ~ + 3), 
  iE1nnn = case_when(iE1nnn %in% c(0,1,2,3) ~ iE1nnn, iE1nnn == 4 ~ + 3), 
  iE1ppp = case_when(iE1ppp %in% c(0,1,2,3) ~ iE1ppp, iE1ppp == 4 ~ + 3))
scypss_rel <- psych::reliability(sCYPSSdf)
```

### Aggressive Behaviour Severity Scale (sCYABS) {#sCYABS}

**Last Updated:** Aug 4, 2023

**Last Updated By:** Shauna Heron

Called ABS\_\_scale in original Compass system.

*interRAI Repository Information for (sCYABS)*

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYABS", ][,1:2])
```

**sCYABS Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scyabs_var <- filter(varsummary, iCodes == "iE3l"| iCodes == "iE3m"| iCodes == 
                                           "iE3n"| iCodes == "iE3p")

vartable <- scyabs_var %>% kbl(caption = "sCYABS variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYABS Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validabs = case_when(
                              iE3l %in% c(0,1,2,3,4) & 
                              iE3m %in% c(0,1,2,3,4) & 
                              iE3n %in% c(0,1,2,3,4) & 
                              iE3p %in% c(0,1,2,3,4) ~ 1,
                              TRUE ~ 0))
```

**sCYABS Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYABS = case_when(validabs==1 ~ 
            (case_when(iE3l %in% c(0,1,2,3) ~ iE3l, iE3l == 4 ~ + 3)) + 
            (case_when(iE3m %in% c(0,1,2,3) ~ + iE3m, iE3m == 4 ~ + 3)) +
            (case_when(iE3n %in% c(0,1,2,3) ~ + iE3n, iE3n == 4 ~ + 3)) + 
            (case_when(iE3p %in% c(0,1,2,3) ~ + iE3p, iE3p == 4 ~ + 3))))
```

**sCYABS Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYABStest <- subset(df, select=c("iE3l","iE3m","iE3n","iE3p"))
sCYABSdf <- sCYABStest[complete.cases(sCYABStest),]
sCYABSdf <- sCYABSdf %>% mutate(
  iE3l = case_when(iE3l %in% c(0,1,2,3) ~ iE3l, iE3l == 4 ~ + 3), 
  iE3m = case_when(iE3m %in% c(0,1,2,3) ~ iE3m, iE3m == 4 ~ + 3), 
  iE3n = case_when(iE3n %in% c(0,1,2,3) ~ iE3n, iE3n == 4 ~ + 3), 
  iE3p = case_when(iE3p %in% c(0,1,2,3) ~ iE3p, iE3p == 4 ~ + 3))

scyabs_rel <- psych::reliability(sCYABSdf)
```

**sCYABS Cut Points**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYABS_cut = case_when(sCYABS == 0 ~ 0,
                                           sCYABS >= 1 & sCYABS <= 4 ~ 1,
                                           sCYABS >= 5 ~ 2))

df$sCYABS_cut <- ordered(df$sCYABS_cut,
                                  levels = c(0,1,2),
                                  labels = c("No signs of Aggression", "Mild to
                                             Moderate Aggression", "More Severe
                                             Aggression"))
```

## Risk of Harm to Others (sCYRHO & RHO scale) {#sCYRHO}

**Last Updated:** August 8, 2023

**Last Updated By:** Shauna Heron

Calculating the Risk of Harm to Others Scale requires that the Positive Symptoms (\@ref(sCYPSS)) and Aggressive Behaviours (\@ref(sCYABS)) Scales have also been calculated.

**interRAI Repository Information for (sCYRHO)**

```{r, echo= FALSE,class.source = 'fold-hide'}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYRHO", ][,1:2])
```

**sCYRHO Variable Summary Table**

```{r,  warning=FALSE, message=FALSE, echo=FALSE}
scyrho_var <- filter(varsummary, iCodes == "iE1ooo"| iCodes == "iE1yyy"| 
                                 iCodes == "iE6"| iCodes == "iE7"| iCodes == "iX2a"|
                                 iCodes == "iX2b"| iCodes == "iX2c"| iCodes == "iX4")

vartable <- scyrho_var %>% kbl(caption = "sCYRHO variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYRHO Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validrho = case_when(
                                                  iE1ooo %in% c(0,1,2,3,4) & 
                                                  iE1yyy %in% c(0,1,2,3,4) & 
                                                  iE6 %in% c(0,1,2,3,4,5) & 
                                                  iE7 %in% c(0,1,2) & 
                                                  iX2a %in% c(0,1,2,3,4,5) & 
                                                  iX2b %in% c(0,1,2,3,4,5) & 
                                                  iX2c %in% c(0,1,2,3,4,5) &
                                                  sCYABS %in% c(0:12) &
                                                  sCYPSS %in% c(0:12) & 
                                                  iX4 %in% c(0,1,2) ~ 1,
                                                  TRUE ~ 0))


df <- df %>% mutate(xrho1 = case_when(
                                                  iX2a %in% c(4,5) | 
                                                  iX2b %in% c(4,5) | 
                                                  iX2c %in% c(4,5) | 
                                                  iX4 == 2 ~ 2,
                                                  iX2a %in% c(1,2,3) |
                                                  iX2b %in% c(1,2,3) | 
                                                  iX2c %in% c(1,2,3) | 
                                                  iX4 == 1 ~ 1,
                                                  TRUE ~ 0),
                                      xrho2 = iX2a + iX2b + iX2c)
```

**sCYRHO Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYRHO = case_when(validrho == 1 ~ case_when(
            xrho1 == 2 ~ case_when(
              xrho2 >= 10 ~ case_when(
                iE1ooo %in% c(1,2,3,4) ~ 6, iE1ooo == 0 ~ 5),
              xrho2 <10 ~ case_when(
                iE7 == 2 ~ 5, iE7 == 1 & iE1yyy %in% c(1,2,3,4) ~ 4,
                iE7 == 1 & iE1yyy == 0 ~ 2, iE7 == 0 ~ 3)),
            xrho1 == 1 ~ case_when(sCYPSS >= 2 ~ 4, sCYPSS < 2 ~ 2),
            xrho1 == 0 ~ case_when(sCYABS >= 3 ~ 3, sCYABS < 3 ~ case_when(
                sCYPSS >= 4 ~ 1, sCYPSS < 4 & iE6 %in% c(2,3,4,5) ~ 1,
                sCYPSS < 4 & iE6 %in% c(0,1) ~ 0)))))
```

**sCYRHO Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYRHOtest <- subset(df, select=c("iE1ooo","iE6","iX2b","iX2a","iE7","iE1yyy",
                                  "iX2c","sCYABS","sCYPSS","iX4"))
sCYRHOdf <- sCYRHOtest[complete.cases(sCYRHOtest),]
scyrho_rel <- psych::reliability(sCYRHOdf)
```

## Autism Spectrum Symptoms Checklist (sASSC) {#sASSC}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

interRAI Repository Information for Risk of Autism Prediction

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sASSC", ][,1:2])
```

**sASSC Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
sassc_var <- filter(varsummary, iCodes == "iC7"| iCodes == "iE3aa"| iCodes == "iE14a"|
                                iCodes == "iE14b"| iCodes == "iE14c")

vartable <- sassc_var %>% kbl(caption = "sASSC variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sASSC Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validssc = case_when(iC7 %in% c(0,1,2) &
                                         iE3aa %in% c(0,1,2,3,4) &
                                         iE14a %in% c(0,1) &  
                                         iE14b %in% c(0,1) &                    
                                         iE14c %in% c(0,1) ~ 1, TRUE ~ 0))
```

**sASSC Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sASSC = case_when(validssc == 1 ~ 
                            (case_when(iE14a == 1 ~ 1, TRUE ~ 0)) + 
                            (case_when(iE14b == 1 ~ 1, TRUE ~ 0)) + 
                            (case_when(iE14c == 1 ~ 1, TRUE ~ 0)) + 
                            (case_when(iE3aa %in% c(1,2,3,4) ~ 1, TRUE ~ 0)) + 
                            (case_when(iC7== 2 ~ 1, TRUE ~ 0))))
```

**sASSC Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYASSCtest <- subset(df, select=c("iE14b","iE14c","iC7","iE3aa","iE14a"))
sCYASSCdf <- sCYASSCtest[complete.cases(sCYASSCtest),]
scyassc_rel <- psych::reliability(sCYASSCdf)
```

## Children's Algorithm for Mental Health and Psychiatric Services (sCHAMHPS) {#sCHAMHPS}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for ChAMhPS**

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCHAMHPS", ][,1:2])
```

**sCHAMHPS Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}

schamhps_var <- filter(varsummary, iCodes == "iBB5f"| iCodes == "iE1iii"| 
                       iCodes == "iE1lll"| iCodes == "iE1qq"| iCodes == "iE1qqq"|
                       iCodes == "iE1rrr"| iCodes == "iE1vv"| iCodes == "iE1xx"| 
                       iCodes == "iE3n"| iCodes == "iEEE2"| iCodes == "iX1c"|
                       iCodes == "iX1d"| iCodes == "iX2a"| iCodes == "RS_I1a"|
                       iCodes == "RS_I1b"| iCodes == "iY1ao")
                       
vartable <- schamhps_var %>% kbl(caption = "sChAMhPS variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCHAMHPS Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validhps = case_when(
                           iBB5f %in% c(0,1,8) &
                           iE1iii %in% c(0,1,2,3,4) &  
                           iE1lll %in% c(0,1,2,3,4) &  
                           iE1qq %in% c(0,1,2,3,4) &   
                           iE1qqq %in% c(0,1,2,3,4) &
                           iE1rrr %in% c(0,1,2,3,4) & 
                           iE1vv %in% c(0,1,2,3,4) &  
                           iE1xx %in% c(0,1,2,3,4) &   
                           iE3n %in% c(0,1,2,3,4) &  
                           iEEE2 %in% c(0,1,2,3,4) & 
                           iX1c %in% c(0,1,2,3,4,5) &  
                           iX1d %in% c(0,1) & 
                           iX2a %in% c(0,1,2,3,4,5) &   
                           iX14a %in% c(0,1,2,3,4) &   
                           iX14b %in% c(0,1,2,3,4) &  
                           iY1ao %in% c(0,1,2,3,4,5) &
                           T_age > 0 & T_age < 130 ~ 1, TRUE ~ 0))
```

**sCHAMHPS Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}

df <- df %>%
  mutate(sCHAMHPS =
           ifelse(
             T_age <= 7,
             ifelse(
               iX14a == 0,
               ifelse(
                 iX2a %in% c(0, 1, 2),
                 ifelse(iE1rrr %in% c(0, 1), 0,
                        ifelse(iE1rrr %in% c(2, 3, 4), 2, NA)),
                 ifelse(iX2a %in% c(3, 4, 5), 2, NA)
               ),
               ifelse(
                 iX14a == 1,
                 ifelse(iX2a %in% c(0, 1), 1,
                        ifelse(iX2a %in% c(2, 3, 4, 5), 3, NA)),
                 ifelse(iX14a %in% c(2, 3, 4),
                        ifelse(iE1lll == 0, 3,
                               ifelse(
                                 iE1lll %in% c(1, 2, 3, 4), 5, NA
                               )), NA)
               )
             ),
             ifelse(
               T_age >= 8 & T_age <= 11,
               ifelse(
                 iX14a %in% c(0, 1),
                 ifelse(
                   iX14b %in% c(0, 1),
                   ifelse(
                     iE3n %in% c(0, 1, 2),
                     ifelse(iEEE2 %in% c(0, 1), 0,
                            ifelse(iEEE2 %in% c(2, 3, 4), 2, NA)),
                     ifelse(iE3n %in% c(3, 4), 4, NA)
                   ),
                   ifelse(
                     iX14b == 2,
                     ifelse(iE1qq %in% c(0, 1, 2), 1,
                            ifelse(iE1qq %in% c(3, 4), 3, NA)),
                     ifelse(iX14b %in% c(3, 4), 4, NA)
                   )
                 ),
                 ifelse(
                   iX14a == 2,
                   ifelse(iE1vv %in% c(0, 1, 2), 3,
                          ifelse(iE1vv %in% c(3, 4), 5, NA)),
                   ifelse(iX14a %in% c(3, 4), 5, NA)
                 )
               ),
               ifelse(T_age >= 12,
                      ifelse(
                        iX14a %in% c(0, 1),
                        ifelse(
                          iX14b %in% c(0, 1),
                          ifelse(
                            iE1iii %in% c(0, 1, 2),
                            ifelse(
                              iE1xx %in% c(0, 1, 2),
                              ifelse(
                                iY1ao %in% c(0, 1, 2),
                                ifelse(iX1d == 0, 1, 2),
                                ifelse(iY1ao %in% c(3, 4, 5), 3, NA)
                              ),
                              ifelse(iE1xx %in% c(3, 4), 3, NA)
                            ),
                            ifelse(iE1iii %in% c(3, 4), 3, NA)
                          ),
                          ifelse(iX14b == 2,
                                 3,
                                 ifelse(iX14b %in% c(3, 4),
                                        5,
                                        NA))
                        ),
                        ifelse(
                          iX14a == 2,
                          ifelse(
                            iX1c %in% c(0, 1, 2, 3, 4),
                            ifelse(
                              iBB5f %in% c(0, 8),
                              ifelse(iX2a %in% c(0, 1),
                                     3,
                                     ifelse(iX2a %in% c(2, 3, 4, 5),
                                            4,
                                            NA)),
                              ifelse(iBB5f == 1, 4, NA)
                            ),
                            ifelse(iX1c == 5, 4, NA)
                          ),
                          ifelse(iX14a %in% c(3, 4),
                                 ifelse(
                                   iEEE2 %in% c(0, 1),
                                   ifelse(iE1qqq == 0,
                                          5,
                                          ifelse(iE1qqq %in% c(1, 2, 3, 4),
                                                 6,
                                                 NA)),
                                   ifelse(iEEE2 %in% c(2, 3, 4),
                                          6,
                                          NA)
                                 ),
                                 NA)
                        )
                      ), NA)
             )
           ))

# test <- df %>% filter(T_age >= 12 & iX14a >=3) %>% select(EMHID,T_age, iX14a, iBB5f, iEEE2, iE1qqq, sCHAMHPS)
```

## Distractibility/Hyperactivity Scale (sCYDISTRACT) {#sCYDISTRACT}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for sCYDISTRACT**

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYDISTRACT", ][,1:2])
```

**sCYDISTRACT Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scydistract_var <- filter(varsummary, iCodes == "iE1oo"| iCodes == "iE1pp"| 
                                      iCodes == "iE1qq"| iCodes == "iE1rr")

vartable <- scydistract_var %>% kbl(caption = "sCYDISTRACT variable label information
                                               and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYDISTRACT Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validact = case_when(
    iE1oo %in% c(0,1,2,3,4) &
    iE1pp %in% c(0,1,2,3,4)&
    iE1qq %in% c(0,1,2,3,4)&
    iE1rr %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**sCYDISTRACT Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYDISTRACT = case_when(validact == 1 ~ (
                    iE1oo +iE1pp +iE1qq + iE1rr)))
```

**sCYDISTRACT Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}

sCYDISTRACTtest <- subset(df, select=c("iE1oo","iE1pp","iE1qq","iE1rr"))
sCYDISTRACTdf <- sCYDISTRACTtest[complete.cases(sCYDISTRACTtest),]
scydistract_rel <- psych::reliability(sCYDISTRACTdf)

```

## Family Functioning Scale (sCYFAMILY) {#sCYFAMILY}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for Family Functioning Scale**

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == 
                               "sCYFAMILY", ][,1:2])
```

**sCYFAMILY Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scyfamily_var <- filter(varsummary, iCodes == "RS_G3"| iCodes == "iF8a"| 
                                    iCodes == "iP19d"| iCodes == "iP19h"| 
                                    iCodes == "iP24a"| iCodes == "iP24b"| 
                                    iCodes == "iY8a")

vartable <- scyfamily_var %>% kbl(caption = "sCYFAMILY variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYFAMILY Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validily = case_when(
  iF8a %in% c(0,1) &
  iP19d %in% c(0,1,8) &
  iP19h %in% c(0,1,8) &
  iY7a %in% c(0,1) &
  iY7b %in% c(0,1) &
  iY8a %in% c(0,1,8) ~ 1, TRUE ~ 0))
```

**sCYFAMILY Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYFAMILY = case_when(validily == 1 ~ 
      case_when(iP19d %in% c(0,1) & iP19h %in% c(0,1) & iY8a %in% c(0,1) ~
      case_when(iF8a == 0 ~ (1 + iP19d + iP19h + iY7a + iY7b + iY8a), 
                iF8a == 1 ~ (iP19d + iP19h + iY7a + iY7b + iY8a)))))
```

**sCYFAMILY Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}

sCYFAMILYtest <- df %>% subset( 
      select=c("iF8a","iP19d","iP19h","iY7a","iY7b","iY8a"))# %>% drop_na(iF8a)

sCYFAMILYtest<- sCYFAMILYtest %>% filter(iP19h!=8&iP19d!=8&iY8a!=8 )

#sCYFAMILYtest$comb <- sCYFAMILYtest$iF8a

sCYFAMILYtest$iF8a<-ifelse(sCYFAMILYtest$iF8a==1, 0, ifelse(sCYFAMILYtest$iF8a==0 ,1, NA))

sCYFAMILYdf <- sCYFAMILYtest[complete.cases(sCYFAMILYtest),]

scyfamily_rel <- psych::reliability(sCYFAMILYdf)

```

## Sleep Scale (sCYSLEEP) {#sCYSLEEP}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for the Sleep Scale**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYSLEEP", ][,1:2])
```

**sCYSLEEP Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scysleep_var <- filter(varsummary, iCodes == "iE1yyy"| iCodes == "iE1zzz"| 
                                   iCodes == "iE1aaaa"| iCodes == "iE1bbbb")

vartable <- scysleep_var %>% kbl(caption = "sCYSLEEP variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYSLEEP Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(valideep = case_when(
  iE1yyy %in% c(0,1,2,3,4) &
  iE1zzz %in% c(0,1,2,3,4)&
  iE1aaaa %in% c(0,1,2,3,4)&
  iE1bbbb %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**sCYSLEEP Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYSLEEP = case_when(valideep == 1 ~ (iE1yyy +iE1zzz +iE1aaaa +
                                                            iE1bbbb)))
```

**sCYSLEEP Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYSLEEPtest <- subset(df, select=c("iE1yyy","iE1zzz","iE1aaaa","iE1bbbb"))
sCYSLEEPdf <- sCYSLEEPtest[complete.cases(sCYSLEEPtest),]
scysleep_rel <- psych::reliability(sCYSLEEPdf)

```

## Activities of Daily Living Scale (sCYADL & ADL scale) {#sCYADL}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for Activities of Daily Living Scale**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYADL", ][,1:2])
```

**sCYADL Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scyadl_var <- filter(varsummary, iCodes == "iG2a"| iCodes == "iG2b"| 
                                 iCodes == "iG2c"| iCodes == "iG2d")

vartable <- scyadl_var %>% kbl(caption = "sCYADL variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYADL Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validadl = case_when(
  iG2a %in% c(0,1,2,3,4,5,6,8) & 
  iG2b %in% c(0,1,2,3,4,5,6,8) & 
  iG2c %in% c(0,1,2,3,4,5,6,8) &
  iG2d %in% c(0,1,2,3,4,5,6,8) ~ 1, TRUE ~ 0))
```

**sCYADL Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYADL = case_when(validadl == 1 ~ 
        (case_when(iG2a == 0 ~ 0, iG2a %in% c(1,2,3,4,5) ~ 1, iG2a %in% c(6,8) ~ 2))+ 
        (case_when(iG2b == 0 ~ 0, iG2b %in% c(1,2,3,4,5) ~ 1, iG2b %in% c(6,8) ~ 2))+
        (case_when(iG2c == 0 ~ 0, iG2c %in% c(1,2,3,4,5) ~ 1, iG2c %in% c(6,8) ~ 2))+
        (case_when(iG2d == 0 ~ 0, iG2d %in% c(1,2,3,4,5) ~ 1, iG2d %in% c(6,8) ~ 2))))
```

**sCYADL Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYADLtest <- subset(df, select=c("iG2a","iG2b","iG2c","iG2d"))
sCYADLdf <- sCYADLtest[complete.cases(sCYADLtest),]
sCYADLdf <- sCYADLdf %>% mutate(
  iG2a = case_when(iG2a == 0 ~ 0, iG2a %in% c(1,2,3,4,5) ~ 1, iG2a %in% c(6,8) ~ 2),
  iG2b = case_when(iG2b == 0 ~ 0, iG2b %in% c(1,2,3,4,5) ~ 1, iG2b %in% c(6,8) ~ 2),
  iG2c = case_when(iG2c == 0 ~ 0, iG2c %in% c(1,2,3,4,5) ~ 1, iG2c %in% c(6,8) ~ 2),
  iG2d = case_when(iG2d == 0 ~ 0, iG2d %in% c(1,2,3,4,5) ~ 1, iG2d %in% c(6,8) ~ 2))
scyadl_rel <- psych::reliability(sCYADLdf)
```

## Anxiety Scale (sCYANXS) {#sCYANXS}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for the Anxiety Scale**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYANXS", ][,1:2])
```

**sCYANXS Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scyanxs_var <- filter(varsummary, iCodes == "iE1eee"| iCodes == "iE1fff"| 
                    iCodes == "iE1ggg"| iCodes == "iE1iii"| iCodes == "iE1kkk"| 
                    iCodes == "iE1lll"| iCodes == "iE1eeee")

vartable <- scyanxs_var %>% kbl(caption = "sCYANXS variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYANXS Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validnxs = case_when(
  iE1eee %in% c(0,1,2,3,4) & 
  iE1fff %in% c(0,1,2,3,4) & 
  iE1ggg %in% c(0,1,2,3,4) & 
  iE1iii %in% c(0,1,2,3,4) & 
  iE1kkk %in% c(0,1,2,3,4) & 
  iE1lll %in% c(0,1,2,3,4) & 
  iE1eeee %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**sCYANXS Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYANXS = case_when(validnxs == 1 ~ 
  iE1eee + iE1fff + iE1ggg + iE1iii + iE1kkk + iE1lll + iE1eeee))
```

**sCYANXS Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYANXStest <- subset(df, select=c("iE1eee","iE1fff","iE1ggg","iE1iii",
                                   "iE1kkk","iE1lll","iE1eeee"))
sCYANXSdf <- sCYANXStest[complete.cases(sCYANXStest),]
scyanxs_rel <- psych::reliability(sCYANXSdf)
```

## Disruptive and Aggressive Behaviour Scale (sCYDABS) {#sCYDABS}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for the Distruptive and Agressive Behaviour Scale**

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYDABS", ][,1:2])

```

**sCYDABS Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scydabs_var <- filter(varsummary, iCodes == "iE3l"| iCodes == "iE3m"| 
                        iCodes == "iE3n"| iCodes == "iE3q"| iCodes == "iE3r")

vartable <- scydabs_var %>% kbl(caption = "sCYDABS variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYDABS Itermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validdabs = case_when( 
  iE3l %in% c(0,1,2,3,4) &
  iE3m %in% c(0,1,2,3,4) &
  iE3n %in% c(0,1,2,3,4) &
  iE3q %in% c(0,1,2,3,4) &
  iE3r %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**sCYDABS Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYDABS = case_when(validdabs == 1 ~
                                          iE3l + iE3m + iE3n + iE3q + iE3r))
```

**sCYDABS Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYDABStest <- subset(df, select=c("iE3l","iE3m","iE3n","iE3q","iE3r"))
sCYDABSdf <- sCYDABStest[complete.cases(sCYDABStest),]
scydabs_rel <- psych::reliability(sCYDABSdf)
```

## Depressive Severity Index (sCYDSI) {#sCYDSI}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for Depressive Severity Index**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYDSI", ][,1:2])
```

sCYDSI Variable Summary Table

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scydsi_var <- filter(varsummary, iCodes == "iE1ss"| iCodes == "iE1vv"| 
                        iCodes == "iE1ww"| iCodes == "iE1xx"| iCodes == "iE1yy")

vartable <- scydsi_var %>% kbl(caption = "sCYDSI variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYDSI Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validdsi = case_when(
  iE1ss %in% c(0,1,2,3,4) &
  iE1vv %in% c(0,1,2,3,4) &
  iE1ww %in% c(0,1,2,3,4) &
  iE1xx %in% c(0,1,2,3,4) &
  iE1yy %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**sCYDSI Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYDSI = case_when(validdsi == 1 ~ 
        (case_when(iE1ss %in% c(0,1,2,3) ~ + iE1ss, iE1ss == 4 ~ + 3)) +
        (case_when(iE1vv %in% c(0,1,2,3) ~ + iE1vv, iE1vv == 4 ~ + 3)) +
        (case_when(iE1ww %in% c(0,1,2,3) ~ + iE1ww, iE1ww == 4 ~ + 3)) +
        (case_when(iE1xx %in% c(0,1,2,3) ~ + iE1xx, iE1xx == 4 ~ + 3)) +
        (case_when(iE1yy %in% c(0,1,2,3) ~ + iE1yy, iE1yy == 4 ~ + 3))))
```

**sCYDSI Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYDSItest <- subset(df, select=c("iE1ss","iE1vv","iE1ww","iE1xx","iE1yy"))
sCYDSIdf <- sCYDSItest[complete.cases(sCYDSItest),]
sCYDSIdf <- sCYDSIdf %>% mutate(
  iE1ss = case_when(iE1ss == 4 ~ 3, iE1ss %in% c(0,1,2,3) ~ as.numeric(iE1ss)), 
  iE1vv = case_when(iE1vv == 4 ~ 3, iE1vv %in% c(0,1,2,3) ~ as.numeric(iE1vv)), 
  iE1ww = case_when(iE1ww == 4 ~ 3, iE1ww %in% c(0,1,2,3) ~ as.numeric(iE1ww)),
  iE1xx = case_when(iE1xx == 4 ~ 3, iE1xx %in% c(0,1,2,3) ~ as.numeric(iE1xx)),
  iE1yy = case_when(iE1yy == 4 ~ 3, iE1yy %in% c(0,1,2,3) ~ as.numeric(iE1yy)))
scydsi_rel <- psych::reliability(sCYDSIdf)
```

## Anhedonia Scale (sCYMHANHEDO & SOCDIS\_\_scale) {#sCYMHANHEDO}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information Anhedonia Scale**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYMHANHEDO", ][,1:2])
```

**sCYMHANHEDO Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scymhanhedo_var <- filter(varsummary, iCodes == "iE1qqq"| iCodes == "iE1rrr"| 
                                 iCodes == "iE1sss"| iCodes == "iE1ttt")

vartable <- scymhanhedo_var %>% kbl(caption = "sCYMHANHEDO variable label information
                                              and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYMHANHEDO Scale Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validedo = case_when(
  iE1qqq %in% c(0,1,2,3,4) &                                            
  iE1rrr %in% c(0,1,2,3,4) &                                                 
  iE1sss %in% c(0,1,2,3,4) &                                              
  iE1ttt %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**sCYMHANHEDO Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYMHANHEDO = case_when(validedo == 1 ~
                              iE1qqq + iE1rrr + iE1sss + iE1ttt))
```

**sCYMHANHEDO Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYMHANHEDOtest <- subset(df, select=c("iE1qqq","iE1rrr","iE1sss","iE1ttt"))
sCYMHANHEDOdf <- sCYMHANHEDOtest[complete.cases(sCYMHANHEDOtest),]
scymhanhedo_rel <- psych::reliability(sCYMHANHEDOdf)
```

## Peer Conflict Scale (sCYPEER) {#sCYPEEr, warning=FALSE, message=FALSE}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for the Peer Conflict Scale**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYPEER", ][,1:2])
```

**sCYPEER Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scypeer_var <- filter(varsummary, iCodes == "iP19b"| iCodes == "iP19e"| 
                                  iCodes == "iP19f")

vartable <- scypeer_var %>% kbl(caption = "sCYPEER variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYPEER Scale Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(valideer = case_when(
  iP19b %in% c(0,1,8) &
  iP19e %in% c(0,1,8) &
  iP19f %in% c(0,1,8) ~ 1, TRUE ~ 0))
```

**sCYPEER Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYPEER = case_when(valideer == 1 ~ 
            (case_when(iP19b == 1 ~ + 1, TRUE ~ 0) +
            case_when(iP19f == 1 ~ + 1, TRUE ~ 0) +
            case_when(iP19e == 1 ~ + 1, TRUE ~ 0))))
```

**sCYPEER Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYPEERtest <- subset(df, select=c("iP19b","iP19e","iP19f"))
sCYPEERdf <- sCYPEERtest[complete.cases(sCYPEERtest),]
scypeer_rel <- psych::reliability(sCYPEERdf)
```

## Externalizing Subscale (sEXTERN) {#sEXTERN}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for Externalizing Subscale**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sEXTERN", ][,1:2])
```

**sEXTERN Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scyextern_var <- filter(varsummary, iCodes == "iE15a"| iCodes == "iE15d"| 
                        iCodes == "iE15e"| iCodes == "iE1oo"| iCodes == "iE3m"|
                        iCodes == "iE3r"| iCodes == "iE3s"| iCodes == "iE3t"|
                        iCodes == "iX16c"| iCodes == "iX2a"| iCodes == "iX2b"|
                        iCodes == "iX2c")

vartable <- scyextern_var %>% kbl(caption = "sEXTERN variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sEXTERN Scale Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validext = case_when(
  iE15a %in% c(0,1,2,3,4,5) &
  iE15d %in% c(0,1,2,3,4,5) &
  iE15e %in% c(0,1,2,3,4,5) &
  iE1oo %in% c(0,1,2,3,4) & 
  iE3m %in% c(0,1,2,3,4) &
  iE3r %in% c(0,1,2,3,4) &
  iE3s %in% c(0,1,2,3,4) &
  iE3t %in% c(0,1,2,3,4) &
  iX16c %in% c(0,1,2,3,4,5) &
  iX2a %in% c(0,1,2,3,4,5) &
  iX2b %in% c(0,1,2,3,4,5) &
  iX2c %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))
```

**sEXTERN Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sEXTERN = case_when
(validext == 1 ~ 
  (case_when(iE15a == 0 ~ + 0, iE15a %in% c(1,2,3,4,5) ~ + 1)) + 
  (case_when(iE15d == 0 ~ + 0, iE15d %in% c(1,2,3,4,5) ~ + 1)) +
  (case_when(iE15e == 0 ~ + 0, iE15e %in% c(1,2,3,4,5) ~ + 1)) +
  (case_when(iE1oo == 0 ~ + 0, iE1oo %in% c(1,2,3,4) ~ + 1)) +  
  (case_when(iE3m == 0 ~ + 0, iE3m %in% c(1,2,3,4) ~ + 1)) +      
  (case_when(iE3r == 0 ~ + 0, iE3r %in% c(1,2,3,4) ~ + 1)) +   
  (case_when(iE3s == 0 ~ + 0, iE3s %in% c(1,2,3,4) ~ + 1)) +
  (case_when(iE3t == 0 ~ + 0, iE3t %in% c(1,2,3,4) ~ + 1)) +
  (case_when(iX16c == 0 ~ + 0, iX16c %in% c(1,2,3,4,5) ~ + 1)) +
  (case_when(iX2a == 0 ~ + 0, iX2a %in% c(1,2,3,4,5) ~ + 1)) +
  (case_when(iX2b == 0 ~ + 0, iX2b %in% c(1,2,3,4,5) ~ + 1)) +
  (case_when(iX2c == 0 ~ + 0, iX2c %in% c(1,2,3,4,5) ~ + 1))))
```

**sEXTERN Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sEXTERNtest <- subset(df, select=c("iE15a","iE15d","iE15e","iE1oo","iE3m","iE3r",
                                   "iE3s","iE3t","iX16c","iX2a","iX2b","iX2c"))
sEXTERNdf <- sEXTERNtest[complete.cases(sEXTERNtest),]
sEXTERNdf <- sEXTERNdf %>% mutate(
  iE15a = case_when(iE15a %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
  iE15d = case_when(iE15d %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
  iE15e = case_when(iE15e %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
  iE1oo = case_when(iE1oo %in% c(1,2,3,4) ~ 1, TRUE ~ 0),  
  iE3m = case_when(iE3m %in% c(1,2,3,4) ~ 1, TRUE ~ 0),       
  iE3r = case_when(iE3r %in% c(1,2,3,4) ~ 1, TRUE ~ 0),   
  iE3s = case_when(iE3s %in% c(1,2,3,4) ~ 1, TRUE ~ 0), 
  iE3t = case_when(iE3t %in% c(1,2,3,4) ~ 1, TRUE ~ 0),
  iX16c = case_when(iX16c %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0), 
  iX2a = case_when(iX2a %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0), 
  iX2b = case_when(iX2b %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0), 
  iX2c = case_when(iX2c %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0))
extern_rel <- psych::reliability(sEXTERNdf)
```

## Internalizing Subscale (sINTERN) {#sINTERN}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for sINTERN**

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sINTERN", ][,1:2])
```

**sINTERN Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}

scyintern_var <- filter(varsummary, iCodes == "iE1eee"| iCodes == "iE1eeee"| 
                        iCodes == "iEfff"| iCodes == "iEkkk"| iCodes == "iE1rrr"|
                        iCodes == "iE1sss"| iCodes == "iE1ttt"| iCodes == "iE1uu"|
                        iCodes == "iE1vv"| iCodes == "iE1ww" | iCodes == "iE1xx"|
                        iCodes == "iE1yy")

vartable <- scyintern_var %>% kbl(caption = "sINTERN variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sINTERN Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validint = case_when(
    iE1eee %in% c(0,1,2,3,4) &
    iE1eeee %in% c(0,1,2,3,4) &
    iE1fff %in% c(0,1,2,3,4) &
    iE1kkk %in% c(0,1,2,3,4) &
    iE1rrr %in% c(0,1,2,3,4) &
    iE1sss %in% c(0,1,2,3,4) &
    iE1ttt %in% c(0,1,2,3,4) &
    iE1uu %in% c(0,1,2,3,4) &
    iE1vv %in% c(0,1,2,3,4) &
    iE1ww %in% c(0,1,2,3,4) &
    iE1xx %in% c(0,1,2,3,4) &
    iE1yy %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0)) 
```

**sINTERN Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sINTERN = case_when(validint == 1 ~ 
                                      iE1eee + iE1eeee + iE1fff +
                                      iE1kkk + iE1rrr + iE1sss + iE1ttt +
                                      iE1uu + iE1vv + iE1ww + iE1xx + iE1yy))
```

**sINTERN Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sINTERNtest <- subset(df, select=c("iE1eee", "iE1eeee", "iE1fff", "iE1kkk", 
                                  "iE1rrr", "iE1sss", "iE1ttt", "iE1uu", "iE1vv",
                                  "iE1ww", "iE1xx", "iE1yy"))
sINTERNdf <- sINTERNtest[complete.cases(sINTERNtest),]
intern_rel <- psych::reliability(sINTERNdf)
```

## Risk of Suicide and Self Harm in Kids (sCYRISSK) {#sCYRISSK}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for CYRISSK**

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYRISSK", ][,1:2])
```

**sCYRISSK Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scyrissk_var <- filter(varsummary, iCodes == "iE1ss"| iCodes == "iE1tt"| 
                        iCodes == "iEvv"| iCodes == "iEww"| iCodes == "iE1xx"|
                        iCodes == "iE1yy"| iCodes == "iE1aaa"| iCodes == "iE1rrr"|
                        iCodes == "iE1ttt"| iCodes == "iE3w" | iCodes == "iP19h"|
                        iCodes == "iX1a" | iCodes == "iX1b" | iCodes == "iX1c" |
                        iCodes == "iX1d")

vartable <- scyrissk_var %>% kbl(caption = "sCYRISSK variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYRISSK Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validssk = case_when(
  iE1ss %in% c(0,1,2,3,4) &
  iE1tt %in% c(0,1,2,3,4) &
  iE1vv %in% c(0,1,2,3,4) &
  iE1ww %in% c(0,1,2,3,4) &
  iE1xx %in% c(0,1,2,3,4) &
  iE1yy %in% c(0,1,2,3,4) &
  iE1aaa %in% c(0,1,2,3,4) &
  iE1rrr %in% c(0,1,2,3,4) &
  iE1ttt %in% c(0,1,2,3,4) &
  iE3w %in% c(0,1,2,3,4) &
  iP19h %in% c(0,1,8) &
  iX1a %in% c(0,1,2,3,4,5) &
  iX1b %in% c(0,1,8) & 
  iX1c %in% c(0,1,2,3,4,5) &
  iX1d %in% c(0,1) ~ 1, TRUE ~ 0),
  xdsi = iE1ss + iE1tt + iE1vv + iE1ww + iE1xx +iE1yy + iE1aaa + iE1rrr + iE1ttt)
```

**sCYRISSK Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}

df <- df %>% mutate(sCYRISSK = case_when(validssk == 1 ~ 
                                           (case_when(iX1c == 0 ~
                                                        case_when(iX1d == 0 ~ 
                                                                    case_when(iX1a == 0 ~ 
                                                                                case_when(iE3w == 0 ~ 
                                                                                            case_when (xdsi >= 0 & xdsi <= 17 ~ 0,TRUE ~ 1),TRUE ~ 1),TRUE ~ 3)),
                                                      iX1c %in% c(1,2,3) ~ 
                                                        case_when(iX1a %in% c(0,1,2) ~ 
                                                                    case_when(iX1b %in% c(0,8) ~ 
                                                                                case_when(xdsi %in% c(0,1) ~ 1, 
                                                                                          xdsi >= 2 & xdsi <= 12 ~ 2, 
                                                                                          xdsi >= 13 & xdsi <= 36 ~ 3),TRUE ~ 
                                                                                case_when(iX1d == 0 ~ 2),TRUE ~ 4)),
                                                      iX1c == 4 ~ 
                                                        case_when(iX1d == 0 ~ 3,TRUE ~ 
                                                                    case_when(iX1b == 0 ~ 
                                                                                case_when(iP19h == 0 ~ 4, TRUE ~ 5),TRUE ~ 5)),
                                                      iX1c == 5 ~ 
                                                        case_when(iX1b %in% c(0,8) ~ 
                                                                    case_when (iX1d == 0 ~ 3,TRUE ~ 5),iX1a %in% c(0,1,2,3) ~ 5,TRUE ~ 6)))))

```

## Risk of Injury to Others (sCYRIO) {#sCYRIO}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for sCYRIO**

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYRIO", ][,1:2])
```

**sCYRIO Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scyrio_var <- filter(varsummary, iCodes == "iE1oo"| iCodes == "iE3l"| 
                        iCodes == "iE3m"| iCodes == "iE3n"| iCodes == "iE3q"|
                        iCodes == "iP19h"| iCodes == "iX2a"| iCodes == "iX2b"|
                        iCodes == "iX2c")

vartable <- scyrio_var %>% kbl(caption = "sCYRIO variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYRIO Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validrio = case_when(
    iE1oo %in% c(0,1,2,3,4) &
    iE3l %in% c(0,1,2,3,4) &
    iE3m %in% c(0,1,2,3,4) & 
    iE3n %in% c(0,1,2,3,4) & 
    iE3q %in% c(0,1,2,3,4) &
    iP19h %in% c(0,1,8) &
    iX2a %in% c(0,1,2,3,4,5) &
    iX2b %in% c(0,1,2,3,4,5) &
    iX2c %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xrio = case_when(validrio == 1 ~ iX2a + iX2b + iX2c))
```

**sCYRIO Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(xbeh = case_when(validrio ==1 ~ 
                    (case_when(iE3l %in% c(2,3,4) ~ iE3l-1) +
                     case_when(iE3n %in% c(2,3,4) ~ iE3n-1))))

df <- df %>% mutate(sCYRIO = case_when(validrio == 1 ~ 
                                         (case_when(iE3m == 0 ~ 
                                                      (case_when(xrio == 0 ~ 
                                                                   case_when(iE3q & iE3n %in% c(1,2,3,4) ~ 1,TRUE ~ 0))) +
                                                      (case_when(xrio %in% c(1,2) ~ 1, TRUE ~ 0)) +
                                                      (case_when(xrio %in% c(3,4) ~ 3, TRUE ~ 0)) +
                                                      (case_when(xrio >= 5 ~ 3, TRUE ~ 0)), TRUE ~ 0) +
                                            case_when(iE3m == 1 ~ 
                                                        (case_when(xrio %in% c(0,1) ~ 
                                                                     ((case_when(iE3q == 0 ~ 1, TRUE ~ 0)) +
                                                                        case_when(iE3q >= 1 ~ 
                                                                                    (case_when(iE1oo == 0 ~ 1, TRUE ~ 0) +
                                                                                       (case_when(iE1oo %in% c(1,2,3) ~ 2, TRUE ~ 0)) +
                                                                                       (case_when(iE1oo == 4 ~ 3, TRUE ~ 0))))), TRUE ~ 0) +
                                                           case_when(xrio %in% c(2,3,4,5) ~ 3, TRUE ~ 0) +
                                                           case_when(xrio >= 6 ~ case_when(iE3q & iE3n %in%
                                                                                            c(1,2,3,4) ~ 5,TRUE ~ 4), TRUE ~ 0)),
                                                      TRUE ~ 0) +
                                            case_when(iE3m == 2 ~
                                                        (case_when(xrio >= 0 & xrio <= 6 ~ 
                                                                     (case_when(xbeh %in% c(0,1) ~ 3, TRUE ~ 0) +
                                                                        case_when(xbeh >= 2 ~ 4,TRUE ~ 5)), TRUE ~ 0)), TRUE ~ 0) +
                                            case_when(iE3m == 3 ~ 
                                                        (case_when(xrio %in% c(0,1,2,3,4) ~ 3, TRUE ~ 0) +
                                                           case_when(xrio >= 5 ~ case_when(iP19h %in% c(0,8) ~ 4,TRUE ~ 5))), 
                                                      TRUE ~ 0) +
                                            case_when(iE3m == 4 ~ 
                                                        (case_when(xrio %in% c(0,1,2) ~ 4, TRUE ~ 0) +
                                                           case_when(xrio >= 3 & xrio <= 8 ~ 5, TRUE ~ 0)+ 
                                                           case_when(xrio >= 9 ~ 6, TRUE ~ 0)), TRUE ~ 0))))
```

## Deafblind Severity Index (sDbSI) {#sDbSI}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for sDbSI**

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sDbSI", ][,1:2])
```

**sDbSI Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scydbsi_var <- filter(varsummary, iCodes == "iD3a"| iCodes == "iD4a")

vartable <- scydbsi_var %>% kbl(caption = "sDbSI variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sDbSI Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validdbsi = case_when(
  iD3a %in% c(0,1,2,3,4) &
  iD4a %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**sDbSI Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sDbSI = case_when(validdbsi == 1 ~ 
                    (case_when(iD3a == 0 & iD4a == 0 ~  0, TRUE ~ 0) +
                    case_when(iD3a == 0 & iD4a %in% c(1,2) ~  1, TRUE ~ 0) +
                    case_when(iD3a %in% c(1,2) & iD4a == 0 ~  1, TRUE ~ 0) +
                    case_when(iD3a == 0 & iD4a %in% c(3,4) ~  2, TRUE ~ 0) +
                    case_when(iD3a %in% c(3,4) & iD4a == 0 ~  2, TRUE ~ 0) +
                    case_when(iD3a %in% c(1,2) & iD4a %in% c(1,2) ~  3, TRUE ~ 0) +
                    case_when(iD3a %in% c(1,2) & iD4a %in% c(3,4) ~  4, TRUE ~ 0) +
                    case_when(iD3a %in% c(3,4) & iD4a %in% c(1,2) ~  4, TRUE ~ 0) +
                    case_when(iD3a %in% c(3,4) & iD4a %in% c(3,4) ~  5, TRUE ~ 0))))
```

## Parenting Strengths Scale (sCYPS) {#sCYPS}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for sCYPS**

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYPS", ][,1:2])
```

**sCYPS Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scyps_var <- filter(varsummary, iCodes == "iP15a"| iCodes == "iP15b"| 
                        iCodes == "iP15c"| iCodes == "iP15d"| iCodes == "iP15e"|
                        iCodes == "iP15f")

vartable <- scyps_var %>% kbl(caption = "sCYPS variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYPS Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validps = case_when(
    iP15a %in% c(0,1,2) &
    iP15b %in% c(0,1,2) &
    iP15c %in% c(0,1,2) &
    iP15d %in% c(0,1,2) &
    iP15e %in% c(0,1,2) &
    iP15f %in% c(0,1,2) ~ 1, TRUE ~ 0))
```

**sCYPS Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYPS = case_when(validps == 1 ~
                (case_when(iP15a == 0 ~ + 2, iP15a == 1 ~ + 1, iP15a == 2 ~ + 0)) +
                (case_when(iP15b == 0 ~ + 2, iP15b == 1 ~ + 1, iP15b == 2 ~ + 0)) +
                (case_when(iP15c == 0 ~ + 2, iP15c == 1 ~ + 1, iP15c == 2 ~ + 0)) +
                (case_when(iP15d == 0 ~ + 2, iP15d == 1 ~ + 1, iP15d == 2 ~ + 0)) +
                (case_when(iP15e == 0 ~ + 2, iP15e == 1 ~ + 1, iP15e == 2 ~ + 0)) +
                (case_when(iP15f == 0 ~ + 2, iP15f == 1 ~ + 1, iP15f == 2 ~ + 0))))
```

**sCYPS Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYPStest <- subset(df, select=c("iP15a","iP15b","iP15c","iP15d","iP15e","iP15f"))
sCYPSdf <- sCYPStest[complete.cases(sCYPStest),]
sCYPSdf <- sCYPSdf %>% mutate(
  iP15a = case_when(iP15a == 0 ~ 2, iP15a == 1 ~ 1, iP15a == 2 ~ 0),
  iP15b = case_when(iP15b == 0 ~ 2, iP15b == 1 ~ 1, iP15b == 2 ~ 0),
  iP15c = case_when(iP15c == 0 ~ 2, iP15c == 1 ~ 1, iP15c == 2 ~ 0),
  iP15d = case_when(iP15d == 0 ~ 2, iP15d == 1 ~ 1, iP15d == 2 ~ 0),
  iP15e = case_when(iP15e == 0 ~ 2, iP15e == 1 ~ 1, iP15e == 2 ~ 0),
  iP15f = case_when(iP15f == 0 ~ 2, iP15f == 1 ~ 1, iP15f == 2 ~ 0))
scyps_rel <- psych::reliability(sCYPSdf)
```

## Severity of Self Harm Scale (sCYSOS) {#sCYSOS}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for sCYSOS**

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYSOS", ][,1:2])
```

**sCYSOS Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scysos_var <- filter(varsummary, iCodes == "iC1d"| iCodes == "iC2a"| iCodes == "iD1"|
                       iCodes == "iE1mmm"| iCodes == "iE1nnn"| iCodes == "iE1ooo"|
                       iCodes == "iE1ppp"| iCodes == "iE1ss"| iCodes == "iE1vv"|
                       iCodes == "iE1ww"| iCodes == "iE1xx"| iCodes == "iE1yy"|
                       iCodes == "iG2j"| iCodes == "iX1b"| iCodes == "iX1c"|
                       iCodes == "iX1d"| iCodes == "iX1e")

vartable <- scysos_var %>% kbl(caption = "sCYSOS variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYSOS Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validsos = case_when(
    iC1d %in% c(0,1,2,3,4,5) & 
    iC2a %in% c(0,1) & 
    iD1 %in% c(0,1,2,3,4) & 
    iE1mmm %in% c(0,1,2,3,4) & 
    iE1nnn %in% c(0,1,2,3,4) &
    iE1ooo %in% c(0,1,2,3,4) &
    iE1ppp %in% c(0,1,2,3,4) &
    iE1ss %in% c(0,1,2,3,4) &
    iE1vv %in% c(0,1,2,3,4) &
    iE1ww %in% c(0,1,2,3,4) &
    iE1xx %in% c(0,1,2,3,4) &
    iE1yy %in% c(0,1,2,3,4) &
    iG2j %in% c(0,1,2,3,4,5,6,8) &
    iX1b %in% c(0,1,8) &
    iX1c %in% c(0,1,2,3,4,5) &
    iX1d %in% c(0,1) &
    iX1e %in% c(0,1) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcsp1 = case_when(
  iC1d %in% c(0,1,2,3,4,5) &
  iD1 %in% c(0,1,2,3,4) &
  iC2a %in% c(0,1) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcps2 = case_when(
  iC1d %in% c(0,1,2,3,4,5) &
   iD1 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0)) 
```

**sCYSOS Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}

# Impairment count

df <- df %>% mutate(xcps1 = case_when(validsos == 1 ~ 
          (case_when(iC1d %in% c(1,2,3) ~ 1, TRUE ~ 0) +
           case_when(iD1 %in% c(1,2,3,4) ~ 1, TRUE ~ 0) +
           case_when(iC2a == 1 ~ + 1, TRUE ~ 0))))

# Severe imp count

df <- df %>% mutate(xcps2 = case_when(validsos == 1 ~ 
          (case_when(iC1d == 3 ~ 1, TRUE ~ 0) + 
           case_when(iD1 %in% c(3,4) ~ + 1, TRUE ~ 0))))

# Cog performance count

df <- df %>% mutate(xcps = 
                      case_when(validsos == 1 ~ (case_when(iC1d ==  5 ~ 6, TRUE ~ 0) +
                                                       case_when(iC1d == 4 ~ (
                                                         case_when(iC1d %in% c(6, 8) ~ 6, TRUE ~ 0) +
                                                           case_when(iG2j %in% c(0, 1, 2, 3, 4, 5) ~ 5, TRUE ~ 0)
                                                       ), TRUE ~ 0) +
                                                       case_when(iC1d >= 0 &
                                                                   iC1d < 4 ~ (
                                                                     case_when(xcps1 %in% c(2, 3) ~
                                                                                 (case_when(xcps2 == 2 ~ 4, TRUE ~ 0) +
                                                                                     case_when(xcps2 == 1 ~ 3, TRUE ~ 0) +
                                                                                     case_when(xcps2 == 0 ~ 2, TRUE ~ 0)
                                                                                 ), TRUE ~ 0) +
                                                                       case_when(xcps1 == 1 ~ 1, TRUE ~ 0) +
                                                                       case_when(xcps1 == 0 ~ 0, TRUE ~ 0)
                                                                   )))))
# Depressive Severity Count

df <- df %>% mutate(xdsi = case_when(validsos == 1 ~ 
  (case_when(iE1vv == 0 ~ 0, iE1vv %in% c(1,2) ~ 1, iE1vv %in% c(3,4) ~ 2) + 
   case_when(iE1ss == 0 ~ 0, iE1ss %in% c(1,2) ~ 1, iE1ss %in% c(3,4) ~ 2) +
   case_when(iE1ww == 0 ~ 0, iE1ww %in% c(1,2) ~ 1, iE1ww %in% c(3,4) ~ 2) +
   case_when(iE1xx == 0 ~ 0, iE1xx %in% c(1,2) ~ 1, iE1xx %in% c(3,4) ~ 2) +
   case_when(iE1yy == 0 ~ 0, iE1yy %in% c(1,2) ~ 1, iE1yy %in% c(3,4) ~ 2))))

# Positive Symptoms Count

df <- df %>% mutate(xpss = case_when(validsos == 1 ~ 
  (case_when(iE1mmm == 0 ~ + 0, iE1mmm %in% c(1,2) ~ + 1, iE1mmm %in% c(3,4) ~ + 2) +
   case_when(iE1nnn == 0 ~ + 0, iE1nnn %in% c(1,2) ~ + 1, iE1nnn %in% c(3,4) ~ + 2) +
   case_when(iE1ooo == 0 ~ + 0, iE1ooo %in% c(1,2) ~ + 1, iE1ooo %in% c(3,4) ~ + 2) +
   case_when(iE1ppp == 0 ~ + 0, iE1ppp %in% c(1,2) ~ + 1, iE1ppp %in% c(3,4) ~ + 2))))

## CY Severity of Self Harm Scale

df <-
  df %>% mutate(sCYSOS = 
                  case_when(validsos == 1 ~ (case_when(iX1c == 5 ~
                                                             (case_when(iX1b == 1 ~
                                                                           (case_when(xdsi >= 6 ~ 6, TRUE ~ 0) +
                                                                               case_when(xdsi < 6 ~ 5, TRUE ~ 0)), TRUE ~ 0) +
                                                                 case_when(iX1b %in% c(0, 8) ~(
                                                                       case_when(xdsi >= 6 & iX1e == 1 ~ 5, TRUE ~ 0) +
                                                                         case_when(xdsi >= 6 &
                                                                                     iX1e == 0 ~ 3, TRUE ~ 0) +
                                                                         case_when(xdsi < 6 &
                                                                                     iX1d == 1 ~ 4, TRUE ~ 0) +
                                                                         case_when(xdsi < 6 &
                                                                                     iX1d == 0 ~ 2, TRUE ~ 0)),
                                                                   TRUE ~ 0)), TRUE ~ 0) +
                                                   case_when(iX1c %in% c(3, 4) ~ (
                                                                 case_when(iX1b == 1 ~ 4, TRUE ~ 0) +
                                                                   case_when(iX1b %in% c(0, 8) ~ 3, TRUE ~ 0)
                                                               ), TRUE ~ 0) +
                                                   case_when(iX1c %in% c(0, 1, 2) ~(
                                                                 case_when(iX1b == 1 ~
                                                                             (case_when(xdsi >= 4 ~ 4, TRUE ~ 0) +
                                                                                 case_when(xdsi < 4 ~ 1, TRUE ~ 0)), TRUE ~ 0) +
                                                                   case_when(
                                                                     iX1b %in% c(0, 8) ~(
                                                                         case_when(xpss >= 3 & xcps >= 3 ~ 3, TRUE ~ 0) +
                                                                           case_when(xpss >= 3 & xcps < 3 ~ 2, TRUE ~ 0) +
                                                                           case_when(xpss < 3 & iX1d == 1 ~ 2, TRUE ~ 0) +
                                                                           case_when(xpss < 3 &
                                                                                       iX1d == 0 &
                                                                                       xcps >= 1 ~ 1, TRUE ~ 0) +
                                                                           case_when(xpss < 3 &
                                                                                       iX1d == 0 &
                                                                                       xcps == 0 ~ 0, TRUE ~ 0)),TRUE ~ 0)), TRUE ~ 0))))
```

**sCYSOS Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYSOStest <- subset(df, select=c("iC2a","iC1d","iD1","iE1mmm","iE1nnn","iE1ooo",
                                 "iE1ppp","iE1ss","iE1vv","iE1ww","iE1xx","iE1yy",
                                  "iG2j","iX1b","iX1c","iX1d","iX1e"))
sCYSOSdf <- sCYSOStest[complete.cases(sCYSOStest),]
scysos_rel <- psych::reliability(sCYSOSdf)
```

## Resource Intensity Child Youth Algorithm (sCYRIChY) {#sCYRIChY}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

Calculating the Resource Intensity Child Youth Algorithm requires that the Parenting Strengths Scale (\@ref(sCYPS)) has been calculated.

**interRAI Repository Information for sCYRIChY**

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYRIChY", ][,1:2])
```

**sCYRIChY Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scyrichy_var <- filter(varsummary, iCodes == "iE1yyy"| iCodes == "iE3q"| 
      iCodes == "iE15e"|iCodes == "iJ2k"| iCodes == "iJ2y"|iCodes == "iJ2dd"|
      iCodes == "iJ2gg"| iCodes == "iJ2ll"| iCodes == "iJ3"| iCodes == "iJ9a"|
      iCodes == "iJ9b"| iCodes == "iJ9c"| iCodes == "iJ9d"| iCodes == "iJ9e"|
      iCodes == "iJ9f"| iCodes == "iJ9g"| iCodes == "iP15a"| iCodes == "iP15b"| 
      iCodes == "iP15c"| iCodes == "iP15d"| iCodes == "iP15e"| iCodes == "iP15f"|
      iCodes == "iP19b"| iCodes == "iP19e"| iCodes == "iX2b"| iCodes == "iX16c"|
      iCodes == "iY1al"| iCodes == "iY1am"| iCodes == "iY1an"| iCodes == "iY1aq"|
      iCodes == "iY1ao"| iCodes == "iY1au"| iCodes == "iE1eee"| iCodes == "iE1fff"|
      iCodes == "iE1ggg"| iCodes == "iE1hhh"| iCodes == "iE1iii"| iCodes == "iE1kkk"|
      iCodes == "iE1lll"| iCodes == "iE1eeee"| iCodes == "iF8a"| iCodes == "iP19d"|
      iCodes == "iP19h"| iCodes == "iP24a"| iCodes == "iP24b"| iCodes == "iY8a"|
      iCodes == "iE1oo"| iCodes == "iE1mmm"| iCodes == "iE1nnn"| iCodes == "iE1ooo"|
      iCodes == "iE1ppp"| iCodes == "iE1ss"| iCodes == "iE1tt"| iCodes == "iE1vv"| 
      iCodes == "iE1ww"| iCodes == "iE1xx"| iCodes == "iE1yy"| iCodes == "iE1aaa"|
      iCodes == "iE1rrr"| iCodes == "iE1ttt"| iCodes == "iY1ab"| iCodes == "iX1c"|
      iCodes == "iX1d"| iCodes == "iX1e"| iCodes == "iX2a"| iCodes =="iX2c")

vartable <- scyrichy_var %>% kbl(caption = "sCYRIChY variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYRIChY Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validrichy = case_when(
  iE1yyy %in% c(0,1,2,3,4) & 
    iE3q %in% c(0,1,2,3,4) & 
    iE15e %in% c(0,1,2,3,4,5) &
    iJ2k %in% c(0,1,2,3,4) & 
    iJ2y %in% c(0,1,2,3,4) & 
    iJ2dd %in% c(0,1,2,3,4) & 
    iJ2gg %in% c(0,1,2,3,4) & 
    iJ2ll %in% c(0,1,2,3,4) &
    iJ3 %in% c(0,1,2,3) & 
    iJ9a %in% c(0,1) & 
    iJ9b %in% c(0,1) & 
    iJ9c %in% c(0,1) & 
    iJ9d %in% c(0,1) & 
    iJ9e %in% c(0,1) & 
    iJ9f %in% c(0,1) & 
    iJ9g %in% c(0,1) & 
    iP15a %in% c(0,1,2,8) &
    iP15b %in% c(0,1,2,8) &
    iP15c %in% c(0,1,2,8) &
    iP15d %in% c(0,1,2,8) &
    iP15e %in% c(0,1,2,8) &
    iP15f %in% c(0,1,2,8) &
    iP19b %in% c(0,1,8) &
    iP19e %in% c(0,1,8) &
    iX2b %in% c(0,1,2,3,4,5) &
    iX16c %in% c(0,1,2,3,4,5) &
    iY1al %in% c(0,1,2,3,4,5) &
    iY1am %in% c(0,1,2,3,4,5) & 
    iY1an %in% c(0,1,2,3,4,5) &
    iY1aq %in% c(0,1,2,3,4,5) &
    iY1ao %in% c(0,1,2,3,4,5) &
    iY1au %in% c(0,1,2,3,4,5) &
    iE1eee %in% c(0,1,2,3,4) & 
    iE1fff %in% c(0,1,2,3,4) & 
    iE1ggg %in% c(0,1,2,3,4) & 
    iE1hhh %in% c(0,1,2,3,4) & 
    iE1iii %in% c(0,1,2,3,4) & 
    iE1kkk %in% c(0,1,2,3,4) & 
    iE1lll %in% c(0,1,2,3,4) & 
    iE1eeee %in% c(0,1,2,3,4) & 
    iF8a %in% c(0,1) &
    iP19d %in% c(0,1,8) &
    iP19h %in% c(0,1,8) & 
    iY7a %in% c(0,1) &
    iY7b %in% c(0,1) &
    iY8a %in% c(0,1,8) & 
    iE1oo %in% c(0,1,2,3,4) &
    iE1nnn %in% c(0,1,2,3,4) & 
    iX1b %in% c(0,1,8) & 
    iX1c %in% c(0,1,2,3,4,5) & 
    iX1d %in% c(0,1) &
    iX1e %in% c(0,1) & 
    iE1ss %in% c(0,1,2,3,4) & 
    iE1tt %in% c(0,1,2,3,4) &
    iE1vv %in% c(0,1,2,3,4) &
    iE1ww %in% c(0,1,2,3,4) &
    iE1xx %in% c(0,1,2,3,4) &
    iE1yy %in% c(0,1,2,3,4) &
    iE1aaa %in% c(0,1,2,3,4) &
    iE1rrr %in% c(0,1,2,3,4) &
    iE1ttt %in% c(0,1,2,3,4) &
    iX2a %in% c(0,1,2,3,4,5) & 
    iX2c %in% c(0,1,2,3,4,5) &
    T_age > 0 & T_age < 130 &
    sCYPSS %in% c(0:12) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xsdsi =
                      iE1ss + iE1tt + iE1vv + iE1ww + iE1xx + iE1yy + 
                      iE1aaa + iE1rrr + iE1ttt)

df <- df %>% mutate(xsSOS =  case_when(
  iX1c == 5 ~ case_when(iX1b == 1 ~ 6, iX1b %in% c(0,8) ~ case_when(
    iX1e == 1 ~ 6, iX1e == 0 ~ case_when(xsdsi >= 9 ~ 5, xsdsi < 9 ~ case_when(
      iX1d == 1 ~ 4, iX1d == 0 ~ case_when(iE1nnn %in% c(1,2,3,4) ~ 5, 
                                           iE1nnn == 0 ~ 3))))),
  iX1c %in% c(3,4) ~ case_when(iX1b == 1 ~ 4, iX1b %in% c(0,8) ~ 3),
  
  iX1c %in% c(1,2) ~ case_when(iX1b == 1 ~ case_when(xsdsi >= 6 ~ 4,
                                                     xsdsi < 6 ~ case_when(
                                                       iX1d == 1 ~ case_when(
                                                         iE1nnn %in% c(1,2,3,4) ~ 5,
                                                         iE1nnn == 0 ~ 3), 
                                                       iX1d == 0 ~ case_when(
                                                         iE1nnn %in% c(1,2,3,4) ~ 4,
                                                         iE1nnn == 0 ~ 3))),
                               iX1b %in% c(0,8) ~ case_when(iE1nnn %in% 
                                                              c(1,2,3,4) ~ 3,
                                                            iE1nnn == 0 ~ 
                                                              case_when(
                                                                iX1d == 1 ~ 2,
                                                                iX1d == 0 ~ 1))),
  iX1c == 0 ~ 0))

df <- df %>% mutate(validSSH = case_when(
    iE1oo %in% c(0,1,2,3,4) & 
    xsSOS %in% c(0,1,2,3,4,5,6) ~ 1, TRUE ~ 0))

```

**sCYRIChY Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}

df <- df %>% mutate(xparent = case_when(  ## added ip15e and iP15f (as per SAS)
  iP15a == 8 | iP15b == 8 | iP15c == 8 | iP15d == 8 | iP15e == 8 | iP15f ==8 ~ 1, TRUE ~ 0))

df <- df %>% mutate(xabuse = case_when(
  iY1al %in% c(1,2,3,4,5) ~ + 1, iY1am %in% c(1,2,3,4,5) ~ + 1, 
  iY1an %in% c(1,2,3,4,5) ~ + 1, iY1aq %in% c(1,2,3,4,5) ~ + 1, 
  iY1ao %in% c(1,2,3,4,5) ~ + 1, iY1au %in% c(1,2,3,4,5) ~ + 1))

df <- df %>% mutate(xmedsym = case_when(
  iJ2k %in% c(1,2,3,4) ~ + 1, iJ2y %in% c(1,2,3,4) ~ + 1, 
  iJ2dd %in% c(1,2,3,4) ~ + 1, iJ2gg %in% c(1,2,3,4) ~ + 1, 
  iJ2ll %in% c(1,2,3,4) ~ + 1, iJ3 %in% c(1,2,3) ~ + 1, iJ9a == 1 ~ + 1,
  iJ9b == 1 ~ + 1, iJ9c == 1 ~ + 1, iJ9d == 1 ~ + 1, iJ9e == 1 ~ + 1, 
  iJ9f == 1 ~ + 1, iJ9g == 1 ~ + 1))

df <- df %>% mutate(xsANXIETY =  
  iE1eee + iE1fff + iE1ggg + iE1hhh + iE1iii + iE1kkk + iE1lll + iE1eeee)

df <- df %>% mutate(xsFAMILY = case_when(
  iP18d != 8 & iP19h !=8 & iY8a != 8 ~ case_when(
    iF8a == 0 ~ 1 + iP19d + iP19h + iY7a + iY7b + iY8a,
    iF8a == 1 ~ iP19d + iP19h + iY7a + iY7b + iY8a)))

df <- df %>% mutate(xcSSH = case_when(
  xsSOS %in% c(5,6) ~ 2, xsSOS %in% c(3,4) ~ case_when(
    iE1oo >= 2 ~ 2, iE1oo < 2 ~ 1), xsSOS < 3 ~ 0))

df <- df %>% mutate(xsRHO = case_when(
  iX2a %in% c(4,5) ~ 6, iX2a %in% c(2,3) ~ case_when( 
    iX2c %in% c(4,5) | iX2b %in% c(4,5) | iX16c %in% c(4,5) ~ 6, iE1mmm %in%
      c(2,3,4) | iE1nnn %in% c(2,3,4) | iE1ooo %in% c(2,3,4) | iE1ppp %in% 
      c(2,3,4) ~ 5, TRUE ~ 4),
  iX2a %in% c(0,1) ~ case_when(iX2c %in% c(4,5) | iX2b %in% c(4,5) | 
                                 iX16c %in% c(4,5) ~ case_when(
                                   iE1mmm %in% c(2,3,4) | iE1nnn %in% c(2,3,4) 
                                   | iE1ooo %in% c(2,3,4) | iE1ppp %in% 
                                     c(2,3,4) ~ 3, TRUE ~ 2), TRUE ~
                                 case_when(
                                   iE1mmm %in% c(2,3,4) | iE1nnn %in% c(2,3,4) 
                                   | iE1ooo %in% c(2,3,4) | iE1ppp %in% 
                                     c(2,3,4) ~ 1, TRUE ~ 0))))
 
 df <- df %>% mutate(xcHARMOTH = case_when(
   xsRHO %in% c(5,6) ~ 2, xsRHO %in% c(3,4) ~ case_when(
     iE1oo %in% c(2,3,4) ~ 2, iE1oo < 2 ~ 1), xsRHO < 2 ~ 0))

df <- df %>% mutate(sCYRIChY = case_when(
  T_age <= 7 ~ case_when(
    iX2b %in% c(3,4,5) ~ 3, iX2b %in% c(0,1,2) ~ case_when(
      iE3q %in% c(2,3,4) ~ 1, iE3q %in% c(0,1) ~ 0)),
  
  T_age %in% c(8,9,10,11) ~ case_when(
    iP19b == 8 | iP19e == 8 ~ case_when(
      xsANXIETY >= 7 ~ 5, xsANXIETY %in% c(0,1,2,3,4,5,6) ~ 3),
    iP19b != 8 & iP19e != 8 ~ case_when(
      iE15e %in% c(2,3,4,5) | iP19b == 1 ~ case_when(
        sCYPS >= 3 | xparent == 1 ~ 4, 
        sCYPS %in% c(0,1,2) ~ case_when(
          iE1yyy %in% c(2,3,4) ~ 3, iE1yyy %in% c(0,1) ~ 2)), ## FOUND ERROR should iE1yyy %in% c(2, 3, 4) ~ 3???
      iE15e %in% c(0,1) & iP19b %in% c(0, 8) ~ case_when( # 0 or 8
        xsFAMILY >= 3 | iY8a == 8 ~ 3, xsFAMILY %in% c(0,1,2) ~ case_when(
          xabuse >= 1 | xmedsym >= 1 ~ 1, xabuse == 0 & xmedsym == 0 ~ 0)))), 
    T_age >= 12 ~ case_when(
    iE15e %in% c(2,3,4,5) | iP19b == 1 ~ case_when(
      xsANXIETY >= 10 ~ 3, xsANXIETY <= 9 ~ 5), 
    iE15e %in% c(0,1) & iP19b %in% c(0,8) ~ case_when( ## this one too
      xcSSH %in% c(1,2) ~ 4, xcSSH == 0 ~ case_when(
        xcHARMOTH %in% c(1,2) ~ 4, xcHARMOTH == 0 ~ case_when(
          xsFAMILY >= 1 | iY8a == 8 ~ case_when(
            xparent == 1 ~ 3, xparent == 0 ~ 2), xsFAMILY == 0 ~ 0))))))    
```

## School Disengagement Scale (sCYMHSDeS) {#sCYMHSDeS}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for sCYMHSDeS**

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYMHSDeS", ][,1:2])
```

**sCYMHSDeS Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scymhsdes_var <- filter(varsummary, iCodes == "iBB5a"| iCodes == "iBB5b"| 
                       iCodes == "iBB5e"| iCodes == "iBB5f"| iCodes == "iBB11a"|
                       iCodes == "iBB11b"| iCodes == "iBB10"| iCodes == "iBB14a")

vartable <- scymhsdes_var %>% kbl(caption = "sCYMHSDeS variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYMHSDeS Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validsdes = case_when(
    iBB5a %in% c(0,1,8) & 
    iBB5b %in% c(0,1,8) & 
    iBB5e %in% c(0,1,8) & 
    iBB5f %in% c(0,1,8) & 
    iBB11a %in% c(0,1) & 
    iBB11b %in% c(0,1) & 
    iBB10 %in% c(0,1,2,3) & 
    iBB14a %in% c(0,1,2,3,8) ~ 1, TRUE ~ 0))
```

**sCYMHSDeS Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYMHSDeS = case_when(validsdes == 1 ~ 
             (case_when(iBB5a == 1 ~ + 1, TRUE ~ 0) +
             case_when(iBB5b == 1 ~ + 1, TRUE ~ 0) +
             case_when(iBB5e == 1 ~ + 1, TRUE ~ 0) +
             case_when(iBB5f == 1 ~ + 1, TRUE ~ 0) +
             case_when(iBB10 %in% c(1,2,3) ~ + 1, TRUE ~ 0) +
             case_when(iBB11a == 1 ~ + 1, TRUE ~ 0) + 
             case_when(iBB11b == 1 ~ + 1, TRUE ~ 0) + 
             case_when(iBB14a %in% c(2,3) ~ + 1, TRUE ~ 0))))
```

**sCYMHSDeS Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYMHSDeStest <- subset(df, select=c("iBB5a","iBB5b","iBB5e","iBB5f", "iBB11a",
                                     "iBB11b", "iBB10","iBB14a"))
sCYMHSDeSdf <- sCYMHSDeStest[complete.cases(sCYMHSDeStest),]
sCYMHSDeSdf <- sCYMHSDeSdf %>% mutate(
  iBB5a = case_when(iBB5a == 1 ~ 1, TRUE ~ 0), 
  iBB5b = case_when(iBB5b == 1 ~ 1, TRUE ~ 0), 
  iBB5e = case_when(iBB5e == 1 ~ 1, TRUE ~ 0), 
  iBB5f = case_when(iBB5f == 1 ~ 1, TRUE ~ 0), 
  iBB11a = case_when(iBB11a == 1 ~ 1, TRUE ~ 0), 
  iBB11b = case_when(iBB11b == 1 ~ 1, TRUE ~ 0), 
  iBB10 = case_when(iBB10 %in% c(1,2,3) ~ 1, TRUE ~ 0),
  iBB14a = case_when(iBB14a %in% c(2,3) ~ 1, TRUE ~ 0))
scymhsdes_rel <- psych::reliability(sCYMHSDeSdf)
```

## Youth IADL Capacity Scale (sCYYIADLC) {#sCYYIADLC}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for sCYYIADLC**

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYYIADLC", ][,1:2])
```

**sCYYIADLC Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scyyiadlc_var <- filter(varsummary, iCodes == "iG1ab"| iCodes == "iG1bb"| 
                       iCodes == "iG1cb"| iCodes == "iG1db"| iCodes == "iG1eb"|
                       iCodes == "iG1fb"| iCodes == "iG1gb"| iCodes == "iG1hb"|
                       iCodes == "iG1nb"| iCodes == "iG1ob"| iCodes == "iG1pb")

vartable <- scyyiadlc_var %>% kbl(caption = "sCYYIADLC variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYYIADLC Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validiadlc = case_when(
    iG1ab %in% c(0,1,2,3,4,5,6) & 
    iG1bb %in% c(0,1,2,3,4,5,6) & 
    iG1cb %in% c(0,1,2,3,4,5,6) & 
    iG1db %in% c(0,1,2,3,4,5,6) & 
    iG1eb %in% c(0,1,2,3,4,5,6) & 
    iG1fb %in% c(0,1,2,3,4,5,6) & 
    iG1gb %in% c(0,1,2,3,4,5,6) & 
    iG1hb %in% c(0,1,2,3,4,5,6) & 
    iG1nb %in% c(0,1,2,3,4,5,6) & 
    iG1ob %in% c(0,1,2,3,4,5,6) & 
    iZZ1ab %in% c(0,1,2,3,4,5,6) &
    T_age > 0 & T_age < 130 ~ 1, TRUE ~ 0))
```

**sCYYIADLC Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(IADLC__scale = case_when(validiadlc == 1 ~ case_when(
  T_age >= 12 & T_age < 19 ~ 
    iG1ab + iG1bb + iG1cb + iG1db + iG1eb + iG1fb + iG1gb + iG1hb + iG1nb + iG1ob
  + iZZ1ab)))
```

**sCYYIADLC Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYYIADLCtest <- subset(df, select=c("iG1ab","iG1bb","iG1cb","iG1db","iG1eb",
                                     "iG1fb","iG1gb","iG1hb","iG1nb","iG1ob",
                                     "iZZ1ab"))
sCYYIADLCdf <- sCYYIADLCtest[complete.cases(sCYYIADLCtest),]
scyyiadlc_rel <- psych::reliability(sCYYIADLCdf)
```

## Youth IADL Performance Scale (sCYYIADLP) {#sCYYIADLP}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information for sCYYIADLP**

```{r, echo= FALSE}

kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "sCYYIADLP", ][,1:2])
```

**sCYYIADLP Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scyyiadlp_var <- filter(varsummary, iCodes == "iG1aa"| iCodes == "iG1ba"| 
                       iCodes == "iG1ca"| iCodes == "iG1da"| iCodes == "iG1ea"|
                       iCodes == "iG1fa"| iCodes == "iG1ga"| iCodes == "iG1ha"|
                       iCodes == "iG1na"| iCodes == "iG1oa"| iCodes == "iG1pa")

vartable <- scyyiadlp_var %>% kbl(caption = "sCYYIADLP variable label information and
                                          accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYYIADLP Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validiadlp = case_when(
    iG1aa %in% c(0,1,2,3,4,5,6,8) & 
    iG1ba %in% c(0,1,2,3,4,5,6,8) & 
    iG1ca %in% c(0,1,2,3,4,5,6,8) & 
    iG1da %in% c(0,1,2,3,4,5,6,8) & 
    iG1ea %in% c(0,1,2,3,4,5,6,8) & 
    iG1fa %in% c(0,1,2,3,4,5,6,8) & 
    iG1ga %in% c(0,1,2,3,4,5,6,8) & 
    iG1ha %in% c(0,1,2,3,4,5,6,8) & 
    iG1na %in% c(0,1,2,3,4,5,6,8) & 
    iG1oa %in% c(0,1,2,3,4,5,6,8) & 
    iZZ1aa %in% c(0,1,2,3,4,5,6,8) &
    T_age > 0 & T_age < 130 ~ 1, TRUE ~ 0))
```

**sCYYIADLP Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYYIADLP = case_when(validiadlp == 1 ~ case_when(
  T_age > 12 & T_age < 19 ~ 
    ((case_when(iG1aa %in% c(0,1,2,3,4,5,6) ~ + iG1aa, iG1aa == 8 ~ + 6)) + 
    (case_when(iG1ba %in% c(0,1,2,3,4,5,6) ~ + iG1ba, iG1ba == 8 ~ + 6)) + 
    (case_when(iG1ca %in% c(0,1,2,3,4,5,6) ~ + iG1ca, iG1ca == 8 ~ + 6)) + 
    (case_when(iG1da %in% c(0,1,2,3,4,5,6) ~ + iG1da, iG1da == 8 ~ + 6)) + 
    (case_when(iG1ea %in% c(0,1,2,3,4,5,6) ~ + iG1ea, iG1ea == 8 ~ + 6)) +
    (case_when(iG1fa %in% c(0,1,2,3,4,5,6) ~ + iG1fa, iG1fa == 8 ~ + 6)) +
    (case_when(iG1ga %in% c(0,1,2,3,4,5,6) ~ + iG1ga, iG1ga == 8 ~ + 6)) +
    (case_when(iG1ha %in% c(0,1,2,3,4,5,6) ~ + iG1ha, iG1ha == 8 ~ + 6)) +
    (case_when(iG1na %in% c(0,1,2,3,4,5,6) ~ + iG1na, iG1na == 8 ~ + 6)) +
    (case_when(iG1oa %in% c(0,1,2,3,4,5,6) ~ + iG1oa, iG1oa == 8 ~ + 6)) + 
    (case_when(iZZ1aa %in% c(0,1,2,3,4,5,6) ~ + iZZ1aa, iZZ1aa == 8 ~ + 6))))))
```

**sCYYIADLP Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYYIADLPtest <- subset(df, select=c("iG1aa","iG1ba","iG1ca","iG1da","iG1ea"
                                     ,"iG1fa","iG1ga","iG1ha","iG1na","iG1oa",
                                     "iZZ1aa"))
sCYYIADLPdf <- sCYYIADLPtest[complete.cases(sCYYIADLPtest),]
sCYYIADLPdf <- sCYYIADLPdf %>% mutate(
  iG1aa = case_when(iG1aa == 8 ~ 6, TRUE ~ as.numeric(iG1aa)),
  iG1ba = case_when(iG1ba == 8 ~ 6, TRUE ~ as.numeric(iG1ba)),
  iG1ca = case_when(iG1ca == 8 ~ 6, TRUE ~ as.numeric(iG1ca)), 
  iG1da = case_when(iG1da == 8 ~ 6, TRUE ~ as.numeric(iG1da)), 
  iG1ea = case_when(iG1ea == 8 ~ 6, TRUE ~ as.numeric(iG1ea)), 
  iG1fa = case_when(iG1fa == 8 ~ 6, TRUE ~ as.numeric(iG1fa)),
  iG1ga = case_when(iG1ga == 8 ~ 6, TRUE ~ as.numeric(iG1ga)),
  iG1ha = case_when(iG1ha == 8 ~ 6, TRUE ~ as.numeric(iG1ha)), 
  iG1na = case_when(iG1na == 8 ~ 6, TRUE ~ as.numeric(iG1na)), 
  iG1oa = case_when(iG1oa == 8 ~ 6, TRUE ~ as.numeric(iG1oa)), 
  iZZ1aa = case_when(iG1da == 8 ~ 6, TRUE ~ as.numeric(iG1da)))
scyyiadlp_rel <- psych::reliability(sCYYIADLPdf)
```

## Caregiver Distress Algorithm (iCCareD)

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

Calculating the Caregiver Distress Algorithm requires that the Parenting Strengths Scale (\@ref(sCYPS)), Aggressive Behaviours Scale (\@ref(sCYABS)) and the Disruptive and Aggressive Behaviour Scales (\@ref(sCYDABS)) have also been calculated.

**Caregiver Distress Algorithm Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
iccared_var <- filter(varsummary, iCodes == "iE15a"| iCodes == "iE15d"| 
                       iCodes == "iE15e"| iCodes == "iX16c"| iCodes == "iX2a"|
                       iCodes == "iX2b"| iCodes == "iX2c"| iCodes == "iY7a"|
                       iCodes == "iY1ap"| iCodes == "RS_G3"| iCodes == "iF8a"|
                       iCodes == "iP19d"| iCodes == "iP19e"| iCodes == "iY7b"|
                       iCodes == "iJ5a"| iCodes == "iE1zzz"| iCodes == "iE1ccc"|
                       iCodes == "iY9"| iCodes == "iX16a"| iCodes == "iE1hhh"|
                       iCodes == "iP19a"| iCodes == "iE1tt"| iCodes == "iY1au"|
                       iCodes == "iE1ss"| iCodes == "iE6"| iCodes == "iC9b"| 
                       iCodes == "iE18a")

vartable <- iccared_var %>% kbl(caption = "Caregiver Distress Algorithm variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Caregiver Distress Algorithm Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(ProactiveItem = 
            (case_when(iE15a== 0 ~ + 0, iE15a %in% c(1,2,3,4,5) ~ + 1)) +
            (case_when(iE15d== 0 ~ + 0, iE15d %in% c(1,2,3,4,5) ~ + 1)) + 
            (case_when(iE15e== 0 ~ + 0, iE15e %in% c(1,2,3,4,5) ~ + 1)) + 
            (case_when(iX16c== 0 ~ + 0, iX16c %in% c(1,2,3,4,5) ~ + 1)) +        
            (case_when(iX2a== 0 ~ + 0, iX2a %in% c(1,2,3,4,5) ~ + 1)) +           
            (case_when(iX2b== 0 ~ + 0, iX2b %in% c(1,2,3,4,5) ~ + 1)) +           
            (case_when(iX2c== 0 ~ + 0, iX2c %in% c(1,2,3,4,5) ~ + 1)))

df <- df %>% mutate(devMHsubst_Issues = 
              (case_when(iY7a & iY1ap == 0 ~ 0, TRUE ~ 0) +
              case_when(iY7a == 1 ~ 1, TRUE ~ 0) +
              case_when(iY1ap %in% c(1,2,3,4,5) ~ 1)))

df <- df %>% mutate(familyfunction = 
              (case_when(iF8a == 1 ~ 1, TRUE ~ 0) +
              case_when(iF8a == 0 ~  0, TRUE ~ 0) + 
              case_when(iP19d | iP19e == 1 ~  1, TRUE ~ 0) + 
              case_when(iP19d & iP19e == 0 ~  0, TRUE ~ 0) + 
              case_when(iY7a & iY1ap == 0 ~  0, TRUE ~ 0) + 
              case_when(iY7a == 1 | iY1ap %in% c(1,2,3,4,5) ~  1, TRUE ~ 0) + 
              case_when(iY7b == 1 ~  1, TRUE ~ 0) + 
              case_when(iY7b == 0 ~  0, TRUE ~ 0)))
                      
df <- df %>% mutate(validiccared = case_when(
    iJ5a %in% c(0,1,2,3) & 
    iE1zzz %in% c(0,1,2,3,4) & 
    iE1ccc %in% c(0,1,2,3,4) & 
    iY9 %in% c(0,1) & 
    iX1a %in% c(0,1,2,3,4,5) & 
    iE1hhh %in% c(0,1,2,3,4) & 
    iP19a %in% c(0,1,8) & 
    iE1tt %in% c(0,1,2,3,4) & 
    iY1au %in% c(0,1,2,3,4,5) & 
    iE1ss %in% c(0,1,2,3,4) & 
    iE6 %in% c(0,1,2,3,4,5) & 
    iC9b %in% c(0,1,8) & 
    iE18a %in% c(0,1) &
    sCYPS %in% c(0:12) & # parenting scale
    sCYPSS %in% c(0:12) & # positive symptom scale
    sCYDABS %in% c(0:20) ~ 1, TRUE ~ 0)) # agressive behaviour scale

```

**iCCareD Algorithm Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(iCCareD = case_when(validiccared == 1 ~ 
      
    (case_when(ProactiveItem == 0 ~ case_when(
    sCYPS == 12 ~ case_when(
      sCYABS == 0 ~ case_when(
        devMHsubst_Issues == 0 ~ case_when(
          iE1ccc == 0 ~ 1, iE1ccc %in% c(1,2,3,4) ~ 2),
        devMHsubst_Issues == 1 ~ 2),
      sCYABS >= 1 ~ case_when(
        iC9a == 0 ~ case_when(
          iY9 == 0 ~ 1, iY9 == 1 ~ 2),
        iC9a %in% c(1,8) ~ case_when(
          iX1a == 0 ~ 2, iX1a %in% c(1,2,3,4,5) ~ 3))),
    sCYPS %in% c(10,11) ~ case_when(
      devMHsubst_Issues == 0 ~ 1, 
      devMHsubst_Issues == 1 ~ 3),
    sCYPS %in% c(0,1,2,3,4,5,6,7,8,9) ~ case_when(
      iJ5a == 0 ~ case_when(
        iE1zzz == 0 ~ 2, iE1zzz %in% c(1,2,3,4) ~ 3),
      iJ5a %in% c(1,2,3) ~ 4)), TRUE ~ 0) +
  
    case_when(ProactiveItem %in% c(1,2) ~ case_when(
    familyfunction == 0 ~ case_when(
      sCYDABS %in% c(0,1,2,3,4,5,6,7) ~ case_when(
        iY1au == 0 ~ 1, iY1au %in% c(1,2,3,4,5) ~ 3),
      sCYDABS >= 8 ~ case_when(
        iE1ss == 0 ~ 1, iE1ss %in% c(1,2,3,4) ~ 3)),
    familyfunction == 1 ~ case_when(
      iE1hhh == 0 ~ case_when(
        iY9 == 0 ~ 2, iY9 == 1 ~ 4),
      iE1hhh %in% c(1,2,3,4) ~ 4),
    familyfunction >= 2 ~ case_when(
      iP19a == 0 ~ case_when(
        iE1ttt == 0 ~ 2, iE1ttt %in% c(1,2,3,4) ~ 3),
      iP19a == 1 ~ 4)), TRUE ~ 0) + 
  
    case_when(ProactiveItem %in% c(3,4,5,6,7) ~ case_when(
    sCYPS %in% c(7,8,9,10,11,12) ~ case_when(
      iE6 %in% c(1,2,3,4,5) ~ 5, 
      iE6 == 0 ~ case_when(
        devMHsubst_Issues == 0 ~ case_when(
          iX1a %in% c(0,1) ~ case_when(
            sCYDABS %in% c(0,1,2,3,4,5,6,7,8,9,10) ~ 2, 
            sCYDABS >= 11 ~ 4),
          iX1a %in% c(2,3,4,5) ~ 4),
        devMHsubst_Issues == 1 ~ case_when(
          iE18a == 1 ~ 3, 
          iE18a == 0 ~ 5))),
    sCYPS %in% c(0,1,2,3,4,5,6) ~ case_when(
      iC9b == 0 ~ 4, iC9b %in% c(1,8) ~ 5)), TRUE ~ 0))))
```

## Disruptive and Aggressive Behaviour Scale - Short Version (DABS-S)

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**DABS-S Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
dabss_var <- filter(varsummary, iCodes == "iE3l"| iCodes == "iE3m"| 
                                iCodes == "iE3n"| iCodes == "iE3q")

vartable <- dabss_var %>% kbl(caption = "DABS-S scale variable label information and 
                              accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**DABS-S Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validdabss = case_when(
  iE3l %in% c(0,1,2,3,4) &
  iE3m %in% c(0,1,2,3,4) &
  iE3n %in% c(0,1,2,3,4) &
  iE3q %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**DABS-S Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(DABSS = case_when(validdabss == 1 ~
                                          iE3l + iE3m + iE3n + iE3q))
```

**DABS-S Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
DABSStest <- subset(df, select=c("iE3l","iE3m","iE3n","iE3q"))
DABSSdf <- DABSStest[complete.cases(DABSStest),]
dabss_rel <- psych::reliability(DABSSdf)
```

## Externalizing Scale - Short Version (EXTS)

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**Externalizing Scale Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
exts_var <- filter(varsummary, iCodes == "iE15a"| iCodes == "iE15e"| 
                          iCodes == "iE1oo"| iCodes == "iE3l"| iCodes == "iX2a"|
                          iCodes == "iX2b"| iCodes == "iX2c")

vartable <- exts_var %>% kbl(caption = "Externalizing scale variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Externalizing Scale Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validexts = case_when(
    iE15a %in% c(0,1,2,3,4,5) &
    iE15e %in% c(0,1,2,3,4,5) &
    iE1oo %in% c(0,1,2,3,4) &
    iE3l %in% c(0,1,2,3,4) &
    iX2a %in% c(0,1,2,3,4,5) & 
    iX2b %in% c(0,1,2,3,4,5) & 
    iX2c %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))
```

**Externalizing Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(EXTS = case_when(validexts == 1 ~ 
   (case_when(iE15a == 0 ~ 0, iE15a %in% c(1,2,3,4,5) ~ 1)) + 
   (case_when(iE15e == 0 ~ 0, iE15e %in% c(1,2,3,4,5) ~ 1)) + 
   (case_when(iE1oo == 0 ~ 0, iE1oo %in% c(1,2,3,4) ~ 1)) + 
   (case_when(iE3l == 0 ~ 0, iE3l %in% c(1,2,3,4) ~ 1)) +
   (case_when(iX2a == 0 ~ 0, iX2a %in% c(1,2,3,4,5) ~ 1)) +
   (case_when(iX2b == 0 ~ 0, iX2b %in% c(1,2,3,4,5) ~ 1)) +
   (case_when(iX2c == 0 ~ 0, iX2c %in% c(1,2,3,4,5) ~ 1))))
```

**Externalizing Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
EXTStest <- subset(df, select=c("iE15a","iE15e","iE1oo","iE3l","iX2a","iX2b",
                                "iX2c"))
EXTSdf <- EXTStest[complete.cases(EXTStest),]
EXTSdf <- EXTSdf %>% mutate(
  iE15a = case_when(iE15a %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
  iE15e = case_when(iE15e %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
  iE1oo = case_when(iE1oo %in% c(1,2,3,4) ~ 1, TRUE ~ 0),  
  iE3l = case_when(iE3l %in% c(1,2,3,4) ~ 1, TRUE ~ 0), 
  iX2a = case_when(iX2a %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0), 
  iX2b = case_when(iX2b %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0), 
  iX2c = case_when(iX2c %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0))
exts_rel <- psych::reliability(EXTSdf)
```

## Internalizing Scale - Short Version (INTS)

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**Internalizing Scale Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
ints_var <- filter(varsummary, iCodes == "iE1eee"| iCodes == "iE1eeee"| 
                    iCodes == "iE1fff"| iCodes == "iE1kkk"| iCodes == "iE1rrr"|
                    iCodes == "iE1sss"| iCodes == "iE1ttt"| iCodes == "iE1vv"|
                    iCodes == "iE1ww"| iCodes == "iE1xx"| iCodes == "iE1yy")

vartable <- ints_var %>% kbl(caption = "Internalizing scale variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Internalizing Scale Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validints = case_when(
    iE1eee %in% c(0,1,2,3,4) & 
    iE1eeee %in% c(0,1,2,3,4) &
    iE1fff %in% c(0,1,2,3,4) &
    iE1kkk %in% c(0,1,2,3,4) &
    iE1rrr %in% c(0,1,2,3,4) &
    iE1sss %in% c(0,1,2,3,4) &
    iE1ttt %in% c(0,1,2,3,4) &
    iE1vv %in% c(0,1,2,3,4) &
    iE1ww %in% c(0,1,2,3,4) &
    iE1xx %in% c(0,1,2,3,4) &
    iE1yy %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**Internalizing Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(INTS = case_when(validints == 1 ~ 
                                       iE1eee + iE1eeee + iE1fff + iE1kkk +
                                       iE1rrr + iE1sss + iE1ttt + iE1vv +
                                       iE1ww + iE1xx + iE1yy))
```

**Internalizing Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
INTStest <- subset(df, select=c("iE1eee","iE1eeee","iE1fff","iE1kkk","iE1rrr",
                                "iE1sss","iE1ttt","iE1vv","iE1ww","iE1xx",
                                "iE1yy"))
INTSdf <- INTStest[complete.cases(INTStest),]
ints_rel <- psych::reliability(INTSdf)
```

## Activites of Daily Living - More Complex (ADLcomplex)

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**ADL More Complex Scale Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
adlcomplex_var <- filter(varsummary, iCodes == "iG2a"| iCodes == "iG2b"| 
                                     iCodes == "iG2c"| iCodes == "iG2d")

vartable <- adlcomplex_var %>% kbl(caption = "ADL More Complex scale variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**ADL More Complex Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validadlcomplex = case_when(
    iG2a %in% c(0,1,2,3,4,5,6,8) & 
    iG2b %in% c(0,1,2,3,4,5,6,8) & 
    iG2c %in% c(0,1,2,3,4,5,6,8) & 
    iG2d %in% c(0,1,2,3,4,5,6,8) ~ 1, TRUE ~ 0))
```

**ADL More Complex Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(ADLcomplex = case_when(validadlcomplex == 1 ~ 
      (case_when(iG2a == 0 ~ 0, iG2a %in% c(1,2,3,4,5) ~ 1, iG2a == 6 ~ 2)) + 
      (case_when(iG2b == 0 ~ 0, iG2b %in% c(1,2,3,4,5) ~ 1, iG2b == 6 ~ 2)) +
      (case_when(iG2c == 0 ~ 0, iG2c %in% c(1,2,3,4,5) ~ 1, iG2c == 6 ~ 2)) +
      (case_when(iG2d == 0 ~ 0, iG2d %in% c(1,2,3,4,5) ~ 1, iG2d == 6 ~ 2))))
```

**ADL More Complex Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
ADLcomplextest <- subset(df, select=c("iG2a","iG2b","iG2c","iG2d"))
                                      
ADLcomplexdf <- ADLcomplextest[complete.cases(ADLcomplextest),]
ADLcomplexdf <- ADLcomplexdf %>% mutate(
  iG2a = case_when(iG2a == 0 ~ 0, iG2a %in% c(1,2,3,4,5) ~ 1, iG2a == 6 ~ 2), 
  iG2b = case_when(iG2b == 0 ~ 0, iG2b %in% c(1,2,3,4,5) ~ 1, iG2b == 6 ~ 2),
  iG2c = case_when(iG2c == 0 ~ 0, iG2c %in% c(1,2,3,4,5) ~ 1, iG2c == 6 ~ 2), 
  iG2d = case_when(iG2d == 0 ~ 0, iG2d %in% c(1,2,3,4,5) ~ 1, iG2d == 6 ~ 2))
adlcomplex_rel <- psych::reliability(ADLcomplexdf)
```

## Activities of Daily Living - Less Complex (ADLlesscomplex)

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**ADL Less Complex Scale Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
adlless_var <- filter(varsummary, iCodes == "iG2f"| iCodes == "iG2h"| 
                                  iCodes == "iG2j")

vartable <- adlless_var %>% kbl(caption = "ADL Less Complex scale variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**ADL Less Complex Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validadlless = case_when(
  iG2f %in% c(0,1,2,3,4,5,6,8) & 
  iG2h %in% c(0,1,2,3,4,5,6,8) &
  iG2j %in% c(0,1,2,3,4,5,6,8) ~ 1, TRUE ~ 0))
```

**ADL Less Complex Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(ADLlesscomplex = case_when(validadlless == 1 ~ 
  (case_when(iG2f == 0 ~ 0, iG2f %in% c(1,2,3,4,5) ~ 1, iG2f == 6 ~ 2))+
  (case_when(iG2h == 0 ~ 0, iG2h %in% c(1,2,3,4,5) ~ 1, iG2h == 6 ~ 2))+
  (case_when(iG2j == 0 ~ 0, iG2j %in% c(1,2,3,4,5) ~ 1, iG2j == 6 ~ 2))))
```

**ADL Less Complex Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
ADLlesstest <- subset(df, select=c("iG2f","iG2h","iG2j"))
ADLlessdf <- ADLlesstest[complete.cases(ADLlesstest),]
ADLlessdf <- ADLlessdf %>% mutate(
  iG2f = case_when(iG2f == 0 ~ 0, iG2f %in% c(1,2,3,4,5) ~ 1, iG2f == 6 ~ 2), 
  iG2h = case_when(iG2h == 0 ~ 0, iG2h %in% c(1,2,3,4,5) ~ 1, iG2h == 6 ~ 2),
  iG2j = case_when(iG2j == 0 ~ 0, iG2j %in% c(1,2,3,4,5) ~ 1, iG2j == 6 ~ 2))
adlless_rel <- psych::reliability(ADLlessdf)
```

## Cognitive Functioning Scale

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**Cognitive Functioning Scale Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
cognitive_var <- filter(varsummary, iCodes == "iC1d"| iCodes == "iC2a"| 
                            iCodes == "iC2b"| iCodes == "iD1"| iCodes == "iD2")

vartable <- cognitive_var %>% kbl(caption = "Cognitive Functioning scale variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Cognitive Functioning Scale Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validcognitive = case_when(
    iC1d %in% c(0,1,2,3,4,5) &
    iC2a %in% c(0,10) &
    iC2b %in% c(0,1) & 
    iD1 %in% c(0,1,2,3,4) & 
    iD2 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**Cognitive Functioning Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(cognitivefunction = case_when(validcognitive == 1 ~ 
        (case_when(iC1d == 0 ~ 0, iC1d %in% c(1,2,3,4,5) ~ 1)) +
        (case_when(iC2a == 0 ~ 0, iC2a == 1 ~ 1)) +
        (case_when(iC2b == 0 ~ 0, iC2b == 1 ~ 1)) +
        (case_when(iD1 == 0 ~ 0, iD1 %in% c(1,2,3,4) ~ 1)) +
        (case_when(iD2 == 0 ~ 0, iD2 %in% c(1,2,3,4) ~ 1))))
```

**Cognitive Functioning Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
cognitivefunctiontest <- subset(df, select=c("iC1d","iC2a","iC2b","iD1","iD2"))
cognitivefunctiondf <- cognitivefunctiontest[complete.cases(cognitivefunctiontest),]
cognitivefunctiondf <- cognitivefunctiondf %>% mutate(
  iC1d = case_when(iC1d %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0), 
  iD1 = case_when(iD1 %in% c(1,2,3,4) ~ 1, TRUE ~ 0), 
  iD2 = case_when(iD2 %in% c(1,2,3,4) ~ 1, TRUE ~ 0))
cognitivefunc_rel <- psych::reliability(cognitivefunctiondf)
```

## Caregiver Distress Scale

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**Caregiver Distress Scale Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
caregiver_var <- filter(varsummary, iCodes == "iY9"| iCodes == "iY8a"| 
                            iCodes == "iY8b"| iCodes == "iQ4"| iCodes == "iY7a")

vartable <- caregiver_var %>% kbl(caption = "Caregiver Distress scale variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Caregiver Distress Scale Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validcaregiver = case_when(
    iY9 %in% c(0,1,8) & 
    iY8a %in% c(0,1) & 
    iY8b %in% c(0,1) & 
    iQ4 %in% c(0,1) & 
    iY7a %in% c(0,1) ~ 1, TRUE ~ 0))
```

**Caregiver Distress Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(caregiverdistress = case_when(validcaregiver == 1 ~ case_when(
  iY9 == 8 ~ 0, iY9 == 0 ~ 0, iY9 == 1 ~ 1) + iY8a + iY8b + iQ4 + iY7a))
```

**Caregiver Distress Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
caregiverdistresstest <- subset(df, select=c("iY9","iY8a","iY8b","iQ4","iY7a"))
                                      
caregiverdistressdf <- caregiverdistresstest[complete.cases(caregiverdistresstest),]
caregiverdistressdf <- caregiverdistressdf %>% mutate(
  iY9 = case_when(iY9 == 1 ~ 1, TRUE ~ 0))
caregiverdist_rel <- psych::reliability(caregiverdistressdf)
```

## CY Risk of School Distruption Scale (sCYSchDis)

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**sCYSchDis Scale Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scyschdis_var <- filter(varsummary, iCodes == "iBB5a"| iCodes == "iBB5b"| 
                        iCodes == "iBB5f"| iCodes == "iBB5e"| iCodes == "iBB10"|
                        iCodes == "iBB11a"| iCodes == "iBB11b"| iCodes == "iBB4c")

vartable <- scyschdis_var %>% kbl(caption = "sCYSchDis scale variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYSchDis Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validSchDis = case_when(
      iBB5a %in% c(0,1) & 
      iBB5b %in% c(0,1) &
      iBB5f %in% c(0,1) &
      iBB5e %in% c(0,1) & 
      iBB10 %in% c(0,1,2,3) & 
      iBB11a %in% c(0,1) & 
      iBB11b %in% c(0,1) &
      iBB4c != 0 | 1 ~ 1, TRUE ~ 0))
```

**sCYSchDis Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYSchDis = case_when(validSchDis == 1 ~ case_when(
  iBB10 == 0 ~ 0, iBB10 %in% c(1,2) ~ 1, iBB10 == 3 ~ 2) + iBB5a + iBB5b +
    iBB5f + iBB5e + iBB11a + iBB11b))
```

**sCYSchDis Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYSchDistest <- subset(df, select=c("iBB5a","iBB5b","iBB5f","iBB5e",
                                     "iBB10","iBB11a","iBB11b"))
sCYSchDisdf <- sCYSchDistest[complete.cases(sCYSchDistest),]
sCYSchDisdf <- sCYSchDisdf %>% mutate(
  iBB10 = case_when(iBB10 == 3 ~ 2, iBB10 %in% c(1,2) ~ 1, TRUE ~ 0))
scyschdis_rel <- psych::reliability(sCYSchDisdf)
```

## Sensory Processing Difficulties (sCYSensDiff)

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**sCYSensDiff Scale Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scysensdiff_var <- filter(varsummary, iCodes == "iD28"| iCodes == "iD29"| 
                        iCodes == "iE3aa"| iCodes == "cE3ab"| iCodes == "cE3ac")

vartable <- scysensdiff_var %>% kbl(caption = "sCYSensDiff scale variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYSensDiff Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validSensDiff = case_when( 
    iD28 %in% c(0,1,2,3,4) &
    iD29 %in% c(0,1,2,3,4) &
    iE3aa %in% c(0,1,2,3,4) &
    oE3ab %in% c(0,1,2,3,4) & 
    oE3ac %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**sCYSensDiff Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYSensDiff = case_when(validSensDiff == 1 ~ 
            iD28 + iD29 + iE3aa + oE3ab + oE3ac))
```

**sCYSensDiff Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYSensDifftest <- subset(df, select=c("iD28","iD29","iE3aa","oE3ab","oE3ac"))
sCYSensDiffdf <- sCYSensDifftest[complete.cases(sCYSensDifftest),]
scysensdiff_rel <- psych::reliability(sCYSensDiffdf)
```

## CY Relational Strenghts Scale (sCYRelStren)

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**sCYRelStren Scale Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}
scyrelstren_var <- filter(varsummary, iCodes == "iP8"| iCodes == "iF15c"| 
                                      iCodes == "iF8a"| iCodes == "iF15d"| 
                                      iCodes == "iF15e"| iCodes == "iF15f")

vartable <- scyrelstren_var %>% kbl(caption = "sCYRelStren scale variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**sCYRelStren Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validrelstren = case_when(
    iP8 %in% c(0,1) & 
    iF15c %in% c(0,1) &
    iF8a %in% c(0,1) &
    iF15d %in% c(0,1) &
    iF15e %in% c(0,1) &
    iF15f %in% c(0,1) ~ 1, TRUE ~ 0))
```

**sCYRelStren Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCYRelStren = case_when(validrelstren == 1 ~ 
        (case_when(iP8 == 0 ~ 1, iP8 == 1 ~ 0)) +
        (case_when(iF15c == 0 ~ 1, iF15c == 1 ~ 0)) +
        (case_when(iF8a == 0 ~ 1, iF8a == 1 ~ 0)) +
        (case_when(iF15d == 0 ~ 1, iF15d == 1 ~ 0)) +
        (case_when(iF15e == 0 ~ 1, iF15e == 1 ~ 0)) +
        (case_when(iF15f == 0 ~ 1, iF15f == 1 ~ 0))))
```

**sCYRelStren Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCYRelStrentest <- subset(df, select=c("iP8","iF15c","iF8a","iF15d","iF15e",
                                       "iF15f"))
sCYRelStrendf <- sCYRelStrentest[complete.cases(sCYRelStrentest),]
sCYRelStrendf <- sCYRelStrendf %>% mutate(
  iP8 = case_when(iP8 == 1 ~ 0, TRUE ~ 1), 
  iF15c = case_when(iF15c == 1 ~ 0, TRUE ~ 1), 
  iF8a = case_when(iF8a == 1 ~ 0, TRUE ~ 1), 
  iF15d = case_when(iF15d == 1 ~ 0, TRUE ~ 1), 
  iF15e = case_when(iF15e == 1 ~ 0, TRUE ~ 1), 
  iP8 = case_when(iF15f == 1 ~ 0, TRUE ~ 1))
scyrelstren_rel <- psych::reliability(sCYRelStrendf)
```

## Adverse Life Events Inventory for Children (ALEIC)

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**ALEIC Variable Summary Table**

```{r, warning=FALSE, message=FALSE, echo=FALSE}

aleic_var <- filter(varsummary, iCodes == "iY1an"| iCodes == "iP19d"|
                     iCodes == "iY1ao"| iCodes == "iY1am"| iCodes == "iP19g"|
                     iCodes == "iY1au"| iCodes == "iB34a"| iCodes == "iB34b"|
                     iCodes == "iB34c"| iCodes == "iQ5a"| iCodes == "iQ5b"|
                     iCodes == "iY1at"| iCodes == "iY9"| iCodes == "iY8a"|
                     iCodes == "iY1ap"| iCodes == "RS_G6"| iCodes == "iB35"|
                     iCodes == "iB12"| iCodes == "iY1aq"| iCodes == "iY7b"|
                     iCodes == "iBB11b"| iCodes == "iY1ac"| iCodes == "iY1ar"|
                     iCodes == "iY1aa"| iCodes == "iY1aa"| iCodes == "iY1ak"|
                     iCodes == "iY1al"| iCodes == "iY1aj"| iCodes == "iY1ai")

vartable <- aleic_var %>% kbl(caption = "ALEIC variable label information and 
                                         accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**ALEIC Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validALEIC = case_when( 
      iY1an %in% c(0,1,2,3,4,5) & 
      iP19d %in% c(0,1,8) &
      iY1ao %in% c(0,1,2,3,4,5) &
      iY1am %in% c(0,1,2,3,4,5) &
      iP19g %in% c(0,1,8) &
      iY1au %in% c(0,1,2,3,4,5) &
      iB34a %in% c(0,1,2,3) &
      iB34b %in% c(0,1,2,3) &
      iB34c %in% c(0,1,2,3) &
      iQ5a %in% c(0,1,8) & 
      iQ5b %in% c(0,1,8) & 
      iY1at %in% c(0,1,2,3,4,5) & 
      iY9 %in% c(0,1,8) & 
      iY8a %in% c(0,1,8) & 
      iY1ap %in% c(0,1,2,3,4,5) & 
      iF8a %in% c(0,1) & 
      iB35 %in% c(0,1) &
      iB12 %in% c(0,1) & 
      iY1aq %in% c(0,1,2,3,4,5) & 
      iY7b %in% c(0,1) & 
      iBB11b %in% c(0,1) & 
      iY1ac %in% c(0,1,2,3,4,5) & 
      iY1ar %in% c(0,1,2,3,4,5) & 
      iY1aa %in% c(0,1,2,3,4,5) & 
      iY1ak %in% c(0,1,2,3,4,5) & 
      iY1al %in% c(0,1,2,3,4,5) & 
      iY1aj %in% c(0,1,2,3,4,5) & 
      iY1ai %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))
```

**ALEIC Recoded Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(
xiY1an = case_when(iY1an %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),  
xiP19d = case_when(iP19d %in% c(0,8) ~ 0, TRUE ~ 1),
xiY1ao = case_when(iY1ao %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0), 
xiY1am = case_when(iY1am %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0), 
xiY1au = case_when( iY1au %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
xiP19g = case_when(iP19g %in% c(0,8) ~ 0, TRUE ~ 1), 
xiB34a = case_when(iB34a %in% c(1,2,3) ~ 1, TRUE ~ 0), 
xiB34b = case_when(iB34b %in% c(1,2,3) ~ 1, TRUE ~ 0), 
xiB34c = case_when(iB34c %in% c(1,2,3) ~ 1, TRUE ~ 0), 
xiQ5a = case_when(iQ5a %in% c(0,8) ~ 0, TRUE ~ 1), 
xiQ5b = case_when(iQ5b %in% c(0,8) ~ 0, TRUE ~ 1), 
xiY1at = case_when(iY1at %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
xiY9 = case_when(iY9 %in% c(0,8) ~ 0, TRUE ~ 1), 
xiY8a = case_when(iY8a %in% c(0,8) ~ 0, TRUE ~ 1), 
xiY1ap = case_when(iY1ap %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
xiY1aq = case_when(iY1aq %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
xiY1ac = case_when(iY1ac %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
xiY1ar = case_when(iY1ar %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
xiY1aa = case_when(iY1aa %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
xiY1ak = case_when(iY1ak %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
xiY1al = case_when(iY1al %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
xiY1aj = case_when(iY1aj %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0),
xiY1ai = case_when(iY1ai %in% c(1,2,3,4,5) ~ 1, TRUE ~ 0))
```

**ALEIC Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(ALEIC = case_when(validALEIC == 1 ~ 
        (case_when(xiY1an == 0 ~ + 0, TRUE ~ 1) +
         case_when(xiP19d & xiY1ao == 0 ~ + 0, TRUE ~ 1) +
         case_when(xiY1am == 0 ~ + 0, TRUE ~ 1) +
         case_when(xiP19g & xiY1au == 0 ~ 0, TRUE ~ 1) +
         case_when(xiB34b & xiB34c & xiQ5a & xiQ5b == 0 ~ + 0, TRUE ~ 1) +
         case_when(xiB34a == 0 ~ + 0,  TRUE ~ 1) +
         case_when(xiY1at & xiY9 & xiY8a == 0 ~ + 0, TRUE ~ 1) +
         case_when(xiY1ap & iF8a == 0 ~ + 0, TRUE ~ 1) +
         case_when(iB35 & iB12 == 0 ~ 0, TRUE ~ 1) +
         case_when(xiY1aq == 0 ~ 0, TRUE ~ 1) +
         case_when(iY7b & iBB11b == 0 ~ + 0, TRUE ~ 1) +
         case_when(xiY1ac & xiY1ar == 0 ~ + 0, TRUE ~ 1) +
         case_when(xiY1aa == 0 ~ + 0, TRUE ~ 1) +
         case_when(xiY1ak & xiY1al == 0 ~ + 0, TRUE ~ 1) +
         case_when(xiY1aj == 0 ~ + 0, TRUE ~ 1) +
         case_when(xiY1ai == 0 ~ + 0, TRUE ~ 1))))

df <- df %>% 
    mutate(ALEIC__scale = rowSums(
    data.frame(
      PhysAbuse = ifelse(iY1an %in% c(1,2,3,4,5), 1, 0),
      EmoAbuse = ifelse(iP19d == 1 | iY1ao %in% c(1, 2, 3, 4, 5), 1, 0),
      SexAbuse = ifelse(iY1am %in% c(1,2,3,4,5), 1, 0),
      WitnessViolence = ifelse(iP19g == 1 | iY1au %in% c(1, 2, 3, 4, 5), 1, 0),
      PhysNeglect = ifelse(iB34b %in% c(1,2,3) | iB34c%in% c(1,2,3) | iQ5a ==1 | iQ5b ==1, 1, 0),
      EmoNeglect = ifelse(iB34a %in% c(1, 2, 3), 1, 0),
      Neglect = ifelse(iY1at %in% c(1, 2, 3, 4, 5) | iY9 ==1 | iY8a %in% c(1, 2, 3, 4, 5), 1, 0),
      Parental = ifelse(iY1ap %in% c(1, 2, 3, 4, 5)| iY7a ==1, 1, 0),
      Placement = ifelse(iB35 ==1 | iB12 ==1, 1, 0),
      Bullying = ifelse(iY1aq %in% c(1, 2, 3, 4, 5), 1, 0),
      MHStressors = ifelse(iY7b ==1| iBB11b ==1, 1, 0),
      DeathLoss = ifelse(iY1ac %in% c(1, 2, 3, 4, 5)| iY1ar %in% c(1, 2, 3, 4, 5), 1, 0),
      Accident = ifelse(iY1aa %in% c(1, 2, 3, 4, 5), 1, 0),
      Disaster = ifelse(iY1ak %in% c(1,2,3,4,5)| iY1al %in% c(1,2,3,4,5), 1, 0),
      WarZone = ifelse(iY1aj %in% c(1,2,3,4,5), 1, 0),
      Migration = ifelse(iY1ai %in% c(1,2,3,4,5), 1, 0)
    ), na.rm=TRUE))

```

**ALEIC Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
ALEICtest <- subset(df, select=c("xiY1an","xiP19d","xiY1au","xiY1ao","xiP19g",
                                 "xiY1am","xiB34a","xiB34b","xiB34c","xiQ5a","xiQ5b",
                                 "xiY1at","xiY9","xiY8a", "xiY1ap","iB35","iF8a",
                                 "iB12","xiY1aq","iY7a","iBB11b","xiY1ac","xiY1ar",
                                 "xiY1aa","xiY1ak","xiY1al","xiY1aj","xiY1ai"))
ALEICdf <- ALEICtest[complete.cases(ALEICtest),]
aleic_rel <- psych::reliability(ALEICdf)
```

## Communication Scale (sCOMM)

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**Communication Scale Variable Summary Table**

```{r, echo=FALSE, warning=FALSE, message=FALSE}
comm_var <- filter(varsummary, iCodes == "iD1"| iCodes == "iD2")

vartable <- comm_var %>% kbl(caption = "Communication scale variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Communication Scale Intermediary Variables**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(validcomm = case_when(
  iD1 %in% c(0,1,2,3,4) & 
  iD2 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**Communication Scale Calculation**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
df <- df %>% mutate(sCOMM = case_when(validcomm == 1 ~ iD1 + iD2))
```

**Communication Scale Reliability**

```{r, warning=FALSE, message=FALSE,eval=FALSE}
sCOMMtest <- subset(df, select=c("iD1","iD2"))
sCOMMdf <- sCOMMtest[complete.cases(sCOMMtest),]
scomm_rel <- psych::reliability(sCOMMdf)
```

## Scale Summary Table and Scale Reliability Metrics Table

```{r, warning=FALSE, message=FALSE,eval=FALSE}

scales <- as.data.frame(subset(df, select = 
                    c("sCYPSS","sCYRHO","sCHAMHPS","sCYFAMILY","sCYSLEEP",
                     "sCYANXS","sCYDSI","sCYPEER","sINTERN","sCYPS",
                     "sCYRIChY","sCYYIADLC",
                     "DABSS","INTS","ADLlesscomplex","caregiverdistress",
                     "sCYSensDiff","ALEIC","sCYABS","sASSC","sCYDISTRACT",
                     "sCYADL","sCYDABS","sCYMHANHEDO","sEXTERN",
                     "sCYRISSK","sDbSI",
                     "sCYMHSDeS","sCYYIADLP",
                     "EXTS","ADLcomplex",
                     "cognitivefunction","sCYSchDis","sCYRelStren","sCOMM")))

apply(scales, 2, max)

#Summary Statistics Table
st_options(plain.ascii = FALSE,       
           style = "rmarkdown", 
           subtitle.emphasis = FALSE,
           dfSummary.labels.col = FALSE)
st_options(dfSummary.custom.1 = 
             expression(
               paste("Q1 - Q3 :",
                     round(quantile(column_data, probs = .25, type = 2, 
                   names = FALSE, na.rm = TRUE), digits = 1), " - ",
                     round(quantile(column_data, probs = .75, type = 2, 
                   names = FALSE, na.rm = TRUE), digits = 1))))
stats_tbl <- dfSummary(scales, 
            varnumbers   = FALSE,
            na.col       = FALSE,
            style        = "grid",
            plain.ascii  = FALSE,
            headings     = FALSE,
            graph.magnif = .75, 
            max.distinct.values = 1)
stats_tbl$Variable <- sub("\\[.+\\]", "", stats_tbl$Variable)
view(stats_tbl, method = "viewer")
#Reliability Metrics Table 

Scale <- c("sCYPSS","sCYABS","sCYRHO","sASSC","sCYDISTRACT","sCYFAMILY",
           "sCYSLEEP","sCYADL","sCYANXS","sCYDABS","sCYDSI","sCYMHANHEDO",
           "sCYPEER","sEXTERN","sINTERN","sCYPS","sCYSOS","sCYMHSDeS","sCYYIADLC",
           "sCYYIADLP","sDEPRESSION_OLD","sANXIETY_OLD","sMANIA_OLD","DABSS","EXTS",
           "INTS","ADLcomplex","ADLlesscomplex","cognitivefunction","caregiverdistress",
           "sCYSchDis","sCYSensDiff","sCYRelStren","ALEIC","sCOMM")
scales_reliability <- rbind(scypss_rel[["result.df"]], scyabs_rel[["result.df"]], 
                        scyrho_rel[["result.df"]], scyassc_rel[["result.df"]], 
                        scydistract_rel[["result.df"]], scyfamily_rel[["result.df"]],
                        scysleep_rel[["result.df"]], scyadl_rel[["result.df"]],
                        scyanxs_rel[["result.df"]], scydabs_rel[["result.df"]],
                        scydsi_rel[["result.df"]], scymhanhedo_rel[["result.df"]], 
                        scypeer_rel[["result.df"]], extern_rel[["result.df"]],
                        intern_rel[["result.df"]], scyps_rel[["result.df"]], 
                        scysos_rel[["result.df"]],scymhsdes_rel[["result.df"]],
                        scyyiadlc_rel[["result.df"]], scyyiadlp_rel[["result.df"]],
                        dabss_rel[["result.df"]],
                        exts_rel[["result.df"]], ints_rel[["result.df"]],
                        adlcomplex_rel[["result.df"]], adlless_rel[["result.df"]],
                        cognitivefunc_rel[["result.df"]],
                        caregiverdist_rel[["result.df"]],
                        scyschdis_rel[["result.df"]], scysensdiff_rel[["result.df"]],
                        scyrelstren_rel[["result.df"]], aleic_rel[["result.df"]],
                        scomm_rel[["result.df"]])

rownames(scales_reliability) <- Scale[1:32]

#Creating the table with reliability metrics
rel_metrics <- scales_reliability %>% kbl(caption = "Reliability metrics for scales 
                                          using the psych::reliability function.", 
                                          digits = 2)
rel_metrics %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

# Calculating CAPs {#CAPs}

## CYMH Attachment CAP (cCYMHATTACH) {#cCYMHATTACH}

**Last Updated:** August 4, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information CYMH Attachment CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHATTACH", ][,1:2])
```

**CYMH Attachment CAP Variable Summary Table**

```{r, echo=FALSE,warning=FALSE, message=FALSE}
attach_var <- filter(varsummary, iCodes == "iB33"| iCodes == "iB34a"|
                     iCodes == "iB34b"| iCodes == "iB35"| iCodes == "iP16a"|
                     iCodes == "iP16b"| iCodes == "iY1am"| iCodes == "iY1an"|
                     iCodes == "iY1ar"| iCodes == "iY1ao"| iCodes == "iY1at"|
                     iCodes == "iY1au"| iCodes == "iP24a")

vartable <- attach_var %>% kbl(caption = "CYMH Attachment CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**CYMH Attachment CAP Intermediary Variables**

```{r,eval=FALSE}
 df <-  df %>% mutate(validattach = case_when(
  iB33 %in% c(0,1,2) & 
    iB34a %in% c(0,1,2,3) & 
    iB34b %in% c(0,1,2,3) & 
    iB35 %in% c(0,1) &
    iP16a %in% c(0,1,8) & 
    iP16b %in% c(0,1,8) & 
    iY1am %in% c(0,1,2,3,4,5) & 
    iY1an %in% c(0,1,2,3,4,5) & 
    iY1ao %in% c(0,1,2,3,4,5) & 
    iY1ar %in% c(0,1,2,3,4,5) & 
    iY1at %in% c(0,1,2,3,4,5) & 
    iY1au %in% c(0,1,2,3,4,5) & 
    iY7a %in% c(0,1) & 
    T_age <= 12 ~ 1, TRUE ~ 0))

df <-  df %>% mutate(xcymhattach1 = 
                       case_when(validattach == 1 ~ 
                                               (case_when(iB33 == 2 ~ + 1, TRUE ~ 0) +
                                                  case_when(iB34a %in% c(1,2) ~ + 1, TRUE ~ 0) +
                                                  case_when(iB34b %in% c(1,2) ~ + 1, TRUE ~ 0) +
                                                  case_when(iB34c %in% c(1,2) ~ + 1, TRUE ~ 0) +
                                                  case_when(iB35 == 1 ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1am %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1an %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1ao %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1ap %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1ar %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1at %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1au %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY7a == 1 ~ + 1, TRUE ~ 0))))

 df <-  df %>% mutate(xcymhattach2 = 
                        case_when(validattach == 1 ~ 
                                               (case_when(iP16a == 1 ~ + 1, TRUE ~ 0) +
                                                  case_when(iP16b ==1 ~ + 1, TRUE ~ 0) +
                                                  case_when(iP16c == 1 ~ + 1, TRUE ~ 0))))
```

**CYMH Attachment CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHATTACH = case_when( 
  xcymhattach1 >= 1 & xcymhattach2 >= 1 ~ 1, 
  xcymhattach1 == 0 | xcymhattach2 == 0 ~ 0))
```

## CYMH Caffeine Use CAP (cCYMHCAFFE) {#cCYMHCAFFE}

**Last Updated:** March 28, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Caffeine Use CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHCAFFE", ][,1:2])
```

**CYMH Caffeine Use CAP Variable Summary Table**

```{r, echo=FALSE}
caffe_var <- filter(varsummary, iCodes == "iW10")

vartable <- caffe_var %>% kbl(caption = "CYMH Caffeine Use CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**CYMH Caffeine Use CAP Intermediary Variables**

```{r,eval=FALSE}
 df <-  df %>% mutate('Caffeine Use' = case_when(
    iW10b %in% c(2,3) ~ 1, 
    iW10b < 2 ~ 0))

  df$'Caffeine Use'[df$'Caffeine Use'== 1] <- "Triggered"
  df$'Caffeine Use'[df$'Caffeine Use'== 0] <- "Not Triggered"
```

## CYMH Caregiver Distress (cCYMHCAREDIST) {#cCYMHCAREDIST}

**Last Updated:** Apr 29, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Caregiver Distress CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHCAREDIST", ][,1:2])
```

**CYMH Caregiver Distress CAP Variable Summary Table**

```{r, echo=FALSE}
caredist_var <- filter(varsummary, iCodes == "iB32a"| iCodes == "iB32b"|
                     iCodes == "iP19g"| iCodes == "iQ4"| iCodes == "iY1ap"|
                     iCodes == "iP24a"| iCodes == "iY8a"| iCodes == "iY8b"|
                     iCodes == "iY9")

vartable <- caredist_var %>% kbl(caption = "CYMH Caregiver Distress CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Caregiver Distress CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validcaredist = case_when(
    iB32a %in% c(0,1) & 
    iB32b %in% c(0,1) & 
    iP19g %in% c(0,1,8) & 
    iQ4 %in% c(0,1) & 
    iY1ap %in% c(0,1,2,3,4,5) & 
    iY7a %in% c(0,1) & 
    iY8a %in% c(0,1,8) & 
    iY8b %in% c(0,1,8) & 
    iY9 %in% c(0,1,8) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcymhcaredist = case_when(validcaredist == 1 ~ 
             (case_when(iB32a | iB32b == 1 ~ + 1, TRUE ~ 0) +
              case_when(iP19g == 1 ~ + 1, TRUE ~ 0) +
              case_when(iQ4 == 1 ~ + 1, TRUE ~ 0) +
              case_when(iY1ap %in% c(2,3,4,5) ~ + 1, TRUE ~ 0) +
              case_when(iY7a == 1 ~ + 1, TRUE ~ 0) +
              case_when(iY8a == 1 ~ + 1, TRUE ~ 0) +
              case_when(iY8b == 1 ~ + 1, TRUE ~ 0) +
              case_when(iY9 == 1 ~ + 1, TRUE ~ 0))))

```

**Caregiver Distress CAP Calculation**

```{r,eval=FALSE}

df <- df %>% mutate(cCYMHCAREDIST = case_when(
    xcymhcaredist >= 2 ~ 1, TRUE ~ 0))
  
 df$cCYMHCAREDIST[df$cCYMHCAREDIST== 1] <- "Triggered"
 df$cCYMHCAREDIST[df$cCYMHCAREDIST== 0] <- "Not Triggered"
 
```

## CYMH Communication CAP (cCYMHCOMM) {#cCYMHCOMM}

**Last Updated:** Apr 29, 2022

**Last Updated By:** Brooklyn Keminen

#interRAI Repository Information CYMH Communication CAP

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHCOMM", ][,1:2])
```

**CYMH Communication CAP Variable Summary Table**

```{r, echo=FALSE}
com_var <- filter(varsummary, iCodes == "iD1"| iCodes == "iD2")

vartable <- com_var %>% kbl(caption = "CYMH Communication CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Communication CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validcom = case_when(
  iD1 %in% c(0,1,2,3,4) & 
  iD2 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**Communication CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHCOMM = case_when(validcom == 1 ~ case_when(
  iD1 %in% c(2,3,4) | iD2 %in% c(2,3,4) ~ 1, 
  iD1 < 2 & iD2 < 2 ~ 0)))

 df$cCYMHCOMM[df$cCYMHCOMM== 1] <- "Triggered"
 df$cCYMHCOMM[df$cCYMHCOMM== 0] <- "Not Triggered"
```

## CYMH Control Interventions CAP (cCYMHCTRLINT) {#cCYMHCTRLINT}

**Last Updated:** Apr 29, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Control Interventions CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHCTRLINT", ][,1:2])
```

**CYMH Control Interventions CAP Variable Summary Table**

```{r, echo=FALSE}
ctrlint_var <- filter(varsummary, iCodes == "iE1nnn"| iCodes == "iM7"|
                     iCodes == "iN6c"| iCodes == "iX16a"| iCodes == "iX2a"|
                     iCodes == "iP16b"| iCodes == "iY1am"| iCodes == "iY1an"|
                     iCodes == "iX4"| iCodes == "iAA1a"| iCodes == "iAA1c"|
                     iCodes == "iAA1f")

vartable <- ctrlint_var %>% kbl(caption = "CYMH Control Interventions CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Control Interventions Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validctrlint = case_when(
  iE1nnn %in% c(0,1,2,3,4) & 
    iM7 %in% c(0,1,2,3,4,5,6,7,8,9) & 
    iN6c %in% c(0,1,2,3,4,5) & 
    iX1a %in% c(0,1,2,3,4,5) & 
    iX2a %in% c(0,1,2,3,4,5) & 
    iX4 %in% c(0,1,2) & 
    iAA1a %in% c(0,1,2,3,4,5) & 
    iAA1c %in% c(0,1,2,3,4,5) & 
    iAA1f %in% c(0,1,2,3,4,5) &
    sCYABS %in% c(0:12) & 
    sCYPSS %in% c(0:12) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcymhctrlint1 = case_when(validctrlint == 1 ~ 
            (case_when(iM7 %in% c(1,2,3,4,5,6,7,8,9) ~ + 1, TRUE ~ 0) +
            case_when(iN6c %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iAA1a %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iAA1c %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) + 
            case_when(iAA1f %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0))))

df <- df %>% mutate(xcymhctrlint2 = case_when(validctrlint == 1 ~ 
              (case_when(iE1nnn %in% c(2,3,4) ~ + 1, TRUE ~ 0) + 
               case_when(iX1a == 5 ~ + 1, TRUE ~ 0) +
               case_when(iX2a == 5 ~ + 1, TRUE ~ 0) + 
               case_when(iX4 == 2 ~ + 1, TRUE ~ 0) + 
               case_when(sCYABS >= 5 ~ + 1, TRUE ~ 0) +
               case_when(sCYPSS >= 8 ~ + 1, TRUE ~ 0))))
```

**Control Interventions CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHCTRLINT = case_when(validctrlint == 1 ~ 
        (case_when(xcymhctrlint1 & xcymhctrlint2 >= 1 ~ 2, TRUE ~ 0) +
         case_when(xcymhctrlint1 >= 1 & xcymhctrlint2 == 0 ~ 1, TRUE ~ 0)))) 

df$cCYMHCTRLINT[df$cCYMHCTRLINT== 1] <- "Triggered to minimize the need for control interventions (young persons not in a psychiatric emergency situation)"
df$cCYMHCTRLINT[df$cCYMHCTRLINT== 0] <- "Not Triggered"
```

## CYMH Criminality Prevention CAP (cCYMHCRIM) {#cCYMHCRIM}

**Last Updated:** Apr 29, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Criminality Prevention CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHCRIM", ][,1:2])
```

**CYMH Criminality Prevention CAP Variable Summary Table**

```{r, echo=FALSE}
crim_var <- filter(varsummary, iCodes == "iE1dddd"| iCodes == "iE15a"| iCodes == "iX2a")

vartable <- crim_var %>% kbl(caption = "CYMH Criminality Prevention CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Criminality Prevention CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validcrim = case_when(
    iE1dddd %in% c(0,1,2,3,4) & 
    iE15a %in% c(0,1,2,3,4,5) & 
    iX2a %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))
```

**Criminality Prevention CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHCRIM = case_when(validcrim == 1 ~ case_when(
  iE1dddd %in% c(1,2,3,4) | iE15a %in% c(2,3,4,5) | iX2a %in% c(2,3,4,5) ~ 1, 
  iE1dddd < 1 & iE15a < 2 & iX2a < 2 ~ 0)))

  df$cCYMHCRIM[df$cCYMHCRIM== 1] <- "Triggered"
  df$cCYMHCRIM[df$cCYMHCRIM== 0] <- "Not Triggered"
```

## CYMH Harm to Others CAP (cCYMHHARMOTH) {#cCYMHHARMOTH}

**Last Updated:** Apr 29, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Harm to Others CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHHARMOTH", ][,1:2])
```

**CYMH Harm to Others CAP Variable Summary Table**

```{r, echo=FALSE}
harmoth_var <- filter(varsummary, iCodes == "iE1oo")

vartable <- harmoth_var %>% kbl(caption = "CYMH Harm to Others CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Harm to Others CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validharmoth = case_when(
  iE1oo %in% c(0,1,2,3,4) & 
    sCYRHO %in% c(0,1,2,3,4,5,6) ~ 1, TRUE ~ 0))
```

**Harm to Others CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHHARMOTH = case_when(validharmoth == 1 ~ case_when(
  sCYRHO %in% c(5,6) ~ 2, 
  sCYRHO %in% c(3,4) ~ case_when(
    iE1oo %in% c(2,3,4) ~ 2, 
    iE1oo < 2 ~ 1),
  sCYRHO <= 2 ~ 0)))

   df$cCYMHHARMOTH[df$cCYMHHARMOTH == 2] <- "Triggered due to high risk of harm to others"
   df$cCYMHHARMOTH[df$cCYMHHARMOTH == 1] <- "Triggered due to moderate risk of harm to others"
   df$cCYMHHARMOTH[df$cCYMHHARMOTH == 0] <- "Not Triggered"
```

## CYMH Hazardous Fire Involvement CAP (cCYMHFIRE) {#cCYMHFIRE}

**Last Updated:** Apr 29, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Hazardous Fire Involvement CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHFIRE", ][,1:2])
```

**CYMH Hazardous Fire Involvement CAP Variable Summary Table**

```{r, echo=FALSE}
fire_var <- filter(varsummary, iCodes == "iC1d"| iCodes == "iE1oo"|
                     iCodes == "iE1mmm"| iCodes == "iE1nnn"| iCodes == "iE1ooo"|
                     iCodes == "iP15e"| iCodes == "iX18"| iCodes == "iY1am"|
                     iCodes == "iY1an"| iCodes == "iY1ao")

vartable <- fire_var %>% kbl(caption = "CYMH Hazardous Fire Involvement CAP 
                      variable label information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Hazardous Fire Involvement CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validfire = case_when(
    iC1d %in% c(0,1,2,3,4,5) & 
    iE1oo %in% c(0,1,2,3,4) & 
    iE1mmm %in% c(0,1,2,3,4) & 
    iE1nnn %in% c(0,1,2,3,4) & 
    iE1ooo %in% c(0,1,2,3,4) & 
    iP15e %in% c(0,1,2,8) & 
    iX18 %in% c(0,1,2,3,4,5) & 
    iY1am %in% c(0,1,2,3,4,5) & 
    iY1an %in% c(0,1,2,3,4,5) & 
    iY1ao %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcymhfire = case_when(validfire == 1 ~ case_when(
  iC1d %in% c(3,4) ~ + 1, 
  iE1oo %in% c(2,3,4) ~ + 1,
  iE1mmm %in% c(2,3,4) ~ + 1, 
  iE1nnn %in% c(2,3,4) ~ + 1, 
  iE1ooo %in% c(2,3,4) ~ + 1, 
  iP15e %in% c(2,8) ~ + 1, 
  iY1am %in% c(1,2,3,4,5) | iY1an %in% c(1,2,3,4,5) | 
    iY1ao %in% c(1,2,3,4,5) ~ + 1)))

```

**Hazardous Fire Involvement CAP Calculation**

```{r,eval=FALSE}

df <- df %>% mutate(cCYMHFIRE = case_when(validfire == 1 ~ case_when(
  iX18 %in% c(2,3,4,5) ~ case_when(
    xcymhfire >= 2 ~ 3, 
    xcymhfire == 1 ~ 2, 
    xcymhfire == 0 ~ 1), 
  iX18 < 2 ~ 0)))

```

## CYMH Informal Support CAP (cCYMHINFSUPP) {#cCYMHINFSUPP}

**Last Updated:** Apr 29, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Informal Support CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHINFSUPP", ][,1:2])
```

**CYMH Informal Support CAP Variable Summary Table**

```{r, echo=FALSE}
infsupp_var <- filter(varsummary, iCodes == "iP18a"| iCodes == "iP18b"|
                     iCodes == "iP18c"| iCodes == "iP18d"| iCodes == "iP18e")

vartable <- infsupp_var %>% kbl(caption = "CYMH Informal Support CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Informal Support CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validinfsupp = case_when(
    iP18a %in% c(0,1,2,3) & 
    iP18b %in% c(0,1,2,3) &
    iP18c %in% c(0,1,2,3) &
    iP18d %in% c(0,1,2,3) &
    iP18e %in% c(0,1,2,3) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcymhinfsupp = case_when(validinfsupp == 1 ~ 
    (case_when(iP18a %in% c(2,3) ~ + 1, TRUE ~ 0) +
     case_when(iP18b == 3 ~ + 1, TRUE ~ 0) +
     case_when(iP18c == 3 ~ + 1, TRUE ~ 0) +
     case_when(iP18d == 3 ~ + 1, TRUE ~ 0) +
     case_when(iP18e == 3 ~ + 1, TRUE ~ 0))))
```

**Informal Support CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHINFSUPP = case_when(validinfsupp == 1 ~ 
            (case_when(xcymhinfsupp >= 2 ~ 1, TRUE ~ 0) + 
             case_when(xcymhinfsupp < 2 ~ 0, TRUE ~ 0))))
  
```

## CYMH Interpersonal Conflict CAP (cCYMHIPCON) {#cCYMHIPCON}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Interpersonal Conflict CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHIPCON", ][,1:2])
```

**CYMH Interpersonal Conflict CAP Variable Summary Table**

```{r, echo=FALSE}
ipcon_var <- filter(varsummary, iCodes == "iP19a"| iCodes == "iP19b"|
                     iCodes == "iP19c"| iCodes == "iP19d"| iCodes == "iP19e"|
                     iCodes == "iP19f"| iCodes == "iBB5e"| iCodes == "iBB4b")

vartable <- ipcon_var %>% kbl(caption = "CYMH Interpersonal Conflict CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Interpersonal Conflict CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(xiBB5e = (case_when(
  iBB4c %in% c(0,1) ~ 0)+ 
  case_when(iBB4c %in% c(2,3) ~ as.numeric(iBB5e), TRUE ~ 0)))

df <- df %>% mutate(validipcon = case_when(
    iP19a %in% c(0,1,8) &
    iP19b %in% c(0,1,8) &
    iP19c %in% c(0,1,8) &
    iP19d %in% c(0,1,8) &
    iP19e %in% c(0,1,8) &
    iP19f %in% c(0,1,8) &
    xiBB5e %in% c(0,1,2,3) & 
    iBB5e %in% c(0,1,8) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcymhipcon = case_when(validipcon == 1 ~ 
                   (case_when(iP19a | iP19d == 1 ~ + 1, TRUE ~ 0) +
                    case_when(iP19b | iP19e | iP19f == 1 ~ + 1, TRUE ~ 0) +
                    case_when(iP19c | xiBB5e == 1 ~ + 1, TRUE ~ 0))))
```

**Interpersonal Conflict CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHIPCON = case_when(validipcon == 1 ~ 
      (case_when(xcymhipcon >= 2 ~ 2, TRUE ~ 0) +
       case_when(xcymhipcon == 1 ~ 1, TRUE ~ 0) +
       case_when(xcymhipcon == 0 ~ 0, TRUE ~ 0))))
```

## CYMH Medication Adherence CAP (cCYMHMEDADH) {#cCYMHMEDADH}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Medication Adherence CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHMEDADH", ][,1:2])
```

**CYMH Medication Adherence CAP Variable Summary Table**

```{r, echo=FALSE}
medadh_var <- filter(varsummary, iCodes == "iM3"| iCodes == "iM4"| iCodes == "iM12")

vartable <- medadh_var %>% kbl(caption = "CYMH Medication Adherence CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Medication Adherence CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validmedadh = case_when(
    iM3 %in% c(0,1,2,8) & 
    iM4 %in% c(0,1) & 
    iM12 %in% c(0,1,8) ~ 1, TRUE ~ 0))
```

**Medication Adherence CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHMEDADH = case_when(validmedadh == 1 ~ case_when(
  iM3 == 2 | iM4 == 1 | iM12 == 0 ~ 1, 
  iM3 != 2 & iM4 != 1 & iM12 != 0 ~ 0)))
```

## CYMH Medication Review CAP (cCYMHMEDREV) {#cCYMHMEDREV}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Medication Review CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHMEDREV", ][,1:2])
```

**CYMH Medication Review CAP Variable Summary Table**

```{r, echo=FALSE}
medrev_var <- filter(varsummary, iCodes == "iJ2c"| iCodes == "iJ2k"|
                     iCodes == "iJ2n"| iCodes == "iJ2x"| iCodes == "iJ2y"|
                     iCodes == "iJ2dd"| iCodes == "iJ2gg"| iCodes == "iJ2ll"|
                     iCodes == "iJ3"| iCodes == "iJ9a"| iCodes == "iJ9b"|
                     iCodes == "iJ9c"| iCodes == "iJ9d"| iCodes == "iJ9e"|
                     iCodes == "iJ9f"| iCodes == "iJ9g"| iCodes == "iM3"|
                     iCodes == "iM5"| iCodes == "iR9")

vartable <- medrev_var %>% kbl(caption = "CYMH Medication Review CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Medication Review CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validmedrev = case_when(
  iJ2c %in% c(0,1,2,3,4) & 
    iJ2k %in% c(0,1,2,3,4) &
    iJ2n %in% c(0,1,2,3,4) &
    iJ2x %in% c(0,1,2,3,4) &
    iJ2y %in% c(0,1,2,3,4) &
    iJ2dd %in% c(0,1,2,3,4) &
    iJ2gg %in% c(0,1,2,3,4) &
    iJ2ll %in% c(0,1,2,3,4) &
    iJ3 %in% c(0,1,2,3,4) &
    iJ9a %in% c(0,1) & 
    iJ9b %in% c(0,1) &
    iJ9c %in% c(0,1) &
    iJ9d %in% c(0,1) &
    iJ9e %in% c(0,1) &
    iJ9f %in% c(0,1) &
    iJ9g %in% c(0,1) &
    iM3 %in% c(0,1,2,8) & 
    iM5 %in% c(0,1) &
    iR9 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcymhmedrev = case_when(validmedrev == 1 ~ case_when(
  iJ2c %in% c(2,3,4) ~ + 1, 
  iJ2k %in% c(2,3,4) | iJ2y %in% c(2,3,4) ~ + 1, 
  iJ2n %in% c(2,3,4) | iJ2x %in% c(2,3,4) ~ + 1, 
  iJ2dd %in% c(2,3,4) ~ + 1, 
  iJ2gg %in% c(2,3,4) ~ + 1, 
  iJ2ll %in% c(2,3,4) ~ + 1, 
  iJ3 %in% c(1,2,3) ~ + 1, 
  iJ9a == 1 | iJ9b == 1 | iJ9c == 1 | iJ9d == 1 | iJ9e == 1 | 
    iJ9f == 1 | iJ9g == 1 ~ + 1, 
  iR9 == 1 ~ + 1)))
```

**Medication Review CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHMEDREV = case_when(validmedrev == 1 ~ case_when(
  iM5 == 1 ~ 1, 
  iM5 != 1 ~ case_when(
    iM3 %in% c(0,1) & xcymhmedrev >= 1 ~ 1, 
    iM3 != 0 | iM3 != 1 | xcymhmedrev == 0 ~ 0))))
```

## CYMH Parenting CAP (cCYMHPARENT) {#cCYMHPARENT}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Parenting CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHPARENT", ][,1:2])
```

**CYMH Parenting CAP Variable Summary Table**

```{r, echo=FALSE}
parent_var <- filter(varsummary, iCodes == "iP15a"| iCodes == "iP15b"|
                     iCodes == "iP15c"| iCodes == "iP15d"| iCodes == "iP15e"|
                     iCodes == "iP15f")

vartable <- parent_var %>% kbl(caption = "CYMH Parenting CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Parenting CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validparent = case_when(
    iP15a %in% c(0,1,2,8) &
    iP15b %in% c(0,1,2,8) &
    iP15c %in% c(0,1,2,8) &
    iP15d %in% c(0,1,2,8) &
    iP15e %in% c(0,1,2,8) &
    iP15f %in% c(0,1,2,8) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcymhparent = case_when(validparent == 1 ~ 
            (case_when(iP15a == 2 ~ + 1, TRUE ~ 0) +
             case_when(iP15b == 2 ~ + 1, TRUE ~ 0) + 
             case_when(iP15c == 2 ~ + 1, TRUE ~ 0) +
             case_when(iP15d == 2 ~ + 1, TRUE ~ 0) +
             case_when(iP15e == 2 ~ + 1, TRUE ~ 0) + 
             case_when(iP15f == 2 ~ + 1, TRUE ~ 0))))
```

**Parenting CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHPARENT = case_when(validparent == 1 ~ 
            (case_when(xcymhparent >= 2 ~ 1, TRUE ~ 0) +
             case_when(xcymhparent < 2 ~ 0, TRUE ~ 0))))
```

## CYMH Physical Activity CAP (cCYMHPA) {#cCYMHPA}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Physical Activity CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHPA", ][,1:2])
```

**CYMH Physical Activity CAP Variable Summary Table**

```{r, echo=FALSE}
pa_var <- filter(varsummary, iCodes == "iG6a")

vartable <- pa_var %>% kbl(caption = "CYMH Physical Activity CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Physical Activity CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validpa = case_when(
  iG6a %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0 ))
```

**Physical Activity CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHPA = case_when(validpa == 1 ~ case_when(
  iG6a %in% c(0,1) ~ 1, TRUE ~ 0)))
```

## CYMH Readmission CAP (cCYMHREAD) {#cCYMHREAD}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

Calculating the Readmission CAP requires that the Positive Symptoms Scale (\@ref(sCYPSS)), Risk of Harm to Others Scale (\@ref(sCYRHO)) and the Severity of Self-Harm Scale (\@ref(sCYSOS)) have been calculated.

**interRAI Repository Information CYMH Readmission CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHREAD", ][,1:2])
```

**CYMH Readmission CAP Variable Summary Table**

```{r, echo=FALSE}
read_var <- filter(varsummary, iCodes == "iB12"| iCodes == "iB33"|
                     iCodes == "iB38a"| iCodes == "iB38b"| iCodes == "iE5"|
                     iCodes == "iP19h"| iCodes == "iV1")

vartable <- read_var %>% kbl(caption = "CYMH Readmission CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Readmission CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validread = case_when(
    iB12 %in% c(0,1) & 
    iB33 %in% c(0,1,2) & 
    iB38a %in% c(0,1) & 
    iB38b %in% c(0,1) & 
    iE5 %in% c(0,1,2,3) & 
    iP19h %in% c(0,1,8) & 
    iV1 %in% c(0,1,2) & 
    sCYPSS > 0 & sCYPSS < 12 & 
    sCYRHO > 0 & sCYPSS < 6 & 
    sCYSOS > 0 & sCYPSS < 6 ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcymhread1 = case_when(validread == 1 ~ 
            (case_when(iB12 == 1 ~ + 1, TRUE ~ 0) +
             case_when(iB33 == 2 ~ + 1, TRUE ~ 0) +
             case_when(iB38a == 1 ~ + 1, TRUE ~ 0) +
             case_when(iB38b == 1 ~ + 1, TRUE ~ 0) + 
             case_when(iP19h == 1 ~ + 1, TRUE ~ 0) +
             case_when(sCYPSS >= 2 ~ + 1, TRUE ~ 0) +
             case_when(sCYRHO >= 3 ~ + 1, TRUE ~ 0) +
             case_when(sCYSOS >= 3 ~ + 1, TRUE ~ 0))))
   
df <- df %>% mutate(xcymhread2 = case_when(validread == 1 ~ 
            (case_when(iE5 %in% c(2,3) ~  1, TRUE ~ 0) +
             case_when(iV1 == 2 ~ 1, TRUE ~ 0) +
             case_when(iV1 == 1 ~ case_when(xcymhread1 >= 1 ~ 1, TRUE ~ 0), TRUE ~ 0))))
```

**CYMH Readmission CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHREAD = case_when(validread == 1 ~ 
            (case_when(xcymhread2 >= 1 ~ 1, TRUE ~ 0) +
             case_when(xcymhread2 == 0 ~ 0, TRUE ~ 0))))
```

## CYMH Sleep Disturbance CAP (cCYMHSLEEP) {#cCYMHSLEEP}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Sleep Disturbance CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHSLEEP", ][,1:2])
```

**CYMH Sleep Disturbance CAP Variable Summary Table**

```{r, echo=FALSE}
sleep_var <- filter(varsummary, iCodes == "iE1lll"| iCodes == "iE1yyy"|
                     iCodes == "iE1zzz"| iCodes == "iE1aaaa"| iCodes == "iJ4"|
                     iCodes == "iE1bbbb")

vartable <- sleep_var %>% kbl(caption = "CYMH Sleep Disturbance CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Sleep Disturbance CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validsleep = case_when(
    iE1lll %in% c(0,1,2,3,4) &
    iE1yyy %in% c(0,1,2,3,4) & 
    iE1zzz %in% c(0,1,2,3,4) & 
    iE1aaaa %in% c(0,1,2,3,4) & 
    iE1bbbb %in% c(0,1,2,3,4) & 
    iJ4 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
    
df <- df %>% mutate(xcymhsleep = case_when(validsleep == 1 ~ 
            (case_when(iE1lll %in% c(2,3,4) ~ + 1, TRUE ~ 0) +
             case_when(iE1yyy %in% c(2,3,4) ~ + 1, TRUE ~ 0) +
             case_when(iE1zzz %in% c(2,3,4) ~ + 1, TRUE ~ 0) + 
             case_when(iE1aaaa %in% c(2,3,4) ~ + 1, TRUE ~ 0) +
             case_when(iE1bbbb %in% c(2,3,4) ~ + 1, TRUE ~ 0) +
             case_when(iJ4 %in% c(1,2,3,4) ~ + 1, TRUE ~ 0))))
```

**Sleep Disturbance CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHSLEEP = case_when(validsleep == 1 ~ case_when(
  xcymhsleep >= 2 ~ 1, TRUE ~ 0))) 
```

## CYMH Social and Peer Relations CAP (cCYMHSOCREL) {#cCYMHSOCREL}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Social and Peer Relations CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHSOCREL", ][,1:2])
```

**CYMH Social and Peer Relations CAP Variable Summary Table**

```{r, echo=FALSE}
socrel_var <- filter(varsummary, iCodes == "iE1qqq"| iCodes == "iE1ttt"|
      iCodes == "iE14d"| iCodes == "iE15e"| iCodes == "iF13"|iCodes == "iF15e"| 
      iCodes == "iF15f"| iCodes == "iP8"| iCodes == "iY1aq")

vartable <- socrel_var %>% kbl(caption = "CYMH Social and Peer Relations CAP 
                      variable label information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Social and Peer Relations CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validsocrel = case_when(
    iE1qqq %in% c(0,1,2,4) & 
    iE1ttt %in% c(0,1,2,3,4) & 
    iE14d %in% c(0,1) & 
    iE15e %in% c(0,1,2,3,4,5) & 
    iF13 %in% c(0,1) & 
    iF15e %in% c(0,1) & 
    iF15f %in% c(0,1) & 
    iP8 %in% c(0,1) & 
    iY1aq %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcymhsocrel1 = case_when(validsocrel == 1 ~ 
            (case_when(iE1qqq %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
             case_when(iE1ttt %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
             case_when(iE14d == 1 ~ + 1, TRUE ~ 0) +
             case_when(iF15e == 0 ~ + 1, TRUE ~ 0) +
             case_when(iF15f == 0 ~ + 1, TRUE ~ 0) +
             case_when(iP8 == 0 ~ + 1, TRUE ~ 0) + 
             case_when(iY1aq %in% c(2,3,4,5) ~ + 1, TRUE ~ 0))))

df <- df %>% mutate(xcymhsocrel2 = case_when(validsocrel == 1 ~ 
            (case_when(iE15e %in% c(2,3,4,5) ~ + 1, TRUE ~ 0) +
             case_when(iF13 == 1 ~ + 1, TRUE ~ 0))))
```

**Social and Peer Relations CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHSOCREL = case_when(validsocrel == 1 ~ 
           (case_when(xcymhsocrel1 >= 2 ~ 2, TRUE ~ 0) +
            case_when(xcymhsocrel1 < 2 ~ 
                  (case_when(xcymhsocrel2 >= 1 ~ 1, TRUE ~ 0) +
                   case_when(xcymhsocrel2 == 0 ~ 0, TRUE ~ 0)), TRUE ~ 0))))
```

## CYMH Strengths CAP (cCYMHSTR) {#cCYMHSTR}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Strengths CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHSTR", ][,1:2])
```

**CYMH Strengths CAP Variable Summary Table**

```{r, echo=FALSE}
str_var <- filter(varsummary, iCodes == "iC7"| iCodes == "iC9a"| iCodes == "iF8b"| 
                              iCodes == "iF15a")

vartable <- str_var %>% kbl(caption = "CYMH Strengths CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Strengths CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validstr = case_when(
    iC7 %in% c(0,1,2) & 
    iC9a %in% c(0,1,8) & 
    iF8b %in% c(0,1) & 
    iF15a %in% c(0,1) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcymhstr = case_when(validstr == 1 ~
            (case_when(iC7 == 2 ~ + 1, TRUE ~ 0) +
             case_when(iC9a %in% c(1,8) ~ + 1, TRUE ~ 0) +
             case_when(iF8b == 0 ~ + 1, TRUE ~ 0) +
             case_when(iF15a == 0 ~ + 1, TRUE ~ 0))))
```

**Strengths CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHSTR = case_when(validstr == 1 ~ 
            case_when(xcymhstr >= 3 ~ 1, TRUE ~ 0)))
```

## CYMH Suicidality and Purposeful Self-Harm CAP (cCYMHSSH) {#cCYMHSSH}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

Calculating the Suicidality and Purposeful Self-Harm CAP requires that the Severity of Self-Harm Scale (\@ref(sCYSOS)) has been calculated.

**interRAI Repository Information CYMH Suicidality and Purposeful Self-Harm CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHSSH", ][,1:2])
```

**CYMH Suicidality and Purposeful Self-Harm CAP Variable Summary Table**

```{r, echo=FALSE}
ssh_var <- filter(varsummary, iCodes == "iE1oo")

vartable <- ssh_var %>% kbl(caption = "CYMH Suicidality and Purposful Self-Harm 
                  CAP variable label information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Suicidality and Purposeful Self-Harm CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validssh = case_when(
    iE1oo %in% c(0,1,2,3,4) & 
    sCYSOS %in% c(0,1,2,3,4,5,6) ~ 1, TRUE ~ 0))
```

**Suicidality and Purposeful Self-Harm CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHSSH = case_when(validssh == 1 ~ case_when(
  sCYSOS %in% c(5,6) ~ 2, 
  sCYSOS %in% c(3,4) ~ case_when(
    iE1oo >= 2 ~ 2, 
    iE1oo < 2 ~ 1),
  sCYSOS < 3 ~ 0)))
```

## CYMH Support System for Discharge CAP (cCYMHSSDIS) {#cCYMHSSDIS}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Support System for Discharge CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHSSDIS", ][,1:2])
```

**CYMH Support System for Discharge CAP Variable Summary Table**

```{r, echo=FALSE}
ssdis_var <- filter(varsummary, iCodes == "iA11b"| iCodes == "iA12e"|
                     iCodes == "iR16a"| iCodes == "iR16b"| iCodes == "iY8a")

vartable <- ssdis_var %>% kbl(caption = "CYMH Support System for Discharge CAP 
                      variable label information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Support System for Discharge CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validssdis = case_when(
    iA11b %in% c(1:15) & 
    iA12e %in% c(1:6) & 
    iR16d %in% c(0,1,2,8) & 
    iR16e %in% c(0,1,2,8) & 
    iY8a %in% c(0,1,8) ~ 1, TRUE ~ 0))
# iA11b replaced iA11j
```

**Support System for Discharge CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHSSDIS = case_when(validssdis == 1 ~ case_when(
  iA11b %in% c(5,8) | iA12e %in% c(1,5) | iY8a == 1 | iR16d %in% c(0,2) | 
    iR16e %in% c(0,2) ~ 1, TRUE ~ 0)))
```

## CYMH Tobacco and Nicotine Use CAP (cCYMHTOBAC) {#cCYMHTOBAC}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Tobacco and Nicotine Use CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHTOBAC", ][,1:2])
```

**CYMH Tobacco and Nicotine Use CAP Variable Summary Table**

```{r, echo=FALSE}
tobac_var <- filter(varsummary, iCodes == "iW20a"| iCodes == "iW20b")

vartable <- tobac_var %>% kbl(caption = "CYMH Tobacco and Nicotine use CAP variable 
                                   label information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Tobacco and Nicotine Use CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validtobac = case_when(
  iW20a %in% c(0,1,2,3) & 
  iW20b %in% c(0,1,2,3) ~ 1, TRUE ~ 0))
```

**Tobacco and Nicotine Use CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHTOBAC = case_when(validtobac == 1 ~ case_when(
  iW20a == 3 | iW20b == 3 ~ 2, 
  iW20a %in% c(1,2) | iW20b %in% c(1,2) ~ 1, 
  iW20a == 0 & iW20b == 0 ~ 0)))
```

## CYMH Transitions CAP (cCYMHTRANS) {cCYMHTRANS}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Transitions CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHTRANS", ][,1:2])
```

**CYMH Transitions CAP Variable Summary Table**

```{r, echo=FALSE}
trans_var <- filter(varsummary, iCodes == "iZ12")

vartable <- trans_var %>% kbl(caption = "CYMH Transitions CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Transitions CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validtrans = case_when(
  iZ12 %in% c(0,1) ~ 1, TRUE ~ 0))
```

**Transitions CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHTRANS = case_when(validtrans == 1 ~ case_when(
  iZ12 == 1 ~ 1, TRUE ~ 0)))
```

## CYMH Traumatic Life Events CAP (cCYMHTRAUMA) {#cCYMHTRAUMA}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Traumatic Life Events CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHTRAUMA", ][,1:2])
```

**CYMH Traumatic Life Events CAP Variable Summary Table**

```{r, echo=FALSE}
trauma_var <- filter(varsummary, iCodes == "iB34a"| iCodes == "iB34b"| 
                    iCodes == "iB34c"| iCodes == "iE1ddd"| iCodes == "iE1fff"| 
                    iCodes == "iE1iii"| iCodes == "iE1jjj"| iCodes == "iE1kkk"| 
                    iCodes == "iE1lll"| iCodes == "iE1eeee"| iCodes == "iY1aa"|
                    iCodes == "iY1aj"| iCodes == "iY1ak"| iCodes == "iY1al"|
                    iCodes == "iY1am"| iCodes == "iY1an"| iCodes == "iY1ao"|
                    iCodes == "iY1aq"| iCodes == "iY1ar"| iCodes == "iY1at"|
                    iCodes == "iY1au"| iCodes == "iY2a"| iCodes == "iY2c"|
                    iCodes == "iY2d")

vartable <- trauma_var %>% kbl(caption = "CYMH Traumatic Life Events CAP variable  
                                label information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Traumatic Life Events CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validtrauma = case_when(
    iB34a %in% c(0,1,2,3) & 
    iB34b %in% c(0,1,2,3) & 
    iB34c %in% c(0,1,2,3) & 
    iE1ddd %in% c(0,1,2,3,4) & 
    iE1fff %in% c(0,1,2,3,4) & 
    iE1iii %in% c(0,1,2,3,4) & 
    iE1jjj %in% c(0,1,2,3,4) & 
    iE1kkk %in% c(0,1,2,3,4) & 
    iE1lll %in% c(0,1,2,3,4) & 
    iE1eeee %in% c(0,1,2,3,4) & 
    iY1aa %in% c(0,1,2,3,4,5) & 
    iY1aj %in% c(0,1,2,3,4,5) &
    iY1ak %in% c(0,1,2,3,4,5) &
    iY1al %in% c(0,1,2,3,4,5) &
    iY1am %in% c(0,1,2,3,4,5) &
    iY1an %in% c(0,1,2,3,4,5) &
    iY1ao %in% c(0,1,2,3,4,5) &
    iY1aq %in% c(0,1,2,3,4,5) &
    iY1ar %in% c(0,1,2,3,4,5) &
    iY1at %in% c(0,1,2,3,4,5) &
    iY1au %in% c(0,1,2,3,4,5) &
    iY1b %in% c(0,1,8) & 
    iY2a %in% c(0,1) & 
    iY2c %in% c(0,1) & 
    iY2d %in% c(0,1) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcymhtrauma1 = case_when(validtrauma == 1 ~ 
            (case_when(iY1aa %in% c(4,5) ~ + 1, TRUE ~ 0) +
             case_when(iY1aj %in% c(4,5) ~ + 1, TRUE ~ 0) +
             case_when(iY1ak %in% c(4,5) ~ + 1, TRUE ~ 0) +
             case_when(iY1am %in% c(4,5) ~ + 1, TRUE ~ 0) +
             case_when(iY1an %in% c(4,5) ~ + 1, TRUE ~ 0) +
             case_when(iY1ao %in% c(4,5) ~ + 1, TRUE ~ 0) +
             case_when(iY1aq %in% c(4,5) ~ + 1, TRUE ~ 0) +
             case_when(iY1ar %in% c(4,5) ~ + 1, TRUE ~ 0) +
             case_when(iY1at %in% c(4,5) ~ + 1, TRUE ~ 0) +
             case_when(iY1au %in% c(4,5) ~ + 1, TRUE ~ 0))))

df <- df %>% mutate(xcymhtrauma2 = case_when(validtrauma == 1 ~ 
            (case_when(iY2a == 1 ~ + 1, TRUE ~ 0) +
             case_when(iY2c == 1 ~ + 1, TRUE ~ 0) +
             case_when(iY2d == 1 ~ + 1, TRUE ~ 0))))
  
df <- df %>% mutate(xcymhtrauma3 = case_when(validtrauma == 1 ~ 
            (case_when(iB34a | iB34b | iB34c %in% c(1,2,3) ~ + 1, TRUE ~ 0) +
            case_when(iY1aa %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1aj %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1ak %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1al %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1am %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1an %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1ao %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1aq %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1ar %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1at %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1au %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0))))

df <- df %>% mutate(xcymhtrauma4 = case_when(validtrauma == 1 ~ 
            (case_when(iE1ddd %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
            case_when(iE1fff %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
            case_when(iE1iii %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
            case_when(iE1jjj %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
            case_when(iE1kkk %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
            case_when(iE1lll %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
            case_when(iE1eeee %in% c(1,2,3,4) ~ + 1, TRUE ~ 0)))) 
```

**Traumatic Life Events CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHTRAUMA = case_when(validtrauma == 1 ~ case_when(
  xcymhtrauma1 >= 1 | xcymhtrauma2 >= 1 ~ 2, 
  xcymhtrauma1 == 0 & xcymhtrauma2 == 0 ~ case_when(
    xcymhtrauma3 >= 1 ~ case_when(
      iY1b == 1 | xcymhtrauma4 >=2 ~ 1, 
      iY1b < 1 & xcymhtrauma4 < 2 ~ 0),
    xcymhtrauma3 == 0 ~ 0))))
```

## CYMH Video Gaming CAP (cCYMHVG) {#cCYMHVG}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Video Gaming CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHVG", ][,1:2])
```

**CYMH Video Gaming CAP Variable Summary Table**

```{r, echo=FALSE}
vg_var <- filter(varsummary, iCodes == "iW21")

vartable <- vg_var %>% kbl(caption = "CYMH Video Gaming CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Video Gaming CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validvg = case_when(
  iW21 %in% c(0,1,2,3) ~ 1, TRUE ~ 0))
```

**Video Gaming CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHVG = case_when(validvg == 1 ~ case_when(
  iW21 %in% c(2,3) ~ 1, 
  iW21 < 2 ~ 0)))
```

## CYMH Education CAP (cCYMHEDU) {#cCYMHEDU}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Education CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHEDU", ][,1:2])
```

**CYMH Education CAP Variable Summary Table**

```{r, echo=FALSE}
edu_var <- filter(varsummary, iCodes == "iBB2"| iCodes == "iBB4c"|
                     iCodes == "iBB5a"| iCodes == "iBB5b"| iCodes == "iBB5e"|
                     iCodes == "iBB5f"| iCodes == "iBB10"| iCodes == "iBB11a"|
                     iCodes == "iBB11b"| iCodes == "iBB14a")

vartable <- edu_var %>% kbl(caption = "CYMH Education CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Education CAP Intermediary Variables (ChYMH + Adolescent Supplement)**

```{r,eval=FALSE}
df <- df %>% mutate(xiBB5a = case_when(
  iBB4c %in% c(2,3) ~ as.numeric(iBB5a), 
  iBB4c == 1 ~ 0))

df <- df %>% mutate(xiBB5b = case_when(
  iBB4c %in% c(2,3) ~ as.numeric(iBB5b), 
  iBB4c == 1 ~ 0))

df <- df %>% mutate(xiBB5e = case_when(
  iBB4c %in% c(2,3) ~ as.numeric(iBB5e), 
  iBB4c == 1 ~ 0))

df <- df %>% mutate(xiBB5f = case_when(
  iBB4c %in% c(2,3) ~ as.numeric(iBB5f), 
  iBB4c == 1 ~ 0))

df <- df %>% mutate(xiBB10 = case_when(
  iBB4c %in% c(2,3) ~ as.numeric(iBB10), 
  iBB4c == 1 ~ 0))

df <- df %>% mutate(xiBB11a = case_when(
  iBB4c %in% c(1,2,3) ~ as.numeric(iBB11a)))

df <- df %>% mutate(xiBB11b = case_when(
  iBB4c %in% c(1,2,3) ~ as.numeric(iBB11b)))

df <- df %>% mutate(xiBB14a = case_when(
  iBB4c %in% c(1,2,3) ~ as.numeric(iBB14a)))

df <- df %>% mutate(validedu = case_when(
    iBB2 %in% c(0,1,2,3,8) &
    xiBB5a %in% c(0,1,8) & 
    xiBB5b %in% c(0,1,8) & 
    xiBB5e %in% c(0,1,8) & 
    xiBB5f %in% c(0,1,8) &
    xiBB10 %in% c(0,1,2,3) & 
    xiBB11a %in% c(0,1) & 
    xiBB11b %in% c(0,1) & 
    xiBB14a %in% c(0,1,2,3,8) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcymhedu1 = case_when(validedu == 1 ~ 
            (case_when(xiBB5a == 1 ~ + 1, TRUE ~ 0) +
             case_when(xiBB5b == 1 ~ + 1, TRUE ~ 0) +
             case_when(xiBB5e == 1 ~ + 1, TRUE ~ 0) + 
             case_when(xiBB5f == 1 ~ + 1, TRUE ~ 0) + 
             case_when(xiBB10 %in% c(1,3) ~ + 1, TRUE ~ 0) +
             case_when(xiBB14a %in% c(2,3) ~ + 1, TRUE ~ 0))))
   
df <- df %>% mutate(xcymhedu2 = case_when(validedu == 1 ~ 
            (case_when(xiBB11a | xiBB11b == 1 ~ + 1, TRUE ~ 0) + 
             case_when(iBB2 != 0 & iBB2 != 1 & iBB2 != 2 & iBB2 != 3 ~ + 1, TRUE ~ 0))))
  
```

**Education CAP Calculation (ChYMH + Adolescent Supplement)**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHEDU = case_when(validedu == 1 ~ case_when(
  xcymhedu1 >= 1 ~ 2,  
  xcymhedu1 == 0 ~ case_when(
    xcymhedu2 == 2 ~ 1, 
    xcymhedu2 < 2 ~ 0))))
```

## CYMH Gambling CAP (cCYMHGAMB) {#cCYMHGAMB}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Gambling CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHGAMB", ][,1:2])
```

**CYMH Gambling CAP Variable Summary Table**

```{r, echo=FALSE}
gamb_var <- filter(varsummary, iCodes == "iW8")

vartable <- gamb_var %>% kbl(caption = "CYMH Gambling CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Gambling CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validgamb = case_when(
  iW8 %in% c(0,1) &
  cihiU3 == 1 ~ 1, TRUE ~ 0))
```

**Gambling CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHGAMB = case_when(validgamb == 1 ~ case_when(
  iW8 == 1 ~ 1, 
  iW8 < 1 ~ 0)))
```

## CYMH Life Skills CAP (cCYMHLIFSKIL) {#cCYMHLIFSKIL}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Life Skills CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHLIFSKIL", ][,1:2])
```

**CYMH Life Skills CAP Variable Summary Table**

```{r, echo=FALSE}
lifskil_var <- filter(varsummary, iCodes == "iG1aa"| iCodes == "iG1ab"|
                     iCodes == "iG1ba"| iCodes == "iG1bb"| iCodes == "iG1ca"|
                     iCodes == "iG1cb"| iCodes == "iG1ea"| iCodes == "iG1eb"|
                     iCodes == "iG1ga"| iCodes == "iG1gb"| iCodes == "iG1ha"|
                     iCodes == "iG1hb"| iCodes == "iG1na"| iCodes == "iG1nb"|
                     iCodes == "iG2a"| iCodes == "iG2b"| iCodes == "iG2c"|
                     iCodes == "iG2d"| iCodes == "iG2h"| iCodes == "iG2j")

vartable <- lifskil_var %>% kbl(caption = "CYMH Life Skills CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Life Skills CAP Intermediary Variables (USE FOR CHYMH + ADOLESCENT SUPPLEMENT)**

```{r,eval=FALSE}
df <- df %>% mutate(validlifskil = case_when(
    iG1aa %in% c(0,1,2,3,4,5,6,8) & 
    iG1ab %in% c(0,1,2,3,4,5,6) & 
    iG1ba %in% c(0,1,2,3,4,5,6,8) &
    iG1bb %in% c(0,1,2,3,4,5,6) & 
    iG1ca %in% c(0,1,2,3,4,5,6,8) &
    iG1cb %in% c(0,1,2,3,4,5,6) & 
    iG1ea %in% c(0,1,2,3,4,5,6,8) & 
    iG1eb %in% c(0,1,2,3,4,5,6) & 
    iG1ga %in% c(0,1,2,3,4,5,6,8) & 
    iG1gb %in% c(0,1,2,3,4,5,6) & 
    iG1ha %in% c(0,1,2,3,4,5,6,8) & 
    iG1hb %in% c(0,1,2,3,4,5,6) & 
    iG1na %in% c(0,1,2,3,4,5,6,8) & 
    iG1nb %in% c(0,1,2,3,4,5,6) & 
    iG2a %in% c(0,1,2,3,4,5,6,8) &
    iG2b %in% c(0,1,2,3,4,5,6,8) &
    iG2c %in% c(0,1,2,3,4,5,6,8) &
    iG2d %in% c(0,1,2,3,4,5,6,8) &
    iG2h %in% c(0,1,2,3,4,5,6,8) &
    iG2j %in% c(0,1,2,3,4,5,6,8) &
    T_age > 0 & T_age < 130 ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcymhlifskil1 = case_when(validlifskil == 1 ~ 
         (case_when(iG2a %in% c(3,4,5,6) ~ + 1, TRUE ~ 0) +
         case_when(iG2b %in% c(3,4,5,6) ~ + 1, TRUE ~ 0) +
         case_when(iG2c %in% c(3,4,5,6) ~ + 1, TRUE ~ 0) +
         case_when(iG2d %in% c(3,4,5,6) ~ + 1, TRUE ~ 0) +
         case_when(iG2j %in% c(3,4,5,6) ~ + 1, TRUE ~ 0) +
         case_when(iG2h %in% c(3,4,5,6) ~ + 1, TRUE ~ 0))))

df <- df %>% mutate(xcymhlifskil2 = case_when(validlifskil == 1 ~ 
        (case_when(iG1aa | iG1ab %in% c(4,5,6) ~ + 1, TRUE ~ 0) +
        case_when(iG1ba | iG1bb %in% c(4,5,6) ~ + 1, TRUE ~ 0) +
        case_when(iG1ca | iG1cb %in% c(4,5,6) ~ + 1, TRUE ~ 0) +
        case_when(iG1ea | iG1eb %in% c(4,5,6) ~ + 1, TRUE ~ 0) +
        case_when(iG1ga | iG1gb %in% c(4,5,6) ~ + 1, TRUE ~ 0) +
        case_when(iG1ha | iG1hb %in% c(4,5,6) ~ + 1, TRUE ~ 0) +
        case_when(iG1na | iG1nb %in% c(4,5,6) ~ + 1, TRUE ~ 0))))
```

**Life Skills CAP Calculation (ChYMH + Adolescent Supplement)**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHLIFSKIL = case_when(validlifskil == 1 ~ 
             (case_when(T_age >= 6 ~ (case_when(xcymhlifskil1 >= 2 ~ 2, TRUE ~ 0) +
                         case_when(xcymhlifskil1 < 2 ~ case_when(xcymhlifskil2 >= 2 ~
                                  (case_when(T_age >= 12 ~ 1, TRUE ~ 0) + 
                                   case_when(T_age <= 6 & T_age >= 12 ~ 0, TRUE ~ 0)), 
                                                            TRUE ~ 0), TRUE ~ 0))))))
```

## CYMH Sexual Behaviour CAP (cCYMHSEX) {#cCYMHSEX}

**Last Updated:** May 5, 2023

**Last Updated By:** Shauna Heron

**interRAI Repository Information CYMH Sexual Behaviour CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHSEX", ][,1:2])
```

**CYMH Sexual Behaviour CAP Variable Summary Table**

```{r, echo=FALSE}
sex_var <- filter(varsummary, iCodes == "iE3o"| iCodes == "iE19a"|
                     iCodes == "iJ10a"| iCodes == "iW27"| iCodes == "iX3")

vartable <- sex_var %>% kbl(caption = "CYMH Sexual Behaviour CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Sexual Behaviour CAP Intermediary Variables (ChYMH + Adolescent Supplement)**

```{r,eval=FALSE}
df <- df %>% mutate(validsex = case_when( 
    iE3o %in% c(0,1,2,3,4) & 
    iE19a %in% c(0,1) & 
    iW27 %in% c(0,1) ~ 1, TRUE ~ 0))
#iJ10a and iX3 are from the Adolescent Supplement. The CAP can be calculated without these. 
```

**Sexual Behaviour CAP Calculation (ChYMH + Adolescent Supplement)**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHSEX = case_when(validsex == 1 ~ case_when(
  (iE3o %in% c(2,3,4) | iE19a == 1 | iJ10a == 1 | iX3 == 1 | iW27 == 1) ~ 1, TRUE ~ 0)))
```

## CYMH Weight Management CAP (cCYMHWTMGT) {#cCYMHWTMGT}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Weight Management CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHWTMGT", ][,1:2])
```

**CYMH Weight Management CAP Variable Summary Table**

```{r, echo=FALSE}
wtmgt_var <- filter(varsummary, iCodes == "iK2i"| iCodes == "iK2j"|
                     iCodes == "iK2k"| iCodes == "iK8a"| iCodes == "iK8b"|
                     iCodes == "iK8c")

vartable <- wtmgt_var %>% kbl(caption = "CYMH Weight Management CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Weight Management CAP Intermediary Variables (ChYMH + Adolescent Supplement)**

```{r,eval=FALSE}
df <- df %>% mutate(validwtmgt = case_when(
    iK2i %in% c(0,1) & 
    iK2j %in% c(0,1) & 
    iK2k %in% c(0,1) & 
    iK8a %in% c(0,1) & 
    iK8b %in% c(0,1) & 
    iK8c %in% c(0,1) ~ 1, TRUE ~ 0))
```

**Weight Management CAP Calculation (ChYMH + Adolescent Supplement)**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHWTMGT = case_when(validwtmgt == 1 ~ case_when(
  iK2k == 1 | iK2k == 1 | iK2i == 1 ~ 2, 
  iK2j < 1 & iK2k < 1 & iK2i < 1 ~ case_when(
    iK8a == 1 | iK8b ==1 | iK8c == 1 ~ 1, 
    iK8a < 1 & iK8b < 1 & iK8c < 1 ~ 0))))
```

## CYMH Substance Use CAP (cCYMHSUBUSE) {#cCYMHSUBUSE}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYMH Substance Use CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYMHSUBUSE", ][,1:2])
```

**CYMH Substance Use CAP Variable Summary Table**

```{r, echo=FALSE}
subuse_var <- filter(varsummary, iCodes == "iM6"| iCodes == "iW2"|
                     iCodes == "iW3a"| iCodes == "iW3b"| iCodes == "iW3c"|
                     iCodes == "iW3d"| iCodes == "iW3e"| iCodes == "iW3f")

vartable <- subuse_var %>% kbl(caption = "CYMH Substance Use CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Substance Use CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validsubuse = case_when(
    iM6 %in% c(0,1) & 
    iW2 %in% c(0,1,2,3,4) &
    iW3a %in% c(0,1,2,3,4,5) &
    iW3b %in% c(0,1,2,3,4,5) &
    iW3c %in% c(0,1,2,3,4,5) &
    iW3d %in% c(0,1,2,3,4,5) &
    iW3e %in% c(0,1,2,3,4,5) &
    iW3f %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcymhsubuse = case_when(validsubuse == 1 ~ 
            (case_when(iM6 == 1 ~ + 1, TRUE ~ 0) +
             case_when(iW2 %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
             case_when(iW3a %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
             case_when(iW3b %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
             case_when(iW3c %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) + 
             case_when(iW3d %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) + 
             case_when(iW3e %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) + 
             case_when(iW3f %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0))))
```

**Substance Use CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYMHSUBUSE = case_when(validsubuse == 1 ~ case_when(
  xcymhsubuse >= 1 ~ 1, TRUE ~ 0)))
```

## CYDD Continence CAP (cCYDDCONTI) {#cCYDDCONTI}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYDD Continence CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYDDCONTI", ][,1:2])
```

**CYDD Continence CAP Variable Summary Table**

```{r, echo=FALSE}
conti_var <- filter(varsummary, iCodes == "iH1"| iCodes == "iH3")

vartable <- conti_var %>% kbl(caption = "CYDD Continence CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Continence CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validconti = case_when(
  iH1 %in% c(0,1,2,3,4,5,8) & 
  iH3 %in% c(0,1,2,3,4,5,8) ~ 1, TRUE ~ 0))
```

**Continence CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYDDCONTI = case_when(validconti == 1 ~ 
            case_when(iH1 | iH3 %in% c(3,4,5) ~ 1, TRUE ~ 0))) 
```

## CYDD Suicidality and Purposeful Self-Harm CAP (cCYDDSSH) {#cCYDDSSH}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

Calculating the Suicidality and Purposeful Self-Harm CAP requires that the Severity of Self-Harm Scale (\@ref(sCYSOS)) and the Communication Scale (\@ref(sCOMM)) have been calculated.

**interRAI Repository Information CYDD Suicidality and Purposeful Self-Harm CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYDDSSH", ][,1:2])
```

**CYDD Suicidality and Purposeful Self-Harm CAP Variable Summary Table**

```{r, echo=FALSE}
sshdd_var <- filter(varsummary, iCodes == "iB15"| iCodes == "iE1oo")

vartable <- sshdd_var %>% kbl(caption = "CYDD suicidality and Purposeful Self-Harm
                  CAP variable label information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Suicidality and Purposeful Self-Harm CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validsshdd = case_when(
    iB15 %in% c(0,1,2,3,4,5,8) & 
    iE1oo %in% c(0,1,2,3,4) & 
    sCOMM %in% c(0:8) & 
    sCYSOS %in% c(0:6) ~ 1, TRUE ~ 0))
```

**Suicidality and Purposeful Self-Harm CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYDDSSH = case_when(validsshdd == 1 ~ case_when(
  iB15 %in% c(0,1,2,3) & sCOMM < 5 ~ case_when(
    sCYSOS %in% c(5,6) ~ 2, 
    sCYSOS %in% c(3,4) ~ case_when(
      iE1oo %in% c(2,3,4) ~ 2, 
      iE1oo < 2 ~ 1), 
    sCYSOS < 3 ~ 0),
  iB15 != 0 & iB15 != 1 & iB15 != 2 & iB15 != 3 | sCOMM > 5 ~ 0)))
```

## CYDD Accessibility & Mobility CAP (cCYDDAM) {#cCYDDAM}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYDD Accessibility & Mobility CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYDDAM", ][,1:2])
```

**CYDD Accessibility & Mobility CAP Variable Summary Table**

```{r, echo=FALSE}
am_var <- filter(varsummary, iCodes == "iG2f")

vartable <- am_var %>% kbl(caption = "CYDD Accessibility & Mobility CAP variable
                                  label information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Accessibility & Mobility CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validam = case_when(
  iG2f %in% c(0,1,2,3,4,5,6,8) ~ 1, TRUE ~ 0))
```

**Accessibility & Mobility CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYDDAM = case_when(validam == 1 ~ case_when(
  iG2f %in% c(5,6,8) ~ 2, 
  iG2f %in% c(3,4) ~ 1, 
  iG2f < 3 ~ 0)))
```

## CYDD Education Support CAP (cCYDDEDU) {#cCYDDEDU}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYDD Education Support CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYDDEDU", ][,1:2])
```

**CYDD Education Support CAP Variable Summary Table**

```{r, echo=FALSE}
edusupp_var <- filter(varsummary, iCodes == "iBB5b"| iCodes == "iBB5e"|
                        iCodes == "iBB5f"| iCodes == "iBB10"| iCodes == "iBB11a"|
                        iCodes == "iBB11b")

vartable <- edusupp_var %>% kbl(caption = "CYDD Education Support CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Education Support CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validedusupp = case_when(
    iBB5b %in% c(0,1,8) & 
    iBB5e %in% c(0,1,8) & 
    iBB5f %in% c(0,1,8) & 
    iBB10 %in% c(0,1,2,3) &
    iBB11a %in% c(0,1) & 
    iBB11b %in% c(0,1) ~ 1, TRUE ~ 0))
```

**Education Support CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYDDEDU = case_when(validedusupp == 1 ~ case_when(
  iBB5b == 1 | iBB5e == 1 | iBB5f == 1 | iBB10 %in% c(1,3) | iBB11a == 1 |
    iBB11b == 1 ~ 1, TRUE ~ 0)))
```

## CYDD Injurious Behaviour CAP (cCYDDINJUR) {#cCYDDINJUR}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYDD Injurious Behaviour CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYDDINJUR", ][,1:2])
```

**CYDD Injurious Behaviour CAP Variable Summary Table**

```{r, echo=FALSE}
injur_var <- filter(varsummary, iCodes == "iE3m"| iCodes == "iE3q"| 
                                iCodes == "iE3w"| iCodes == "iX2a")

vartable <- injur_var %>% kbl(caption = "CYDD Injurious Behaviour CAP variable 
                                   label information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Injurious Behaviour CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validinjur = case_when(
    iE3m %in% c(0,1,2,3,4) & 
    iE3q %in% c(0,1,2,3,4) & 
    iE3w %in% c(0,1,2,3,4) & 
    iX2a %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**Injurious Behaviour CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYDDINJUR = case_when(validinjur == 1 ~ case_when(
  iE3m %in% c(1,2,3,4) | iE3q %in% c(1,2,3,4) | iE3w %in% c(1,2,3,4) | 
    iX2a %in% c(4,5) ~ 1, TRUE ~ 0)))
```

## CYDD Modified Nutrition Intake (cCYDDNUTRI) {#cCYDDNUTRI}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYDD Modified Nutrition Intake CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYDDNUTRI", ][,1:2])
```

**CYDD Modified Nutrition Intake CAP Variable Summary Table**

```{r, echo=FALSE}
nutri_var <- filter(varsummary, iCodes == "iK3")

vartable <- nutri_var %>% kbl(caption = "CYDD Modified Nutrition Intake CAP  
                      variable label information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Modified Nutrition Intake CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validnutri = case_when(
  iK3 %in% c(0,1,2,3,4,5,6,7,8,9) ~ 1, TRUE ~ 0))
```

**Modified Nutrition Intake CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYDDNUTRI = case_when(validnutri == 1 ~ 
          (case_when(iK3 %in% c(3,4) ~ + 2, TRUE ~ 0) +
           case_when(iK3 %in% c(5,6,7,8) ~ + 1, TRUE ~ 0)+
           case_when(iK3 %in% c(0,1,2,9) ~ + 0, TRUE ~ 0))))
```

## CYDD Traumatic Life Events (cCYDDTRAUMA) {#cCYDDTRAUMA}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYDD Traumatic Life Events CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYDDTRAUMA", ][,1:2])
```

**CYDD Traumatic Life Events Variable Summary Table**

```{r, echo=FALSE}
traumadd_var <- filter(varsummary, iCodes == "iB34a"| iCodes == "iB34b"|
                       iCodes == "iB34c"| iCodes == "iE1ddd"| iCodes == "iE1fff"|
                       iCodes == "iE1iii"| iCodes == "iE1jjj"| iCodes == "iE1kkk"|
                       iCodes == "iE1lll"| iCodes == "iE1eeee"| iCodes == "iR9"|
                       iCodes == "iY1aa"| iCodes == "iY1ak"| iCodes == "iY1al"|
                       iCodes == "iY1am"| iCodes == "iY1an"| iCodes == "iY1ao"|
                       iCodes == "iY1aq"| iCodes == "iY1ar"| iCodes == "iY1at"|
                       iCodes == "iY1au"| iCodes == "iY1b"| iCodes == "iY2a"|
                       iCodes == "iY2c"| iCodes == "iY2d")

vartable <- traumadd_var %>% kbl(caption = "CYDD Traumatic Life Events CAP variable  
                                label information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Traumatic Life Events CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validcyddtrauma = case_when(
    iB34a %in% c(0,1,2,3) & 
    iB34b %in% c(0,1,2,3) & 
    iB34c %in% c(0,1,2,3) & 
    iE1ddd %in% c(0,1,2,3,4) & 
    iE1fff %in% c(0,1,2,3,4) & 
    iE1iii %in% c(0,1,2,3,4) & 
    iE1jjj %in% c(0,1,2,3,4) & 
    iE1kkk %in% c(0,1,2,3,4) & 
    iE1lll %in% c(0,1,2,3,4) & 
    iE1eeee %in% c(0,1,2,3,4) &
    iR9 %in% c(1,2,3,4) &
    iY1aa %in% c(0,1,2,3,4,5) & 
    iY1ak %in% c(0,1,2,3,4,5) &
    iY1al %in% c(0,1,2,3,4,5) &
    iY1am %in% c(0,1,2,3,4,5) &
    iY1an %in% c(0,1,2,3,4,5) &
    iY1ao %in% c(0,1,2,3,4,5) &
    iY1aq %in% c(0,1,2,3,4,5) &
    iY1ar %in% c(0,1,2,3,4,5) &
    iY1at %in% c(0,1,2,3,4,5) &
    iY1au %in% c(0,1,2,3,4,5) &
    iY1b %in% c(0,1,8) & 
    iY2a %in% c(0,1) & 
    iY2c %in% c(0,1) & 
    iY2d %in% c(0,1) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcyddtrauma1 = case_when(validcyddtrauma == 1 ~ 
          (case_when(iY1aa %in% c(4,5) ~ + 1, TRUE ~ 0) +
           case_when(iY1ak %in% c(4,5) ~ + 1, TRUE ~ 0) +
           case_when(iY1al %in% c(4,5) ~ + 1, TRUE ~ 0) +
           case_when(iY1am %in% c(4,5) ~ + 1, TRUE ~ 0) +
           case_when(iY1an %in% c(4,5) ~ + 1, TRUE ~ 0) +
           case_when(iY1ao %in% c(4,5) ~ + 1, TRUE ~ 0) +
           case_when(iY1aq %in% c(4,5) ~ + 1, TRUE ~ 0) +
           case_when(iY1ar %in% c(4,5) ~ + 1, TRUE ~ 0) +
           case_when(iY1at %in% c(4,5) ~ + 1, TRUE ~ 0) +
           case_when(iY1au %in% c(4,5) ~ + 1, TRUE ~ 0))))

df <- df %>% mutate(xcyddtrauma2 = case_when(validcyddtrauma == 1 ~ 
            (case_when(iY2a == 1 ~ + 1, TRUE ~ 0) +
             case_when(iY2c == 1 ~ + 1, TRUE ~ 0) +
             case_when(iY2d == 1 ~ + 1, TRUE ~ 0))))
   
  

df <- df %>% mutate(xcyddtrauma3 = case_when(validcyddtrauma == 1 ~ 
            (case_when(iB34a | iB34b | iB34c %in% c(1,2,3) ~ + 1, TRUE ~ 0) +
            case_when(iY1aa %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1ak %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1al %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1am %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1an %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1ao %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1aq %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1ar %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1at %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
            case_when(iY1au %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0))))

df <- df %>% mutate(xcyddtrauma4 = case_when(validcyddtrauma == 1 ~ 
  (case_when(iE1ddd %in% c(1,2,3,4) ~ + 1,  TRUE ~ 0) +
  case_when(iE1fff %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
  case_when(iE1iii %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
  case_when(iE1jjj %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
  case_when(iE1kkk %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
  case_when(iE1lll %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
  case_when(iE1eeee %in% c(1,2,3,4) ~ + 1, TRUE ~ 0))))
```

**Traumatic Life Events CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYDDTRAUMA = case_when(validcyddtrauma == 1 ~ case_when(
  xcyddtrauma1 >= 1 | xcyddtrauma2 >= 1 ~ 2, 
  xcyddtrauma1 == 0 & xcyddtrauma2 == 0 ~ case_when(
    xcyddtrauma3 >= 1 ~ case_when(
      iR9 == 1 | iY1b == 1 | xcyddtrauma4 >= 2 ~ 1, 
      iR9 != 1 & iY1b < 1 & xcyddtrauma4 < 2 ~ 0),
    xcyddtrauma3 == 0 ~ 0))))
```

## CYDD Play and Leisure (cCYDDPLAY) {#cCYDDPLAY}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYDD Play and Leisure CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYDDPLAY", ][,1:2])
```

**CYDD Play and Leisure Variable Summary Table**

```{r, echo=FALSE}
play_var <- filter(varsummary, iCodes == "iC1d"| iCodes == "iF5b"| iCodes == "iS7b"|
                     iCodes == "iS7d"| iCodes == "iS11a"| iCodes == "iS11b"|
                     iCodes == "iS11c"| iCodes == "iS12")

vartable <- play_var %>% kbl(caption = "CYDD Play and Leisure CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Play and Leisure CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validplay = case_when(
    iC1d %in% c(0,1,2,3,4) & 
    iF5b %in% c(0,1,2,3) & 
    iS7b %in% c(0,1,8) & 
    iS7d %in% c(0,1,8) & 
    iS11a %in% c(0,1) & 
    iS11b %in% c(0,1) & 
    iS11c %in% c(0,1) & 
    iS12 %in% c(0,1) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcyddplay = case_when(validplay == 1 ~ case_when(
  iS11a == 0 & iS11b == 0 & iS11c == 0 ~ + 1, 
  iF5b == 0 ~ + 1, 
  iS12 == 1 ~ + 1)))
```

**Play and Leisure CAP Calculation**

```{r,eval=FALSE}
#This CAP is not calculated if iC1d == 5 
df <- df %>% mutate(cCYDDPLAY = case_when(validplay == 1 ~ case_when(
  iC1d %in% c(0,1,2,3,4) ~ case_when(
    xcyddplay >= 1 ~ 2, 
    iS7b == 1 | iS7d == 1 ~ 1, TRUE ~ 0))))
```

## CYDD Problematic Eating CAP (cCYDDEAT) {#cCYDDEAT}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYDD Problematic Eating CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYDDEAT", ][,1:2])
```

**CYDD Problematic Eating Variable Summary Table**

```{r, echo=FALSE}
eat_var <- filter(varsummary, iCodes == "iE3y"| iCodes == "iK21")

vartable <- eat_var %>% kbl(caption = "CYDD Problematic Eating CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Problematic Eating CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(valideat = case_when(
  iE3y %in% c(0,1,2,3,4) & 
  iK21 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
```

**Problematic Eating CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYDDEAT = case_when(valideat == 1 ~ case_when(
  iE3y %in% c(1,2,3,4) | iK21 %in% c(1,2,3,4) ~ 1, 
  iE3y < 1 & iK21 < 1 ~ 0)))
```

## CYDD Social Relations CAP (cCYDDSOCREL) {#cCYDDSOCREL}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYDD Social Relations CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYDDSOCREL", ][,1:2])
```

**CYDD Social Relations CAP Variable Summary Table**

```{r, echo=FALSE}
socreldd_var <- filter(varsummary, iCodes == "iF5a"| iCodes == "iF5e"| iCodes == "iF5f"|
                         iCodes == "iF13"| iCodes == "iP19b"| iCodes == "iP19f")

vartable <- socreldd_var %>% kbl(caption = "CYDD Social Realtions CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**CYDD Social Relations CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validcyddsocrel = case_when(
    iF5a %in% c(0,1,2,3) & 
    iF5e %in% c(0,1,2,3) & 
    iF5f %in% c(0,1,2,3) & 
    iF13 %in% c(0,1) & 
    iP19b %in% c(0,1,8) & 
    iP19f %in% c(0,1,8) ~ 1, TRUE ~ 0))
```

**Social Relations CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYDDSOCREL = case_when(validcyddsocrel == 1 ~ case_when(
  iF13 == 1 | iP19b == 1 | iP19f == 1 ~ 2, 
  iF13 != 1 & iP19b != 1 & iP19f != 1 ~ case_when(
    iF5a == 0 | iF5e == 0 | iF5f == 0 ~ 1, TRUE ~ 0)))) 
```

## CYDD Strengths CAP (sCYDDSTR) {#cCYDDSTR}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYDD Strengths CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYDDSTR", ][,1:2])
```

**CYDD Strengths CAP Variable Summary Table**

```{r, echo=FALSE}
strength_var <- filter(varsummary, iCodes == "iC7"| iCodes == "iC9a"|
                         iCodes == "iF8b"| iCodes == "iF15a"| iCodes == "iF15g")

vartable <- strength_var %>% kbl(caption = "CYDD Strengths CAP variable label 
                                      information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Strengths CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validcyddstr = case_when(
    iC7 %in% c(0,1,2) & 
    iC9a %in% c(0,1,8) & 
    iF8b %in% c(0,1) & 
    iF15a %in% c(0,1) & 
    iF15g %in% c(0,1) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xcyddstr = case_when(validcyddstr == 1 ~ 
            (case_when(iC7 == 2 ~ + 1, TRUE ~ 0)+
             case_when(iC9a %in% c(1,8) ~ + 1, TRUE ~ 0) +
             case_when(iF8b == 0 ~ + 1, TRUE ~ 0) +
             case_when(iF15a == 0 ~ + 1, TRUE ~ 0) + 
             case_when(iF15g == 0 ~ + 1, TRUE ~ 0))))
```

**Strengths CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYDDSTR = case_when(validcyddstr == 1 ~ case_when(
  xcyddstr >= 4 ~ 1, TRUE ~ 0)))
```

## CYDD Support System for Discharge (cCYDDSSDIS) {#cCYDDSSDIS}

**Last Updated:** May 2, 2022

**Last Updated By:** Brooklyn Keminen

**interRAI Repository Information CYDD Support System for Discharge CAP**

```{r, echo= FALSE}
kable(SAS_interRAI_Code_Info[SAS_interRAI_Code_Info$Item == "cCYDDSSDIS", ][,1:2])
```

**Support System for Discharge CAP Variable Summary Table**

```{r, echo=FALSE}
ssdisdd_var <- filter(varsummary, iCodes == "iA11b"| iCodes == "iA12e"| 
                      iCodes == "iR16a"| iCodes == "iR16b" | iCodes == "iY8a")

vartable <- ssdisdd_var %>% kbl(caption = "CYDD Support System for Discharge CAP  
                      variable label information and accepted response values.")
  
vartable %>% kable_styling(bootstrap_options = c("hover","condensed","bordered"),
                           full_width = F)
```

**Support System for Discharge CAP Intermediary Variables**

```{r,eval=FALSE}
df <- df %>% mutate(validssdis = case_when(
    iA11b %in% c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15) & 
    iA12e %in% c(1,2,3,4,5,6) & 
    iR16d %in% c(0,1,2,8) & 
    iR16e %in% c(0,1,2,8) & 
    iY8a %in% c(0,1,8) ~ 1, TRUE ~ 0))
# iA11b replaced iA11j
```

**Support System for Discharge CAP Calculation**

```{r,eval=FALSE}
df <- df %>% mutate(cCYDDSSDIS = case_when(validssdis == 1 ~ case_when(
  iA11b %in% c(5,8) | iA12e %in% c(1,5) | iY8a %in% c(1,8) | iR16d %in% c(0,1) |
    iR16e %in% c(0,1) ~ 1, TRUE ~ 0)))
```

## CAP Reliability Metrics Table

```{r,eval=FALSE}
caps <- as.data.frame(subset(df, select = c(
                  "cCYMHATTACH","cCYMHCAREDIST","cCYMHCTRLINT",
                  "cCYMHHARMOTH","cCYMHINFSUPP","cCYMHMEDADH","cCYMHPARENT",
                  "cCYMHREAD","cCYMHSOCREL","cCYMHSSH","cCYMHTOBAC",
                  "cCYMHTRAUMA","cCYMHEDU","cCYMHLIFSKIL","cCYMHWTMGT",
                  "cCYDDCONTI","cCYDDAM","cCYDDINJUR","cCYDDTRAUMA",
                  "cCYDDEAT","cCYDDSTR","cCYMHCAFFE","cCYMHCOMM",
                  "cCYMHCRIM","cCYMHFIRE","cCYMHIPCON","cCYMHMEDREV",
                  "cCYMHPA","cCYMHSLEEP","cCYMHSTR","cCYMHSSDIS",
                  "cCYMHTRANS","cCYMHVG","cCYMHGAMB","cCYMHSEX",
                  "cCYMHSUBUSE","cCYDDSSH","cCYDDEDU","cCYDDNUTRI",
                  "cCYDDPLAY","cCYDDSOCREL","cCYDDSSDIS")))

#Summary Statistics Table and Frequency
st_options(plain.ascii = FALSE,       
           style = "rmarkdown", 
           subtitle.emphasis = FALSE,
           dfSummary.labels.col = FALSE)
view(
  dfSummary(caps, 
            varnumbers   = FALSE,
            na.col       = FALSE,
            style        = "grid",
            plain.ascii  = FALSE,
            headings     = FALSE,
            graph.magnif = .75),
            method = "viewer")
```

## Add Scale & CAP Value Labels

```{r,eval=FALSE}
df <- df %>% set_labels(sDbSI, labels = c("Both senses intact" = 0,
                    "One sense intact,the other mild/moderately impaired" = 1,
                    "One sense intact, the other severely impaired" = 2,
                    "Both senses mild/moderately impaired" = 3,
                    "One sense mild/moderately, the other severely impaired" = 4,
                    "Both senses severely impaired" = 5))

df <- df %>% set_labels(sCYABS, labels = c("No signs of aggression" = 0, 
                                      "Mild to moderate aggression" = c(1:4), 
                                      "More severe aggression" = c(5:12)))

df <- df %>% set_labels(cCYDDCONTI, cCYMHATTACH, cCYMHCAFFE, cCYMHCAREDIST, 
                        cCYMHCOMM, cCYMHCRIM, cCYMHINFSUPP, cCYMHMEDADH, cCYMHMEDREV,
                        cCYMHPARENT, cCYMHPA, cCYMHREAD, cCYMHSLEEP, cCYMHSTR,
                        cCYMHSSDIS, cCYMHTRANS, cCYMHVG, cCYMHGAMB, cCYMHSEX,
                        cCYDDEDU, cCYDDINJUR, cCYDDEAT, cCYDDSTR, cCYDDSSDIS,
                        labels =c("Triggered" = 1, "Not Triggered" = 0))

df <- df %>% set_labels(cCYDDSSH, cCYMHHARMOTH, cCYMHSSH, labels =c("Triggered - 
                        Moderate risk" = 1, "Not Triggered" = 0, "Triggered -
                        High risk" = 2))

df <- df %>% set_labels(sCOMM, labels = c("Intact" = 0, "Borderline intact" = 1,
                    "Mild impairment" = 2, "Mild/moderate impariment" = 3, 
                    "Moderate impairment" = 4, "Moderate/severe impairment" = 5,
                    "Severe impairment" = 6, "Severe/verysevere impairment" = 7, 
                    "Very severe impairment" = 8))

df <- df %>% set_labels(cCYMHCTRLINT, labels = c("Not triggered" = 0, "Triggered -
                        not emergency situation" = 1, "Triggered - emergency 
                        situation" = 2))

df <- df %>% set_labels(cCYMHWTMGT, labels = c("Not triggered" = 0, "Triggered -
                        problematic eating behaviour" = 1, "Triggered - weight 
                        concern" = 2))

df <- df %>% set_labels(cCYMHFIRE, labels = c("Triggered - Low risk" = 1, "Not 
                        Triggered" = 0, "Triggered - Moderate risk" = 2, 
                        "Triggered - High risk" = 3))

df <- df %>% set_labels(cCYMHIPCON, labels = c("Not triggered" = 0, "Triggered - 
                        conflict with a specific domain" = 1, "Triggered - widespread
                        conflict" = 2))

df <- df %>% set_labels(cCYMHSOCREL, labels = c("Not triggered" = 0, "Triggered - 
                        maladaptive or antisocial peer interactions" = 1, 
                        "Triggered - social withdrawal or isolation" = 2))

df <- df %>% set_labels(cCYMHTOBAC, labels = c("Not triggered" = 0, "Triggered - 
                        prevent long term tobacco use" = 1, "Triggered - reduce 
                        or cease daily tobacco use" = 2))

df <- df %>% set_labels(cCYMHTRAUMA, cCYDDTRAUMA, labels = c("Not triggered" = 0,
                        "Triggered - Impact of prior traumatic events" = 1, 
                        "Triggered - Immediate safety concerns" = 2))

df <- df %>% set_labels(cCYMHEDU, labels = c("Not triggered" = 0, "Triggered - 
                        current disrupted education" = 1, "Triggered - risk of 
                        dropping out of school" = 2))

df <- df %>% set_labels(cCYMHLIFSKIL, labels = c("Not triggered" = 0, "Triggered - 
                        IADL assistance" = 1, "Triggered - ADL assistance" = 2))

df <- df %>% set_labels(cCYDDAM, labels = c("Not triggered" = 0, "Triggered - 
                        moderate dependence on others for mobility" = 1, 
                        "Triggered - high dependence on others for mobility" = 2))

df <- df %>% set_labels(cCYDDNUTRI, labels = c("Not triggered" = 0, "Triggered - 
                        tube feeding" = 1, "Triggered - modified foods" = 2))

df <- df %>% set_labels(cCYDDPLAY, labels = c("Not triggered" = 0, "Triggered - 
                        respect activity preferences" = 1, "Triggered - support 
                        participation in play and leisure" = 2))

df <- df %>% set_labels(cCYDDSOCREL, labels = c("Not triggered" = 0, "Triggered - 
                        promote social involvement" = 1, "Triggered - improve unsettled
                        relationships" = 2))
```

# PowerBI variables (clean dataframe)

Once the above code has been run, the last piece of the script will pull all variables necessary for the PowerBI Dashboard and remove intermediary variables that are unnecessary.This may need to be modified to fit your organization's specific needs.

```{r,eval=FALSE}

df2 <- df %>% select(EMHID,Age, T_age, iA3, iA2, iA5a, worker_id, program_id, Tool, Type, ref, compl, FirstChYMH, LastChYMH, FirstAx, LastAx, FirstScreener, LastScreener, "program_name", "oGoal1", "oGoal2", "oGoal3", "oGoal4","cihiA2a", "cihiA2c", "iA2", "oV5","sCYPSS","sCYRHO","sCHAMHPS","sCYFAMILY","sCYSLEEP",
                     "sCYANXS","sCYDSI","sCYPEER","sINTERN","sCYPS",
                     "sCYRIChY","sCYYIADLC",
                     "DABSS","INTS","ADLlesscomplex","caregiverdistress",
                     "sCYSensDiff","ALEIC","sCYABS","sASSC","sCYDISTRACT",
                     "sCYADL","sCYDABS","sCYMHANHEDO","sEXTERN",
                     "sCYRISSK","sDbSI",
                     "sCYMHSDeS","sCYYIADLP",
                     "EXTS","ADLcomplex",
                     "cognitivefunction","sCYSchDis","sCYRelStren","sCOMM",  "cCYMHATTACH","cCYMHCAREDIST","cCYMHCTRLINT",
                  "cCYMHHARMOTH","cCYMHINFSUPP","cCYMHMEDADH","cCYMHPARENT",
                  "cCYMHREAD","cCYMHSOCREL","cCYMHSSH","cCYMHTOBAC",
                  "cCYMHTRAUMA","cCYMHEDU","cCYMHLIFSKIL","cCYMHWTMGT",
                  "cCYDDCONTI","cCYDDAM","cCYDDINJUR","cCYDDTRAUMA",
                  "cCYDDEAT","cCYDDSTR","cCYMHCAFFE","cCYMHCOMM",
                  "cCYMHCRIM","cCYMHFIRE","cCYMHIPCON","cCYMHMEDREV",
                  "cCYMHPA","cCYMHSLEEP","cCYMHSTR","cCYMHSSDIS",
                  "cCYMHTRANS","cCYMHVG","cCYMHGAMB","cCYMHSEX",
                  "cCYMHSUBUSE","cCYDDSSH","cCYDDEDU","cCYDDNUTRI",
                  "cCYDDPLAY","cCYDDSOCREL","cCYDDSSDIS")

```

# interRAI Full Scripts

The code below is a clean script for use at other agencies. For the compass specific script, see below this one. The script can be copy and pasted into an R script file which can then be added to your PowerBI interRAI query. Ensure that you update file locations and naming conventions to match your own environment.

## Clean Script

```{r, warning=FALSE, message=FALSE, eval=FALSE}


###########################################################################
###########################################################################
###                                                                     ###
###                     INTERRAI TO POWER BI SCRIPT                     ###
###                                                                     ###
###########################################################################
###########################################################################

rm(list = ls())

library(readr)
library(dplyr)
library(readxl)
library(data.table)
library(magrittr)
library(stringr)

##################################################################
##                  Pull EMHware interRAI Data                  ##
##################################################################

## Grab EMHware codebook

EMHware_CodeBook <- read_excel("M:\\DATA & REPORTS\\Clinical & Client Services\\Clinical Data\\interRAI\\interRAI Matching Codebook.xlsx", sheet = "EMHware Variables")

#### Grab new ChYMH data

ChYMH_folder <- "M:/DATA & REPORTS/Clinical & Client Services/Clinical Data/interRAI/EMHware interRAI ChYMH Export"

allfiles <- list.files(path=ChYMH_folder, pattern="*.csv", full.names=TRUE)

ChYMH_export <- plyr::ldply(allfiles, read_csv, show_col_types = FALSE)

ChYMH_1 <- filter(ChYMH_export,!is.na(program_name)) # remove rows w/NAs in program_name

ChYMH_1 <- subset(ChYMH_1, !grepl("default", program_name)) # remove rows w/default as program

ChYMH_1$SOURCE<-"EMHware"

# convert all true and false to 0 and 1

ChYMH_1 <- ChYMH_1 %>%
  mutate(across(everything(), ~sub("true", "1", .)))
ChYMH_1 <- ChYMH_1 %>%
  mutate(across(everything(), ~sub("false", "0", .)))
ChYMH_1 <- ChYMH_1 %>%
  mutate(across(everything(), ~sub("TRUE", "1", .)))
ChYMH_1 <- ChYMH_1 %>%
  mutate(across(everything(), ~sub("FALSE", "0", .)))

# auto format column types

ChYMH_2 <- type_convert(ChYMH_1)

ChYMH_3 <- transform(ChYMH_2,cihiU3=as.numeric(cihiU3),client_id=as.character(client_id),iA5d=as.character(iA5d))


ChYMH_3$iA8 <- gsub("1", "Initial", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("6First", "Initial", ChYMH_3$iA8) 
ChYMH_3$iA8 <- gsub("5First", "Initial", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("5", "Discharge", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("2", "Reassessment", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("6", "Discharge", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("4", "Reassessment", ChYMH_3$iA8)

ChYMH_4 <- subset(ChYMH_3, !grepl("default", program_name))
ChYMH_4$EMHID <- ChYMH_4$client_id

# Renaming columns

df <- ChYMH_4 %>%
  rename("Tool" = "type_cd",
         "ref"="iA9",
         "ED_Screen"="iW29",
         "ID_Screen"="iA47",
         "ComorbidMedical_Screen" = "iA48")

############################################################################
############################################################################
###                                                                      ###
###                          CALCULATED COLUMNS                          ###
###                                                                      ###
############################################################################
############################################################################


##------------------------------------------------------------------------
##  2. Type of assessment (Initial, Reassessment, Monitoring, Discharge)   
##------------------------------------------------------------------------

df <- df %>% mutate(Type = if_else(Tool =="chymh_monitoring_op", "Monitoring Assessment",
                                                       if_else(is.na(iA8), oA8, iA8))) 

df$Type <- recode(df$Type,`S-INTL`="Initial",
          `2`= "Reassessment",
        `S-SQNT`="Reassessment",
         `Readmission Initial`="Initial")
             
##---------------------------------
##  4. Last assessment completed      
##---------------------------------


df <- mutate(df,
                   compl = if_else(is.na(iU2), iT1, iU2))

##---------------------
##  6. Calculate Age   
##---------------------

# calculate age in years at given reference date (df$ref)

df$Age <- as.integer((df$ref - as.Date(paste0(df$iA3, "-01-01")))/365.25)

##------------------------------------------
##  7. Calculate FirstChYMH and last ChYMH  
##------------------------------------------

df <- df %>%
  group_by(EMHID) %>%
  mutate(MinRef = min(if_else(Tool != "rscr", ref, as.Date(Inf)), na.rm = FALSE),
         MaxRef = max(if_else(Tool != "rscr", ref, as.Date(-Inf)), na.rm = FALSE),
         FirstChYMH = as.integer(ref == MinRef),
         LastChYMH = as.integer(ref == MaxRef)) %>%
  ungroup() %>%
  select(-MinRef, -MaxRef)

##-------------------------------------------------------------------
##  8. For FirstAx and last AX variable (get clarification on this)  
##-------------------------------------------------------------------

df <- df %>%
  group_by(EMHID) %>%
  mutate(MinRef = min(ref, na.rm = FALSE),
         MaxRef = max(ref, na.rm = FALSE),
         FirstAx = as.integer(ref == MinRef),
         LastAx = as.integer(ref == MaxRef)) %>%
  ungroup() %>%
  select(-MinRef, -MaxRef)

##-----------------------------
##  9. First & last  Screener  
##-----------------------------
 
df <- df %>%
  group_by(EMHID) %>%
  mutate(MinRef = min(if_else(Tool == "rscr", ref, as.Date(Inf)), na.rm = FALSE),
         MaxRef = max(if_else(Tool == "rscr", ref, as.Date(-Inf)), na.rm = FALSE),
         FirstScreener = as.integer(ref == MinRef),
         LastScreener = as.integer(ref == MaxRef)) %>%
  ungroup() %>%
  select(-MinRef, -MaxRef)

#test <- df %>% select(EMHID, Tool, ref, FirstChYMH, LastChYMH, FirstAx, LastAx, FirstScreener, LastScreener)

##------------------
##  10. DSI_Scale 
##------------------

df <- df %>% mutate(validdsi = case_when(
  iE1ss %in% c(0,1,2,3,4) &
    iE1vv %in% c(0,1,2,3,4) &
    iE1ww %in% c(0,1,2,3,4) &
    iE1xx %in% c(0,1,2,3,4) &
    iE1yy %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

df <- df %>% mutate(DSI__scale = case_when(validdsi == 1 ~ 
                                         (case_when(iE1ss %in% c(0,1,2,3) ~ + iE1ss, iE1ss == 4 ~ + 3)) +
                                         (case_when(iE1vv %in% c(0,1,2,3) ~ + iE1vv, iE1vv == 4 ~ + 3)) +
                                         (case_when(iE1ww %in% c(0,1,2,3) ~ + iE1ww, iE1ww == 4 ~ + 3)) +
                                         (case_when(iE1xx %in% c(0,1,2,3) ~ + iE1xx, iE1xx == 4 ~ + 3)) +
                                         (case_when(iE1yy %in% c(0,1,2,3) ~ + iE1yy, iE1yy == 4 ~ + 3))))

##------------------
##  11. ANX Scores  
##------------------

df <- df %>% mutate(validnxs = case_when(
  iE1eee %in% c(0,1,2,3,4) & 
    iE1fff %in% c(0,1,2,3,4) & 
    iE1ggg %in% c(0,1,2,3,4) & 
    iE1iii %in% c(0,1,2,3,4) & 
    iE1kkk %in% c(0,1,2,3,4) & 
    iE1lll %in% c(0,1,2,3,4) & 
    iE1eeee %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

df <- df %>% mutate(ANX__scale = case_when(validnxs == 1 ~ 
                                          iE1eee + iE1fff + iE1ggg + iE1iii + iE1kkk + iE1lll + iE1eeee))

##--------------
##  12. CHAMHP  
##--------------

df <- df %>%
  mutate(CHAMHPS__scale =
           ifelse(
             Age <= 7,
             ifelse(
               iX14a == 0,
               ifelse(
                 iX2a %in% c(0, 1, 2),
                 ifelse(iE1rrr %in% c(0, 1), 0,
                        ifelse(iE1rrr %in% c(2, 3, 4), 2, NA)),
                 ifelse(iX2a %in% c(3, 4, 5), 2, NA)),
               ifelse(
                 iX14a == 1,
                 ifelse(iX2a %in% c(0, 1), 1,
                        ifelse(iX2a %in% c(2, 3, 4, 5), 3, NA)),
                 ifelse(iX14a %in% c(2, 3, 4),
                        ifelse(iE1lll == 0, 3,
                               ifelse(
                                 iE1lll %in% c(1, 2, 3, 4), 5, NA
                               )), NA))),
             ifelse(
               Age >= 8 & Age <= 11,
               ifelse(
                 iX14a %in% c(0, 1),
                 ifelse(
                   iX14b %in% c(0, 1),
                   ifelse(
                     iE3n %in% c(0, 1, 2),
                     ifelse(iEEE2 %in% c(0, 1), 0,
                            ifelse(iEEE2 %in% c(2, 3, 4), 2, NA)),
                     ifelse(iE3n %in% c(3, 4), 4, NA)
                   ),
                   ifelse(
                     iX14b == 2,
                     ifelse(iE1qq %in% c(0, 1, 2), 1,
                            ifelse(iE1qq %in% c(3, 4), 3, NA)),
                     ifelse(iX14b %in% c(3, 4), 4, NA)
                   )),
                 ifelse(
                   iX14a == 2,
                   ifelse(iE1vv %in% c(0, 1, 2), 3,
                          ifelse(iE1vv %in% c(3, 4), 5, NA)),
                   ifelse(iX14a %in% c(3, 4), 5, NA)
                 )),
               ifelse(Age >= 12,
                      ifelse(
                        iX14a %in% c(0, 1),
                        ifelse(
                          iX14b %in% c(0, 1),
                          ifelse(
                            iE1iii %in% c(0, 1, 2),
                            ifelse(
                              iE1xx %in% c(0, 1, 2),
                              ifelse(
                                iY1ao %in% c(0, 1, 2),
                                ifelse(iX1d == 0, 1, 2),
                                ifelse(iY1ao %in% c(3, 4, 5), 3, NA)
                              ),
                              ifelse(iE1xx %in% c(3, 4), 3, NA)
                            ),
                            ifelse(iE1iii %in% c(3, 4), 3, NA)
                          ),
                          ifelse(iX14b == 2,
                                 3,
                                 ifelse(iX14b %in% c(3, 4),
                                        5,
                                        NA))),
                        ifelse(
                          iX14a == 2,
                          ifelse(
                            iX1c %in% c(0, 1, 2, 3, 4),
                            ifelse(
                              iBB5f %in% c(0, 8),
                              ifelse(iX2a %in% c(0, 1),
                                     3,
                                     ifelse(iX2a %in% c(2, 3, 4, 5),
                                            4,
                                            NA)),
                              ifelse(iBB5f == 1, 4, NA)
                            ),
                            ifelse(iX1c == 5, 4, NA)
                          ),
                          ifelse(iX14a %in% c(3, 4),
                                 ifelse(
                                   iEEE2 %in% c(0, 1),
                                   ifelse(iE1qqq == 0,
                                          5,
                                          ifelse(iE1qqq %in% c(1, 2, 3, 4),
                                                 6,
                                                 NA)),
                                   ifelse(iEEE2 %in% c(2, 3, 4),
                                          6,
                                          NA)),
                                 NA))),NA))))

#test <- df %>% filter(Age >= 12 & iX14a >=3) %>% select(EMHID,Age, iX14a, iBB5f, iEEE2, iE1qqq, CHAMHPS__scale)

##------------------
##  13. DABS scale  
##------------------

df <- df %>% mutate(validdabs = case_when( 
  iE3l %in% c(0,1,2,3,4) &
    iE3m %in% c(0,1,2,3,4) &
    iE3n %in% c(0,1,2,3,4) &
    iE3q %in% c(0,1,2,3,4) &
    iE3r %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

df <- df %>% mutate(DABS__scale = case_when(validdabs == 1 ~
                                          iE3l + iE3m + iE3n + iE3q + iE3r))

##--------------
##  ABS__scale  
##--------------

df <- df %>% mutate(validabs = case_when(
  iE3l %in% c(0,1,2,3,4) & 
    iE3m %in% c(0,1,2,3,4) & 
    iE3n %in% c(0,1,2,3,4) & 
    iE3p %in% c(0,1,2,3,4) ~ 1,
  TRUE ~ 0)) 

df <- df %>% mutate(ABS__scale = case_when(validabs==1 ~ 
                                                         (case_when(iE3l %in% c(0,1,2,3) ~ iE3l, iE3l == 4 ~ + 3)) + 
                                                         (case_when(iE3m %in% c(0,1,2,3) ~ + iE3m, iE3m == 4 ~ + 3)) +
                                                         (case_when(iE3n %in% c(0,1,2,3) ~ + iE3n, iE3n == 4 ~ + 3)) + 
                                                         (case_when(iE3p %in% c(0,1,2,3) ~ + iE3p, iE3p == 4 ~ + 3))))
##-------------------
##  14. SOCDIS scale: sCYMHANHEDO
##-------------------

df <- df %>% mutate(validedo = case_when(
  iE1qqq %in% c(0,1,2,3,4) &                                            
    iE1rrr %in% c(0,1,2,3,4) &                                                 
    iE1sss %in% c(0,1,2,3,4) &                                              
    iE1ttt %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

df <- df %>% mutate('SOCDIS__scale' = case_when(validedo == 1 ~
                                              iE1qqq + iE1rrr + iE1sss + iE1ttt))

##-----------------------
##  15. DISTRACT_scale   
##-----------------------

df <- df %>% mutate(validact = case_when(
  iE1oo %in% c(0,1,2,3,4) &
    iE1pp %in% c(0,1,2,3,4)&
    iE1qq %in% c(0,1,2,3,4)&
    iE1rr %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

df <- df %>% mutate(DISTRACT__scale = case_when(validact == 1 ~ (
  iE1oo +iE1pp +iE1qq + iE1rr)))

##--------------------------
##  16. KinarkRiskHTO_comb  
##--------------------------

df$KinarkRiskHTO_comb <- df$KinarkRiskHTO

##--------------------------
##  17. KinarkRiskHTS_comb  
##--------------------------

df$KinarkRiskHTS_comb <- df$KinarkRiskHTS

##--------------------------
##  18. KinarkRiskHTP_comb  
##--------------------------

df$KinarkRiskHTP_comb<- df$KinarkRiskHTP

##-------------------------
##  19. KinarkRiskSM_comb  
##-------------------------

df$KinarkRiskSM_comb <- df$KinarkRiskSM

##--------------------------
##  20. KinarkRiskVCP_comb  
##--------------------------
df$KinarkRiskVCP_comb<- df$KinarkRiskVCP

##--------------------------
##  21. KinarkRiskFB_comb  
##--------------------------

df$KinarkRiskFB_comb <- df$KinarkRiskFB

##-------------------------
##  22. KinarkRiskOC_comb  
##-------------------------
df$KinarkRiskOC_comb <- df$KinarkRiskOC

##-------------
##  23. Acute  
##-------------

df$Acute <- df$CaseComplexityFA

##---------------
##  24. Complex  
##---------------

df$Complex <- df$CaseComplexityS

##-------------------------
##  25. KinarkRiskHTO_cat  
##-------------------------

df <- df %>%
  mutate(KinarkRiskHTO_cat = case_when(
    KinarkRiskHTO == 0 ~ "No Risk",
    KinarkRiskHTO == 1 ~ "Potential Risk",
    KinarkRiskHTO == 2 ~ "Risk Identified",
    KinarkRiskHTO == 3 ~ "Serious Risk"
  ))

##-------------------------
##  26. KinarkRiskHTS_cat  
##-------------------------

df <- df %>%
  mutate(KinarkRiskHTS_cat = case_when(
    KinarkRiskHTS  == 0 ~ "No Risk",
    KinarkRiskHTS  == 1 ~ "Potential Risk",
    KinarkRiskHTS  == 2 ~ "Risk Identified",
    KinarkRiskHTS  == 3 ~ "Serious Risk"
  ))

##------------------------
##  27. KinarkRiskSM_cat  
##------------------------

df <- df %>%
  mutate(KinarkRiskSM_cat = case_when(
    is.na(KinarkRiskSM )  ~ NA,
    KinarkRiskSM  == 0 ~ "No Risk",
    KinarkRiskSM  == 1 ~ "Potential Risk",
    KinarkRiskSM  == 2 ~ "Risk Identified",
    KinarkRiskSM  == 3 ~ "Serious Risk"
  ))

##------------------------
##  28. KinarkRiskSM_cat  
##------------------------

df <- df %>%
  mutate(KinarkRiskHTP_cat = case_when(
    is.na(KinarkRiskHTP )  ~ NA,
    KinarkRiskHTP  == 0 ~ "No Risk",
    KinarkRiskHTP  == 1 ~ "Potential Risk",
    KinarkRiskHTP  == 2 ~ "Risk Identified",
    KinarkRiskHTP  == 3 ~ "Serious Risk"
  ))

##-------------------------
##  29. KinarkRiskVCP_cat  
##-------------------------

df <- df %>%
  mutate(KinarkRiskVCP_cat = case_when(
    is.na(KinarkRiskVCP )  ~ NA,
    KinarkRiskVCP  == 0 ~ "No Risk",
    KinarkRiskVCP  == 1 ~ "Potential Risk",
    KinarkRiskVCP  == 2 ~ "Risk Identified",
    KinarkRiskVCP  == 3 ~ "Serious Risk"
  ))

##------------------------
##  30. KinarkRiskFB_cat  
##------------------------

df <- df %>%
  mutate(KinarkRiskFB_cat = case_when(
    is.na(KinarkRiskFB )  ~ NA,
    KinarkRiskFB  == 0 ~ "No Risk",
    KinarkRiskFB  == 1 ~ "Potential Risk",
    KinarkRiskFB  == 2 ~ "Risk Identified",
    KinarkRiskFB  == 3 ~ "Serious Risk"
  ))

##------------------------
##  31. KinarkRiskOC_cat  
##------------------------

df <- df %>%
  mutate(KinarkRiskOC_cat = case_when(
    is.na(KinarkRiskOC )  ~ NA,
    KinarkRiskOC  == 0 ~ "No Risk",
    KinarkRiskOC  == 1 ~ "Potential Risk",
    KinarkRiskOC  == 2 ~ "Risk Identified",
    KinarkRiskOC  == 3 ~ "Serious Risk"
  ))

##-----------------
##  32. Acute_cat  
##-----------------

df <- df %>%
  mutate(Acute_cat = case_when(
    is.na(Acute)  ~ NA,
    Acute == 1 ~ "Yes",
    Acute == 0 ~ "No"
  ))

##-------------------
##  33. Complex_cat  
##-------------------

df <- df %>%
  mutate(Complex_cat = case_when(
    is.na(Complex)  ~ NA,
    Complex == 1 ~ "Yes",
    Complex == 0 ~ "No"
  ))



##------------------
##  43. Positive Symptoms Scale  
##------------------

df <- df %>% mutate(validpss = case_when(iE1mmm %in% c(0,1,2,3,4) & 
                                                       iE1ooo %in% c(0,1,2,3,4) & 
                                                       iE1nnn %in% c(0,1,2,3,4) & 
                                                       iE1ppp %in% c(0,1,2,3,4) ~ 1,
                                                     TRUE ~ 0))

df <- df %>% mutate(PSS__scale = case_when(validpss == 1 ~ 
                                                     (case_when(iE1mmm %in% c(0,1,2,3) ~ iE1mmm, iE1mmm == 4 ~ + 3)) + 
                                                     (case_when(iE1ooo %in% c(0,1,2,3) ~ + iE1ooo, iE1ooo == 4 ~ + 3)) +
                                                     (case_when(iE1nnn %in% c(0,1,2,3) ~ + iE1nnn, iE1nnn == 4 ~ + 3)) +
                                                    (case_when(iE1ppp %in% c(0,1,2,3) ~ + iE1ppp, iE1ppp == 4 ~ + 3)))) 
df$sCYPSS <- df$PSS__scale

##---------------
##  36.  Trauma  
##---------------

df <- df %>%
  mutate(Trauma = case_when(
    is.na(iY1b)  ~ NA,
    iY1b == 1 ~ "Caused Intense Fear",
    iY1b == 0 ~ "No or Not Applicable",
    iY1b == 8 ~ "Did Not Respond"
  ))


##--------------------
##  37.  RISSK_scale  
##--------------------

df <- df %>% mutate(validssk = case_when(
  iE1ss %in% c(0:4) &
    iE1tt %in% c(0:4) &
    iE1vv %in% c(0:4) &
    iE1ww %in% c(0:4) &
    iE1xx %in% c(0:4) &
    iE1yy %in% c(0:4) &
    iE1aaa %in% c(0:4) &
    iE1rrr %in% c(0:4) &
    iE1ttt %in% c(0:4) &
    iE3w %in% c(0:4) &
    iP19h %in% c(0,1,8) &
    iX1a %in% c(0:5) &
    iX1b %in% c(0,1,8) & 
    iX1c %in% c(0:5) &
    iX1d %in% c(0,1) ~ 1, TRUE ~ 0),
  xdsi = iE1ss + iE1tt + iE1vv + iE1ww + iE1xx +iE1yy + iE1aaa + iE1rrr + iE1ttt)

df <- df %>% mutate(RISSK__scale = case_when(validssk == 1 ~ 
                                           (case_when(iX1c == 0 ~
                                                        case_when(iX1d == 0 ~ 
                                                                    case_when(iX1a == 0 ~ 
                                                                                case_when(iE3w == 0 ~ 
                                                                                            case_when (xdsi >= 0 & xdsi <= 17 ~ 0,TRUE ~ 1),TRUE ~ 1),TRUE ~ 3)),
                                                      iX1c %in% c(1,2,3) ~ 
                                                        case_when(iX1a %in% c(0,1,2) ~ 
                                                                    case_when(iX1b %in% c(0,8) ~ 
                                                                                case_when(xdsi %in% c(0,1) ~ 1, 
                                                                                          xdsi >= 2 & xdsi <= 12 ~ 2, 
                                                                                          xdsi >= 13 & xdsi <= 36 ~ 3),TRUE ~ 
                                                                                case_when(iX1d == 0 ~ 2),TRUE ~ 4)),
                                                      iX1c == 4 ~ 
                                                        case_when(iX1d == 0 ~ 3,TRUE ~ 
                                                                    case_when(iX1b == 0 ~ 
                                                                                case_when(iP19h == 0 ~ 4, TRUE ~ 5),TRUE ~ 5)),
                                                      iX1c == 5 ~ 
                                                        case_when(iX1b %in% c(0,8) ~ 
                                                                    case_when (iX1d == 0 ~ 3,TRUE ~ 5),iX1a %in% c(0,1,2,3) ~ 5,TRUE ~ 6)))))

##-----------------
##  40. RIO_scale  
##-----------------

df <- df %>% mutate(validrio = case_when(
  iE1oo %in% c(0,1,2,3,4) &
    iE3l %in% c(0,1,2,3,4) &
    iE3m %in% c(0,1,2,3,4) & 
    iE3n %in% c(0,1,2,3,4) & 
    iE3q %in% c(0,1,2,3,4) &
    iP19h %in% c(0,1,8) &
    iX2a %in% c(0,1,2,3,4,5) &
    iX2b %in% c(0,1,2,3,4,5) &
    iX2c %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))

df <- df %>% mutate(xrio = case_when(validrio == 1 ~ iX2a + iX2b + iX2c))

df <- df %>% mutate(xbeh = case_when(validrio ==1 ~ 
                                       (case_when(iE3l %in% c(2,3,4) ~ iE3l-1) +
                                          case_when(iE3n %in% c(2,3,4) ~ iE3n-1))))

df <- df %>% mutate(RIO__scale = case_when(validrio == 1 ~ 
                                         (case_when(iE3m == 0 ~ 
                                                      (case_when(xrio == 0 ~ 
                                                                   case_when(iE3q & iE3n %in% c(1,2,3,4) ~ 1,TRUE ~ 0))) +
                                                      (case_when(xrio %in% c(1,2) ~ 1, TRUE ~ 0)) +
                                                      (case_when(xrio %in% c(3,4) ~ 3, TRUE ~ 0)) +
                                                      (case_when(xrio >= 5 ~ 3, TRUE ~ 0)), TRUE ~ 0) +
                                            case_when(iE3m == 1 ~ 
                                                        (case_when(xrio %in% c(0,1) ~ 
                                                                     ((case_when(iE3q == 0 ~ 1, TRUE ~ 0)) +
                                                                        case_when(iE3q >= 1 ~ 
                                                                                    (case_when(iE1oo == 0 ~ 1, TRUE ~ 0) +
                                                                                       (case_when(iE1oo %in% c(1,2,3) ~ 2, TRUE ~ 0)) +
                                                                                       (case_when(iE1oo == 4 ~ 3, TRUE ~ 0))))), TRUE ~ 0) +
                                                           case_when(xrio %in% c(2,3,4,5) ~ 3, TRUE ~ 0) +
                                                           case_when(xrio >= 6 ~ case_when(iE3q & iE3n %in%
                                                                                            c(1,2,3,4) ~ 5,TRUE ~ 4), TRUE ~ 0)),
                                                      TRUE ~ 0) +
                                            case_when(iE3m == 2 ~
                                                        (case_when(xrio >= 0 & xrio <= 6 ~ 
                                                                     (case_when(xbeh %in% c(0,1) ~ 3, TRUE ~ 0) +
                                                                        case_when(xbeh >= 2 ~ 4,TRUE ~ 5)), TRUE ~ 0)), TRUE ~ 0) +
                                            case_when(iE3m == 3 ~ 
                                                        (case_when(xrio %in% c(0,1,2,3,4) ~ 3, TRUE ~ 0) +
                                                           case_when(xrio >= 5 ~ case_when(iP19h %in% c(0,8) ~ 4,TRUE ~ 5))), 
                                                      TRUE ~ 0) +
                                            case_when(iE3m == 4 ~ 
                                                        (case_when(xrio %in% c(0,1,2) ~ 4, TRUE ~ 0) +
                                                           case_when(xrio >= 3 & xrio <= 8 ~ 5, TRUE ~ 0)+ 
                                                           case_when(xrio >= 9 ~ 6, TRUE ~ 0)), TRUE ~ 0))))
##---------------------------------------
##  41. SOS__scale SEVERITY OF SELF HARM  
##---------------------------------------

df <- df %>% mutate(validsos = case_when(
  iC1d %in% c(0,1,2,3,4,5) & #  decision making
    iC2a %in% c(0,1) & #  short term memory (brooklyn had iC2a) <-- look this up
    iD1 %in% c(0,1,2,3,4) &  # understoof
    iE1mmm %in% c(0,1,2,3,4) &  #hallucinations
    iE1nnn %in% c(0,1,2,3,4) & # command hallucinations
    iE1ooo %in% c(0,1,2,3,4) & # delusions
    iE1ppp %in% c(0,1,2,3,4) & # Abnormal thought processes
    iE1ss %in% c(0,1,2,3,4) & # Sad facial expressions
    iE1vv %in% c(0,1,2,3,4) & # negative statements
    iE1ww %in% c(0,1,2,3,4) & # self-deprecating
    iE1xx %in% c(0,1,2,3,4) & # guilt or shame
    iE1yy %in% c(0,1,2,3,4) & # hopelessness
    iG2j %in% c(0,1,2,3,4,5,6,8) & #Eating
    iX1b %in% c(0,1,8) & # suicidal intent
    iX1c %in% c(0,1,2,3,4,5) & # considered self-injury
    iX1d %in% c(0,1) & #others concerned about self-injury
    iX1e %in% c(0,1) ~ 1, TRUE ~ 0)) # suicide plan


df <- df %>% mutate(xcsp1 = case_when(
  iC1d %in% c(0,1,2,3,4,5) &
    iD1 %in% c(0,1,2,3,4) &
    iC2a %in% c(0,1) ~ 1, TRUE ~ 0))


df <- df %>% mutate(xcps2 = case_when(
  iC1d %in% c(0,1,2,3,4,5) &
    iD1 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))


# Impairment count

df <- df %>% mutate(xcps1 = case_when(validsos == 1 ~
                                                    (
                                                      case_when(iC1d %in% c(1, 2, 3) ~ 1, TRUE ~ 0) +
                                                        case_when(iD1 %in% c(1, 2, 3, 4) ~ 1, TRUE ~ 0) +
                                                        case_when(iC2a == 1 ~ +1, TRUE ~ 0)
                                                    )))

# Severe Imp count

df <- df %>% mutate(xcps2 = case_when(validsos == 1 ~
                                                    (
                                                      case_when(iC1d == 3 ~ 1, TRUE ~ 0) +
                                                        case_when(iD1 %in% c(3, 4) ~ +1, TRUE ~ 0)
                                                    )))
# cog performance count

df <- df %>% mutate(xcps = case_when(validsos == 1 ~
                                                   (
                                                     case_when(iC1d ==  5 ~ 6, TRUE ~ 0) +
                                                       case_when(iC1d == 4 ~ (
                                                         case_when(iC1d %in% c(6, 8) ~ 6, TRUE ~ 0) +
                                                           case_when(iG2j %in% c(0, 1, 2, 3, 4, 5) ~ 5, TRUE ~ 0)
                                                       ), TRUE ~ 0) +
                                                       case_when(iC1d >= 0 &
                                                                   iC1d < 4 ~ (
                                                                     case_when(xcps1 %in% c(2, 3) ~
                                                                                 (
                                                                                   case_when(xcps2 == 2 ~ 4, TRUE ~ 0) +
                                                                                     case_when(xcps2 == 1 ~ 3, TRUE ~ 0) +
                                                                                     case_when(xcps2 == 0 ~ 2, TRUE ~ 0)
                                                                                 ), TRUE ~ 0) +
                                                                       case_when(xcps1 == 1 ~ 1, TRUE ~ 0) +
                                                                       case_when(xcps1 == 0 ~ 0, TRUE ~ 0)
                                                                   )))))
# Depressive Severity count

df <- df %>% mutate(xdsi = case_when(
  validsos == 1 ~
    (
      case_when(iE1vv == 0 ~ 0, iE1vv %in% c(1, 2) ~ 1, iE1vv %in% c(3, 4) ~ 2) +
        case_when(iE1ss == 0 ~ 0, iE1ss %in% c(1, 2) ~ 1, iE1ss %in% c(3, 4) ~ 2) +
        case_when(iE1ww == 0 ~ 0, iE1ww %in% c(1, 2) ~ 1, iE1ww %in% c(3, 4) ~ 2) +
        case_when(iE1xx == 0 ~ 0, iE1xx %in% c(1, 2) ~ 1, iE1xx %in% c(3, 4) ~ 2) +
        case_when(iE1yy == 0 ~ 0, iE1yy %in% c(1, 2) ~ 1, iE1yy %in% c(3, 4) ~ 2)
    )
))

# Positive Sumptoms count


df <- df %>% mutate(xpss = case_when(validsos == 1 ~
                                                   (case_when(iE1mmm == 0 ~ +0, iE1mmm %in% c(1, 2) ~ +1, iE1mmm %in% c(3, 4) ~ +2) +
                                                       case_when(iE1nnn == 0 ~ +0, iE1nnn %in% c(1, 2) ~ +1, iE1nnn %in% c(3, 4) ~ +2) +
                                                       case_when(iE1ooo == 0 ~ +0, iE1ooo %in% c(1, 2) ~ +1, iE1ooo %in% c(3, 4) ~ +2) +
                                                       case_when(iE1ppp == 0 ~ +0, iE1ppp %in% c(1, 2) ~ +1, iE1ppp %in% c(3, 4) ~ +2)
                                                   )))

## CY Severity of Self Harm Scale

df <-
  df %>% mutate(SOS__scale = case_when(validsos == 1 ~
                                               (case_when(iX1c == 5 ~
                                                             (case_when(iX1b == 1 ~
                                                                           (case_when(xdsi >= 6 ~ 6, TRUE ~ 0) +
                                                                               case_when(xdsi < 6 ~ 5, TRUE ~ 0)), TRUE ~ 0) +
                                                                 case_when(iX1b %in% c(0, 8) ~(
                                                                       case_when(xdsi >= 6 & iX1e == 1 ~ 5, TRUE ~ 0) +
                                                                         case_when(xdsi >= 6 &
                                                                                     iX1e == 0 ~ 3, TRUE ~ 0) +
                                                                         case_when(xdsi < 6 &
                                                                                     iX1d == 1 ~ 4, TRUE ~ 0) +
                                                                         case_when(xdsi < 6 &
                                                                                     iX1d == 0 ~ 2, TRUE ~ 0)),
                                                                   TRUE ~ 0)), TRUE ~ 0) +
                                                   case_when(iX1c %in% c(3, 4) ~ (
                                                                 case_when(iX1b == 1 ~ 4, TRUE ~ 0) +
                                                                   case_when(iX1b %in% c(0, 8) ~ 3, TRUE ~ 0)
                                                               ), TRUE ~ 0) +
                                                   case_when(iX1c %in% c(0, 1, 2) ~(
                                                                 case_when(iX1b == 1 ~
                                                                             (case_when(xdsi >= 4 ~ 4, TRUE ~ 0) +
                                                                                 case_when(xdsi < 4 ~ 1, TRUE ~ 0)), TRUE ~ 0) +
                                                                   case_when(
                                                                     iX1b %in% c(0, 8) ~(
                                                                         case_when(xpss >= 3 & xcps >= 3 ~ 3, TRUE ~ 0) +
                                                                           case_when(xpss >= 3 & xcps < 3 ~ 2, TRUE ~ 0) +
                                                                           case_when(xpss < 3 & iX1d == 1 ~ 2, TRUE ~ 0) +
                                                                           case_when(xpss < 3 &
                                                                                       iX1d == 0 &
                                                                                       xcps >= 1 ~ 1, TRUE ~ 0) +
                                                                           case_when(xpss < 3 &
                                                                                       iX1d == 0 &
                                                                                       xcps == 0 ~ 0, TRUE ~ 0)),TRUE ~ 0)), TRUE ~ 0))))

df$sCYSOS <- df$SOS__scale

##-----------------
##  42. RHO_scale  
##-----------------

df <- df %>% mutate(validrho = case_when(
  iE1ooo %in% c(0,1,2,3,4) & 
    iE1yyy %in% c(0,1,2,3,4) & 
    iE6 %in% c(0,1,2,3,4,5) & 
    iE7 %in% c(0,1,2) & 
    iX2a %in% c(0,1,2,3,4,5) & 
    iX2b %in% c(0,1,2,3,4,5) & 
    iX2c %in% c(0,1,2,3,4,5) &
    ABS__scale %in% c(0:12) &
    PSS__scale %in% c(0:12) & 
    iX4 %in% c(0,1,2) ~ 1,
  TRUE ~ 0))


df <- df %>% mutate(xrho1 = case_when(
  iX2a %in% c(4,5) | 
    iX2b %in% c(4,5) | 
    iX2c %in% c(4,5) | 
    iX4 == 2 ~ 2,
  iX2a %in% c(1,2,3) |
    iX2b %in% c(1,2,3) | 
    iX2c %in% c(1,2,3) | 
    iX4 == 1 ~ 1,
  TRUE ~ 0),
  xrho2 = iX2a + iX2b + iX2c)

df <- df %>% mutate(RHO__scale = case_when(validrho == 1 ~ case_when(
  xrho1 == 2 ~ case_when(
    xrho2 >= 10 ~ case_when(
      iE1ooo %in% c(1,2,3,4) ~ 6, iE1ooo == 0 ~ 5),
    xrho2 <10 ~ case_when(
      iE7 == 2 ~ 5, iE7 == 1 & iE1yyy %in% c(1,2,3,4) ~ 4,
      iE7 == 1 & iE1yyy == 0 ~ 2, iE7 == 0 ~ 3)),
  xrho1 == 1 ~ case_when(PSS__scale >= 2 ~ 4, PSS__scale < 2 ~ 2),
  xrho1 == 0 ~ case_when(ABS__scale >= 3 ~ 3, ABS__scale < 3 ~ case_when(
    PSS__scale >= 4 ~ 1, PSS__scale < 4 & iE6 %in% c(2,3,4,5) ~ 1,
    PSS__scale < 4 & iE6 %in% c(0,1) ~ 0)))))

df$sCYRHO <- df$RHO__scale

##--------------------
##  44. IADLC__scale  
##--------------------

df <- df %>% mutate(validiadlc = case_when(
  iG1ab %in% c(0,1,2,3,4,5,6) & 
    iG1bb %in% c(0,1,2,3,4,5,6) & 
    iG1cb %in% c(0,1,2,3,4,5,6) & 
    iG1db %in% c(0,1,2,3,4,5,6) & 
    iG1eb %in% c(0,1,2,3,4,5,6) & 
    iG1fb %in% c(0,1,2,3,4,5,6) & 
    iG1gb %in% c(0,1,2,3,4,5,6) & 
    iG1hb %in% c(0,1,2,3,4,5,6) & 
    iG1nb %in% c(0,1,2,3,4,5,6) & 
    iG1ob %in% c(0,1,2,3,4,5,6) & 
    iZZ1ab %in% c(0,1,2,3,4,5,6) &
    Age >= 0 & Age <= 130 ~ 1, TRUE ~ 0))

df <- df %>% mutate(IADLC__scale = case_when(validiadlc == 1 ~ case_when(
  Age >= 12 & Age < 19 ~ 
    iG1ab + iG1bb + iG1cb + iG1db + iG1eb + iG1fb + iG1gb + iG1hb + iG1nb + iG1ob
  + iZZ1ab)))

##-----------------------------------------------
##  sCYPS PARENTING STRENGTHS (for RICHY calc) -- 
##-----------------------------------------------

df <- df %>% mutate(validps = case_when(
  iP15a %in% c(0,1,2) &
    iP15b %in% c(0,1,2) &
    iP15c %in% c(0,1,2) &
    iP15d %in% c(0,1,2) &
    iP15e %in% c(0,1,2) &
    iP15f %in% c(0,1,2) ~ 1, TRUE ~ 0))

df <- df %>% mutate(PARENTING__scale = case_when(validps == 1 ~
                                                               (case_when(iP15a == 0 ~ + 2, iP15a == 1 ~ + 1, iP15a == 2 ~ + 0)) +
                                                               (case_when(iP15b == 0 ~ + 2, iP15b == 1 ~ + 1, iP15b == 2 ~ + 0)) +
                                                               (case_when(iP15c == 0 ~ + 2, iP15c == 1 ~ + 1, iP15c == 2 ~ + 0)) +
                                                               (case_when(iP15d == 0 ~ + 2, iP15d == 1 ~ + 1, iP15d == 2 ~ + 0)) +
                                                               (case_when(iP15e == 0 ~ + 2, iP15e == 1 ~ + 1, iP15e == 2 ~ + 0)) +
                                                               (case_when(iP15f == 0 ~ + 2, iP15f == 1 ~ + 1, iP15f == 2 ~ + 0))))
##--------------------
##  CAREDIS__scale  Caregiver Distress Algorithm --
##--------------------

df <- df %>% mutate(ProactiveItem = 
                      (case_when(iE15a== 0 ~ + 0, iE15a %in% c(1,2,3,4,5) ~ + 1)) +
                      (case_when(iE15d== 0 ~ + 0, iE15d %in% c(1,2,3,4,5) ~ + 1)) + 
                      (case_when(iE15e== 0 ~ + 0, iE15e %in% c(1,2,3,4,5) ~ + 1)) + 
                      (case_when(iX16c== 0 ~ + 0, iX16c %in% c(1,2,3,4,5) ~ + 1)) +        
                      (case_when(iX2a== 0 ~ + 0, iX2a %in% c(1,2,3,4,5) ~ + 1)) +           
                      (case_when(iX2b== 0 ~ + 0, iX2b %in% c(1,2,3,4,5) ~ + 1)) +           
                      (case_when(iX2c== 0 ~ + 0, iX2c %in% c(1,2,3,4,5) ~ + 1)))

df <- df %>% mutate(devMHsubst_Issues = 
                      (case_when(iY7a & iY1ap == 0 ~ 0, TRUE ~ 0) +
                         case_when(iY7a == 1 ~ 1, TRUE ~ 0) +
                         case_when(iY1ap %in% c(1,2,3,4,5) ~ 1)))

df <- df %>% mutate(familyfunction = 
                      (case_when(iF8a == 1 ~ 1, TRUE ~ 0) +
                         case_when(iF8a == 0 ~  0, TRUE ~ 0) + 
                         case_when(iP19d | iP19e == 1 ~  1, TRUE ~ 0) + 
                         case_when(iP19d & iP19e == 0 ~  0, TRUE ~ 0) + 
                         case_when(iY7a & iY1ap == 0 ~  0, TRUE ~ 0) + 
                         case_when(iY7a == 1 | iY1ap %in% c(1,2,3,4,5) ~  1, TRUE ~ 0) + 
                         case_when(iY7b == 1 ~  1, TRUE ~ 0) + 
                         case_when(iY7b == 0 ~  0, TRUE ~ 0)))

df <- df %>% mutate(validiccared = case_when(
  iJ5a %in% c(0,1,2,3) & 
    iE1zzz %in% c(0,1,2,3,4) & 
    iE1ccc %in% c(0,1,2,3,4) & 
    iY9 %in% c(0,1) & 
    iX1a %in% c(0,1,2,3,4,5) & 
    iE1hhh %in% c(0,1,2,3,4) & 
    iP19a %in% c(0,1,8) & 
    iE1tt %in% c(0,1,2,3,4) & 
    iY1au %in% c(0,1,2,3,4,5) & 
    iE1ss %in% c(0,1,2,3,4) & 
    iE6 %in% c(0,1,2,3,4,5) & 
    iC9b %in% c(0,1,8) & 
    iE18a %in% c(0,1) &
    PARENTING__scale %in% c(0:12) & 
    PSS__scale %in% c(0:12) & 
    DABS__scale %in% c(0:20) ~ 1, TRUE ~ 0))

df <- df %>% mutate(CAREDIS__scale = case_when(validiccared == 1 ~ 
                                  (case_when(ProactiveItem == 0 ~ case_when(
                                            PARENTING__scale == 12 ~ case_when(
                                              ABS__scale == 0 ~ case_when(
                                                devMHsubst_Issues == 0 ~ case_when(
                                                  iE1ccc == 0 ~ 1, iE1ccc %in% c(1,2,3,4) ~ 2),
                                                devMHsubst_Issues == 1 ~ 2),
                                              ABS__scale >= 1 ~ case_when(
                                                iC9a == 0 ~ case_when(
                                                  iY9 == 0 ~ 1, iY9 == 1 ~ 2),
                                                iC9a %in% c(1,8) ~ case_when(
                                                  iX1a == 0 ~ 2, iX1a %in% c(1,2,3,4,5) ~ 3))),
                                            PARENTING__scale %in% c(10,11) ~ case_when(
                                              devMHsubst_Issues == 0 ~ 1, 
                                              devMHsubst_Issues == 1 ~ 3),
                                            PARENTING__scale %in% c(0,1,2,3,4,5,6,7,8,9) ~ case_when(
                                              iJ5a == 0 ~ case_when(
                                                iE1zzz == 0 ~ 2, iE1zzz %in% c(1,2,3,4) ~ 3),
                                              iJ5a %in% c(1,2,3) ~ 4)), TRUE ~ 0) +
                                             
                                             case_when(ProactiveItem %in% c(1,2) ~ case_when(
                                               familyfunction == 0 ~ case_when(
                                                 sCYDABS %in% c(0,1,2,3,4,5,6,7) ~ case_when(
                                                   iY1au == 0 ~ 1, iY1au %in% c(1,2,3,4,5) ~ 3),
                                                 sCYDABS >= 8 ~ case_when(
                                                   iE1ss == 0 ~ 1, iE1ss %in% c(1,2,3,4) ~ 3)),
                                               familyfunction == 1 ~ case_when(
                                                 iE1hhh == 0 ~ case_when(
                                                   iY9 == 0 ~ 2, iY9 == 1 ~ 4),
                                                 iE1hhh %in% c(1,2,3,4) ~ 4),
                                               familyfunction >= 2 ~ case_when(
                                                 iP19a == 0 ~ case_when(
                                                   iE1ttt == 0 ~ 2, iE1ttt %in% c(1,2,3,4) ~ 3),
                                                 iP19a == 1 ~ 4)), TRUE ~ 0) + 
                                             
                                             case_when(ProactiveItem %in% c(3,4,5,6,7) ~ case_when(
                                               PARENTING__scale %in% c(7,8,9,10,11,12) ~ case_when(
                                                 iE6 %in% c(1,2,3,4,5) ~ 5, 
                                                 iE6 == 0 ~ case_when(
                                                   devMHsubst_Issues == 0 ~ case_when(
                                                     iX1a %in% c(0,1) ~ case_when(
                                                       sCYDABS %in% c(0,1,2,3,4,5,6,7,8,9,10) ~ 2, 
                                                       sCYDABS >= 11 ~ 4),
                                                     iX1a %in% c(2,3,4,5) ~ 4),
                                                   devMHsubst_Issues == 1 ~ case_when(
                                                     iE18a == 1 ~ 3, 
                                                     iE18a == 0 ~ 5))),
                                               PARENTING__scale %in% c(0,1,2,3,4,5,6) ~ case_when(
                                                 iC9b == 0 ~ 4, iC9b %in% c(1,8) ~ 5)), TRUE ~ 0))))

##-----------------
##  COMM__scale  --
##-----------------

df <- df %>% mutate(validcomm = case_when(
  iD1 %in% c(0,1,2,3,4) & 
    iD2 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

df <- df %>% mutate(COMM__scale = case_when(validcomm == 1 ~ iD1 + iD2))

##--------------------------------------------
##   CAS / Psychiatrist / Family Engagment  --
##--------------------------------------------

df <- df %>%
  mutate(CAS = case_when(
    is.na(iN16w)  ~ NA,
    iN16w > 0 ~ "Involved"
  ))

df <- df %>%
  mutate(Psychiatrist = case_when(
    is.na(iN16o)  ~ NA,
    iN16w > 0 ~ "Involved"
  ))

df <- df %>%
  mutate(FamilyEngaged = case_when(
    is.na(iZ10)  ~ NA,
    iZ10 > 0 ~ "Involved"
  ))

##------------------------
##   Physical Activity  --
##------------------------

df <- df %>% 
  mutate(cCYMHPA = case_when(
  iG6a %in% c(0,1) ~ 1, TRUE ~ 0))


df$'Physical Activity' <-
  ifelse(is.na(df$cCYMHPA),
    NA,
      ifelse(
        df$cCYMHPA == 1,
        "Triggered",
        ifelse(df$cCYMHPA == 0,
            "Not Triggered",
            NA
          )))

##------------------------
##  Attachment          --
##------------------------

 df <-  df %>% mutate(validattach = case_when(
  iB33 %in% c(0,1,2) & 
    iB34a %in% c(0,1,2,3) & 
    iB34b %in% c(0,1,2,3) & 
    iB35 %in% c(0,1) &
    iP16a %in% c(0,1,8) & 
    iP16b %in% c(0,1,8) & 
    iY1am %in% c(0,1,2,3,4,5) & 
    iY1an %in% c(0,1,2,3,4,5) & 
    iY1ao %in% c(0,1,2,3,4,5) & 
    iY1ar %in% c(0,1,2,3,4,5) & 
    iY1at %in% c(0,1,2,3,4,5) & 
    iY1au %in% c(0,1,2,3,4,5) & 
    iY7a %in% c(0,1) & 
    T_age <= 12 ~ 1, TRUE ~ 0))

 df <-  df %>% mutate(xcymhattach1 = case_when(validattach == 1 ~ 
                                               (case_when(iB33 == 2 ~ + 1, TRUE ~ 0) +
                                                  case_when(iB34a %in% c(1,2) ~ + 1, TRUE ~ 0) +
                                                  case_when(iB34b %in% c(1,2) ~ + 1, TRUE ~ 0) +
                                                  case_when(iB34c %in% c(1,2) ~ + 1, TRUE ~ 0) +
                                                  case_when(iB35 == 1 ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1am %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1an %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1ao %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1ap %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1ar %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1at %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1au %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY7a == 1 ~ + 1, TRUE ~ 0))))

 df <-  df %>% mutate(xcymhattach2 = case_when(validattach == 1 ~ 
                                               (case_when(iP16a == 1 ~ + 1, TRUE ~ 0) +
                                                  case_when(iP16b ==1 ~ + 1, TRUE ~ 0) +
                                                  case_when(iP16c == 1 ~ + 1, TRUE ~ 0))))
 
  df <-  df %>% mutate(Attachment = case_when( 
   xcymhattach1 >= 1 & xcymhattach2 >= 1 ~ 1, 
   xcymhattach1 == 0 | xcymhattach2 == 0 ~ 0))

  
  ##################################################################
  ##                         Caffeine Use                         ##
  ##################################################################
  
 df <-  df %>% mutate('Caffeine Use' = case_when(
    iW10b %in% c(2,3) ~ 1, 
    iW10b < 2 ~ 0))

  df$'Caffeine Use'[df$'Caffeine Use'== 1] <- "Triggered"
  df$'Caffeine Use'[df$'Caffeine Use'== 0] <- "Not Triggered"


  
  #################################################################
  ##                      Caregiver Distress                      ##
  #################################################################

   df <-  df %>% mutate(xcymhcaredist = case_when(iB32a | iB32b == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iP19g == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iQ4 == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1ap %in% c(2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY7a == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iY8a == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iY8b == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iY9 == 1 ~ + 1, TRUE ~ 0))
  
 df <- df %>% mutate('Caregiver Distress' = case_when(
    xcymhcaredist >= 2 ~ 1, TRUE ~ 0))
  
 df$'Caregiver Distress'[df$'Caregiver Distress'== 1] <- "Triggered"
 df$'Caregiver Distress'[df$'Caregiver Distress'== 0] <- "Not Triggered"
 
 #################################################################
 ##                        Communication    : cCYMHCOMM                    ##
 #################################################################
 
 
  df <-  df %>% mutate('Communication' = case_when(
   iD1 %in% c(2,3,4) | iD2 %in% c(2,3,4) ~ 1, 
   iD1 < 2 & iD2 < 2 ~ 0))
 
 df$'Caregiver Distress'[df$'Caregiver Distress'== 1] <- "Triggered"
 df$'Caregiver Distress'[df$'Caregiver Distress'== 0] <- "Not Triggered"
 
 #################################################################
 ##                    Control Interventions                    ##
 #################################################################
 
  df <-  df %>% mutate(validctrlint = case_when(
   iE1nnn %in% c(0,1,2,3,4) & 
     iM7 %in% c(0,1,2,3,4,5,6,7,8,9) & 
     iN6c %in% c(0,1,2,3,4,5) & 
     iX1a %in% c(0,1,2,3,4,5) & 
     iX2a %in% c(0,1,2,3,4,5) & 
     iX4 %in% c(0,1,2) & 
     iAA1a %in% c(0,1,2,3,4,5) & 
     iAA1c %in% c(0,1,2,3,4,5) & 
     iAA1f %in% c(0,1,2,3,4,5) &
     sCYABS %in% c(0:12) & 
     sCYPSS %in% c(0:12) ~ 1, TRUE ~ 0))
 
  df <-  df %>% mutate(xcymhctrlint1 = case_when(validctrlint == 1 ~ 
                                                 (case_when(iM7 %in% c(1,2,3,4,5,6,7,8,9) ~ + 1, TRUE ~ 0) +
                                                    case_when(iN6c %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                    case_when(iAA1a %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                    case_when(iAA1c %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) + 
                                                    case_when(iAA1f %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0))))
 
  df <-  df %>% mutate(xcymhctrlint2 = case_when(validctrlint == 1 ~ 
                                                 (case_when(iE1nnn %in% c(2,3,4) ~ + 1, TRUE ~ 0) + 
                                                    case_when(iX1a == 5 ~ + 1, TRUE ~ 0) +
                                                    case_when(iX2a == 5 ~ + 1, TRUE ~ 0) + 
                                                    case_when(iX4 == 2 ~ + 1, TRUE ~ 0) + 
                                                    case_when(sCYABS >= 5 ~ + 1, TRUE ~ 0) +
                                                    case_when(sCYPSS >= 8 ~ + 1, TRUE ~ 0))))
  
  df <- df %>% mutate('Control Interventions'= case_when(validctrlint == 1 ~ 
                                                 (case_when(xcymhctrlint1 & xcymhctrlint2 >= 1 ~ 2, TRUE ~ 0) +
                                                    case_when(xcymhctrlint1 >= 1 & xcymhctrlint2 == 0 ~ 1, TRUE ~ 0)))) 
  
  df$'Control Interventions'[df$'Control Interventions'== 1] <- "Triggered to minimize the need for control interventions (young persons not in a psychiatric emergency situation)"
  df$'Control Interventions'[df$'Control Interventions'== 0] <- "Not Triggered"
  
  ##################################################################
  ##                    Criminality Prevention                    ##
  ##################################################################
  
  
   df <-  df %>%
    mutate('Criminality Prevention' = case_when(
    iE1dddd %in% c(1,2,3,4) | iE15a %in% c(2,3,4,5) | iX2a %in% c(2,3,4,5) ~ 1, 
    iE1dddd < 1 & iE15a < 2 & iX2a < 2 ~ 0))

  df$'Criminality Prevention'[df$'Criminality Prevention'== 1] <- "Triggered"
  df$'Criminality Prevention'[df$'Criminality Prevention'== 0] <- "Not Triggered"
  
  
  #################################################################
  ##                          Education: cCYMHEDU                         
  #################################################################
  
   df <-  df %>% mutate(xiBB5a = case_when(
    iBB4c %in% c(2,3) ~ as.numeric(iBB5a), 
    iBB4c == 1 ~ 0))
  
   df <-  df %>% mutate(xiBB5b = case_when(
    iBB4c %in% c(2,3) ~ as.numeric(iBB5b), 
    iBB4c == 1 ~ 0))
  
   df <-  df %>% mutate(xiBB5e = case_when(
    iBB4c %in% c(2,3) ~ as.numeric(iBB5e), 
    iBB4c == 1 ~ 0))
  
   df <-  df %>% mutate(xiBB5f = case_when(
    iBB4c %in% c(2,3) ~ as.numeric(iBB5f), 
    iBB4c == 1 ~ 0))
  
   df <-  df %>% mutate(xiBB10 = case_when(
    iBB4c %in% c(2,3) ~ as.numeric(iBB10), 
    iBB4c == 1 ~ 0))
  
   df <-  df %>% mutate(xiBB11a = case_when(
    iBB4c %in% c(1,2,3) ~ as.numeric(iBB11a)))
  
   df <-  df %>% mutate(xiBB11b = case_when(
    iBB4c %in% c(1,2,3) ~ as.numeric(iBB11b)))
  
   df <-  df %>% mutate(xiBB14a = case_when(
    iBB4c %in% c(1,2,3) ~ as.numeric(iBB14a)))
   
    df <-  df %>% mutate(validedu = case_when(
     iBB2 %in% c(0,1,2,3,8) &
       xiBB5a %in% c(0,1,8) & 
       xiBB5b %in% c(0,1,8) & 
       xiBB5e %in% c(0,1,8) & 
       xiBB5f %in% c(0,1,8) &
       xiBB10 %in% c(0,1,2,3) & 
       xiBB11a %in% c(0,1) & 
       xiBB11b %in% c(0,1) & 
       xiBB14a %in% c(0,1,2,3,8) ~ 1, TRUE ~ 0))
   
    df <-  df %>% mutate(xcymhedu1 = case_when(validedu == 1 ~ 
                                               (case_when(xiBB5a == 1 ~ + 1, TRUE ~ 0) +
                                                  case_when(xiBB5b == 1 ~ + 1, TRUE ~ 0) +
                                                  case_when(xiBB5e == 1 ~ + 1, TRUE ~ 0) + 
                                                  case_when(xiBB5f == 1 ~ + 1, TRUE ~ 0) + 
                                                  case_when(xiBB10 %in% c(1,3) ~ + 1, TRUE ~ 0) +
                                                  case_when(xiBB14a %in% c(2,3) ~ + 1, TRUE ~ 0))))
   
    df <-  df %>% mutate(xcymhedu2 = case_when(validedu == 1 ~ 
                                               (case_when(xiBB11a | xiBB11b == 1 ~ + 1, TRUE ~ 0) + 
                                                  case_when(iBB2 != 0 & iBB2 != 1 & iBB2 != 2 & iBB2 != 3 ~ + 1, TRUE ~ 0)))) 
   
   
     df <-  df %>% mutate(Education = case_when(validedu == 1 ~ case_when(
      xcymhedu1 >= 1 ~ "Triggered due to risk of dropping out of school",  
      xcymhedu1 == 0 ~ case_when(
        xcymhedu2 == 2 ~ "Triggered due to current disrupted education", 
        xcymhedu2 < 2 ~ "Not Triggered"))))
   
##################################################################
##                  Hazardous Fire Involvement                  ##
##################################################################

 df <-  df %>% mutate(validfire = case_when(
  iC1d %in% c(0,1,2,3,4,5) & 
    iE1oo %in% c(0,1,2,3,4) & 
    iE1mmm %in% c(0,1,2,3,4) & 
    iE1nnn %in% c(0,1,2,3,4) & 
    iE1ooo %in% c(0,1,2,3,4) & 
    iP15e %in% c(0,1,2,8) & 
    iX18 %in% c(0,1,2,3,4,5) & 
    iY1am %in% c(0,1,2,3,4,5) & 
    iY1an %in% c(0,1,2,3,4,5) & 
    iY1ao %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))

 df <- df %>% mutate(xcymhfire = case_when(validfire == 1 ~ case_when(
  iC1d %in% c(3,4) ~ + 1, 
  iE1oo %in% c(2,3,4) ~ + 1,
  iE1mmm %in% c(2,3,4) ~ + 1, 
  iE1nnn %in% c(2,3,4) ~ + 1, 
  iE1ooo %in% c(2,3,4) ~ + 1, 
  iP15e %in% c(2,8) ~ + 1, 
  iY1am %in% c(1,2,3,4,5) | iY1an %in% c(1,2,3,4,5) | 
    iY1ao %in% c(1,2,3,4,5) ~ + 1)))
 
  df <-  df %>% mutate(`Hazardous Fire Involvement` = case_when(validfire == 1 ~ case_when(
   iX18 %in% c(2,3,4,5) ~ case_when(
     xcymhfire >= 2 ~ "Triggered at high risk", 
     xcymhfire == 1 ~ "Triggered at moderate risk", 
     xcymhfire == 0 ~ "Triggered at low risk"), 
   iX18 < 2 ~ "Not Triggered")))

  ##################################################################
  ##                           Gambling                           ##
  ##################################################################
  
   df <-  df %>% mutate(validgamb = case_when(
    iW8 %in% c(0,1) &
      cihiU3 == 1 ~ 1, TRUE ~ 0))
   
  df <-  df %>% mutate(Gambling = case_when(validgamb == 1 ~ case_when(
    iW8 == 1 ~ "Triggered", 
    iW8 < 1 ~ "Not Triggered")))
  
  ##################################################################
  ##                        Harm to Others                        ##
  ##################################################################
  
  df <- df %>% mutate(validharmoth = case_when(
    iE1oo %in% c(0,1,2,3,4) & 
      sCYRHO %in% c(0,1,2,3,4,5,6) ~ 1, TRUE ~ 0))
 
   df <- df %>% mutate('Harm to Others' = case_when(validharmoth == 1 ~ case_when(
    sCYRHO %in% c(5,6) ~ 2, 
    sCYRHO %in% c(3,4) ~ case_when(
      iE1oo %in% c(2,3,4) ~ 2, 
      iE1oo < 2 ~ 1),
    sCYRHO <= 2 ~ 0)))
   
   df$'Harm to Others'[df$'Harm to Others' == 2] <- "Triggered due to high risk of harm to others"
   df$'Harm to Others'[df$'Harm to Others' == 1] <- "Triggered due to moderate risk of harm to others"
   df$'Harm to Others'[df$'Harm to Others' == 0] <- "Not Triggered"

   
   ##################################################################
   ##                       Informal Support                       ##
   ##################################################################
   
   df <- df %>% mutate(xcymhinfsupp =  case_when(iP18a %in% c(2,3) ~ + 1, TRUE ~ 0) +
                                                     case_when(iP18b == 3 ~ + 1, TRUE ~ 0) +
                                                     case_when(iP18c == 3 ~ + 1, TRUE ~ 0) +
                                                     case_when(iP18d == 3 ~ + 1, TRUE ~ 0) +
                                                     case_when(iP18e == 3 ~ + 1, TRUE ~ 0))
   df <- df %>% mutate('Informal Support' = case_when(xcymhinfsupp >= 2 ~ 1, TRUE ~ 0) + 
                                                     case_when(xcymhinfsupp < 2 ~ 0, TRUE ~ 0))
   
   df$'Informal Support'[df$'Informal Support' == 1] <- "Triggered"
   df$'Informal Support'[df$'Informal Support' == 0] <- "Not Triggered"

   
   ##################################################################
   ##                    Interpersonal Conflict                    ##
   ##################################################################
   
   df <- df %>% mutate(xiBB5e = (case_when(
     iBB4c %in% c(0,1) ~ 0)+ 
       case_when(iBB4c %in% c(2,3) ~ as.numeric(iBB5e), TRUE ~ 0)))
   
   df <- df %>% mutate(validipcon = case_when(
     iP19a %in% c(0,1,8) &
       iP19b %in% c(0,1,8) &
       iP19c %in% c(0,1,8) &
       iP19d %in% c(0,1,8) &
       iP19e %in% c(0,1,8) &
       iP19f %in% c(0,1,8) &
       xiBB5e %in% c(0,1,2,3) & 
       iBB5e %in% c(0,1,8) ~ 1, TRUE ~ 0))
   
   df <- df %>% mutate(xcymhipcon = case_when(validipcon == 1 ~ 
                                                (case_when(iP19a | iP19d == 1 ~ + 1, TRUE ~ 0) +
                                                   case_when(iP19b | iP19e | iP19f == 1 ~ + 1, TRUE ~ 0) +
                                                   case_when(iP19c | xiBB5e == 1 ~ + 1, TRUE ~ 0))))
   
   df <- df %>% mutate('Interpersonal Conflict' = case_when(validipcon == 1 ~ 
                                                (case_when(xcymhipcon >= 2 ~ 2, TRUE ~ 0) +
                                                   case_when(xcymhipcon == 1 ~ 1, TRUE ~ 0) +
                                                   case_when(xcymhipcon == 0 ~ 0, TRUE ~ 0))))
   
   df$'Interpersonal Conflict'[df$'Interpersonal Conflict' == 1] <- "Triggered to reduce conflict within a specific domain"
   df$'Interpersonal Conflict'[df$'Interpersonal Conflict' == 0] <- "Not Triggered"
   df$'Interpersonal Conflict'[df$'Interpersonal Conflict' == 2] <- "Triggered to reduce widespread conflict"
   
   #################################################################
   ##                         Life Skills                         ##
   #################################################################
   
   df <- df %>% mutate(xiBB5e = (case_when(
     iBB4c %in% c(0,1) ~ 0)+ 
       case_when(iBB4c %in% c(2,3) ~ as.numeric(iBB5e), TRUE ~ 0)))
   
   df <- df %>% mutate(validipcon = case_when(
     iP19a %in% c(0,1,8) &
       iP19b %in% c(0,1,8) &
       iP19c %in% c(0,1,8) &
       iP19d %in% c(0,1,8) &
       iP19e %in% c(0,1,8) &
       iP19f %in% c(0,1,8) &
       xiBB5e %in% c(0,1,2,3) & 
       iBB5e %in% c(0,1,8) ~ 1, TRUE ~ 0))
   
   df <- df %>% mutate(xcymhipcon = case_when(validipcon == 1 ~ 
                                                (case_when(iP19a | iP19d == 1 ~ + 1, TRUE ~ 0) +
                                                   case_when(iP19b | iP19e | iP19f == 1 ~ + 1, TRUE ~ 0) +
                                                   case_when(iP19c | xiBB5e == 1 ~ + 1, TRUE ~ 0))))
   
   df <- df %>% mutate('Life Skills' = case_when(validipcon == 1 ~ 
                                                (case_when(xcymhipcon >= 2 ~ 2, TRUE ~ 0) +
                                                   case_when(xcymhipcon == 1 ~ 1, TRUE ~ 0) +
                                                   case_when(xcymhipcon == 0 ~ 0, TRUE ~ 0))))
   
   df$'Life Skills'[df$'Life Skills' == 0] <- "Not Triggered"
   df$'Life Skills'[df$'Life Skills' == 1] <- "Triggered for IADL assistance"
   df$'Life Skills'[df$'Life Skills' == 2] <- "Triggered for ADL assistance"
   
   
   ##################################################################
   ##                     Medication Adherence                     ##
   ##################################################################
   
   df <- df %>% mutate('Medication Adherence' = case_when(
     iM3 == 2 | iM4 == 1 | iM12 == 0 ~ 1, 
     iM3 != 2 & iM4 != 1 & iM12 != 0 ~ 0))
   
   df$'Medication Adherence'[df$'Medication Adherence' == 1] <- "Triggered"
   df$'Medication Adherence'[df$'Medication Adherence' == 0] <- "Not Triggered"

   
   #################################################################
   ##                      Medication Review                      ##
   #################################################################
   
   df <- df %>% mutate(xcymhmedrev = case_when(
     iJ2c %in% c(2,3,4) ~ + 1, 
     iJ2k %in% c(2,3,4) | iJ2y %in% c(2,3,4) ~ + 1, 
     iJ2n %in% c(2,3,4) | iJ2x %in% c(2,3,4) ~ + 1, 
     iJ2dd %in% c(2,3,4) ~ + 1, 
     iJ2gg %in% c(2,3,4) ~ + 1, 
     iJ2ll %in% c(2,3,4) ~ + 1, 
     iJ3 %in% c(1,2,3) ~ + 1, 
     iJ9a == 1 | iJ9b == 1 | iJ9c == 1 | iJ9d == 1 | iJ9e == 1 | 
       iJ9f == 1 | iJ9g == 1 ~ + 1, 
     iR9 == 1 ~ + 1))
   
   df <- df %>% mutate('Medication Review' = case_when(
     iM5 == 1 ~ 1, 
     iM5 != 1 ~ case_when(
       iM3 %in% c(0,1) & xcymhmedrev >= 1 ~ 1, 
       iM3 != 0 | iM3 != 1 | xcymhmedrev == 0 ~ 0)))
   
   df$'Medication Review'[df$'Medication Review' == 1] <- "Triggered"
   df$'Medication Review'[df$'Medication Review' == 0] <- "Not Triggered"

   
   ##################################################################
   ##                          Parenting2                          ##
   ##################################################################
   
   df <- df %>% mutate(xcymhparent = case_when(iP15a == 2 ~ + 1, TRUE ~ 0) +
                                                    case_when(iP15b == 2 ~ + 1, TRUE ~ 0) + 
                                                    case_when(iP15c == 2 ~ + 1, TRUE ~ 0) +
                                                    case_when(iP15d == 2 ~ + 1, TRUE ~ 0) +
                                                    case_when(iP15e == 2 ~ + 1, TRUE ~ 0) + 
                                                    case_when(iP15f == 2 ~ + 1, TRUE ~ 0))
   
   df <- df %>% mutate('Parenting2' = case_when(xcymhparent >= 2 ~ 1, TRUE ~ 0) +
                                                    case_when(xcymhparent < 2 ~ 0, TRUE ~ 0))
   df$'Parenting2'[df$'Parenting2' == 1] <- "Triggered"
   df$'Parenting2'[df$'Parenting2' == 0] <- "Not Triggered"
   
   
   #################################################################
   ##                   Readmission (cCYMHREAD)                   ##
   #################################################################
   
   df <- df %>% mutate(validread = case_when(
     iB12 %in% c(0,1) & 
       iB33 %in% c(0,1,2) & 
       iB38a %in% c(0,1) & 
       iB38b %in% c(0,1) & 
       iE5 %in% c(0,1,2,3) & 
       iP19h %in% c(0,1,8) & 
       iV1 %in% c(0,1,2) & 
       sCYPSS >= 0 & sCYPSS <= 12 & 
       sCYRHO >= 0 & sCYPSS <= 6 & 
       sCYSOS >= 0 & sCYPSS <= 6 ~ 1, TRUE ~ 0))
   
   df <- df %>% mutate(xcymhread1 = case_when(validread == 1 ~ 
                                                (case_when(iB12 == 1 ~ + 1, TRUE ~ 0) +
                                                   case_when(iB33 == 2 ~ + 1, TRUE ~ 0) +
                                                   case_when(iB38a == 1 ~ + 1, TRUE ~ 0) +
                                                   case_when(iB38b == 1 ~ + 1, TRUE ~ 0) + 
                                                   case_when(iP19h == 1 ~ + 1, TRUE ~ 0) +
                                                   case_when(sCYPSS >= 2 ~ + 1, TRUE ~ 0) +
                                                   case_when(sCYRHO >= 3 ~ + 1, TRUE ~ 0) +
                                                   case_when(sCYSOS >= 3 ~ + 1, TRUE ~ 0))))
   
   df <- df %>% mutate(xcymhread2 = case_when(validread == 1 ~ 
                                                (case_when(iE5 %in% c(2,3) ~  1, TRUE ~ 0) +
                                                   case_when(iV1 == 2 ~ 1, TRUE ~ 0) +
                                                   case_when(iV1 == 1 ~ case_when(xcymhread1 >= 1 ~ 1, TRUE ~ 0), TRUE ~ 0)))) 
   
   
   df <- df %>% mutate(Readmission = case_when(validread == 1 ~ 
                                               (case_when(xcymhread2 >= 1 ~ 1, TRUE ~ 0) +
                                                  case_when(xcymhread2 == 0 ~ 0, TRUE ~ 0))))
   
   df$Readmission[df$Readmission == 1] <- "Triggered"
   df$Readmission[df$Readmission == 0] <- "Not Triggered"
   
   
   ##################################################################
   ##        Suicidality and Purposeful Self Harm: cCYMHSSH        ##
   ##################################################################
   
   df <- df %>% mutate('Suicidality and Purposeful Self-Harm' = case_when(
     sCYSOS %in% c(5,6) ~ 2, 
     sCYSOS %in% c(3,4) ~ case_when(
       iE1oo >= 2 ~ 2, 
       iE1oo < 2 ~ 1),
     sCYSOS < 3 ~ 0))
   
   df$'Suicidality and Purposeful Self-Harm'[df$'Suicidality and Purposeful Self-Harm' == 0] <- "Not Triggered"
   df$'Suicidality and Purposeful Self-Harm'[df$'Suicidality and Purposeful Self-Harm' == 1] <- "Triggered due to moderate risk of harm to self"
   df$'Suicidality and Purposeful Self-Harm'[df$'Suicidality and Purposeful Self-Harm' == 2] <- "Triggered due to high risk of harm to self" 

   
   ##################################################################
   ##                  Sexual Behaviour: cCYMHSEX                  ##
   ##################################################################
   
   df <- df %>% mutate(validsex = case_when( 
     iE3o %in% c(0,1,2,3,4) & # inapprop. sexual behav.
       iE19a %in% c(0,1) & # inapprop. sexual knowledge
       iW27 %in% c(0,1) ~ 1, TRUE ~ 0)) # family concern about risky sexual beh
   
   #iJ10a and iX3 are from the Adolescent Supplement only. The CAP can be calculated without these.
   
   df <- df %>% mutate('Sexual Behaviour' = case_when(validsex == 1 ~ case_when(
     (iE3o %in% c(2,3,4) | iE19a == 1 | iJ10a == 1 | iX3 == 1 | iW27 == 1) ~ 1, TRUE ~ 0)))
 
   df$'Sexual Behaviour'[df$'Sexual Behaviour' == 1] <- "Triggered"
   df$'Sexual Behaviour'[df$'Sexual Behaviour' == 0] <- "Not Triggered"
   
   
   #################################################################
   ##                      Sleep Disturbance                      ##
   #################################################################
   
   df <- df %>% mutate(validsleep = case_when(
     iE1lll %in% c(0,1,2,3,4) &
       iE1yyy %in% c(0,1,2,3,4) & 
       iE1zzz %in% c(0,1,2,3,4) & 
       iE1aaaa %in% c(0,1,2,3,4) & 
       iE1bbbb %in% c(0,1,2,3,4) & 
       iJ4 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
   
   df <- df %>% mutate(xcymhsleep = case_when(validsleep == 1 ~ 
                                                (case_when(iE1lll %in% c(2,3,4) ~ + 1, TRUE ~ 0) +
                                                   case_when(iE1yyy %in% c(2,3,4) ~ + 1, TRUE ~ 0) +
                                                   case_when(iE1zzz %in% c(2,3,4) ~ + 1, TRUE ~ 0) + 
                                                   case_when(iE1aaaa %in% c(2,3,4) ~ + 1, TRUE ~ 0) +
                                                   case_when(iE1bbbb %in% c(2,3,4) ~ + 1, TRUE ~ 0) +
                                                   case_when(iJ4 %in% c(1,2,3,4) ~ + 1, TRUE ~ 0))))
  
   df <- df %>% mutate('Sleep Disturbance' = case_when(validsleep == 1 ~ case_when(
     xcymhsleep >= 2 ~ "Triggered", TRUE ~ "Not Triggered")))
   
   
   ##################################################################
   ##          Social and Peer Relationships: cCYMHSOCREL          ##
   ##################################################################
   
   df <- df %>% mutate(validsocrel = case_when(
     iE1qqq %in% c(0,1,2,4) & 
       iE1ttt %in% c(0,1,2,3,4) & 
       iE14d %in% c(0,1) & 
       iE15e %in% c(0,1,2,3,4,5) & 
       iF13 %in% c(0,1) & 
       iF15e %in% c(0,1) & 
       iF15f %in% c(0,1) & 
       iP8 %in% c(0,1) & 
       iY1aq %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))
   
   df <- df %>% mutate(xcymhsocrel1 = case_when(validsocrel == 1 ~ 
                                                  (case_when(iE1qqq %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE1ttt %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE14d == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iF15e == 0 ~ + 1, TRUE ~ 0) +
                                                     case_when(iF15f == 0 ~ + 1, TRUE ~ 0) +
                                                     case_when(iP8 == 0 ~ + 1, TRUE ~ 0) + 
                                                     case_when(iY1aq %in% c(2,3,4,5) ~ + 1, TRUE ~ 0))))
   
   df <- df %>% mutate(xcymhsocrel2 = case_when(validsocrel == 1 ~ 
                                                  (case_when(iE15e %in% c(2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iF13 == 1 ~ + 1, TRUE ~ 0)))) 
   
   df <- df %>% mutate('Social and Peer Relationships' = case_when(validsocrel == 1 ~ 
                                                 (case_when(xcymhsocrel1 >= 2 ~ 2, TRUE ~ 0) +
                                                    case_when(xcymhsocrel1 < 2 ~ 
                                                                (case_when(xcymhsocrel2 >= 1 ~ 1, TRUE ~ 0) +
                                                                   case_when(xcymhsocrel2 == 0 ~ 0, TRUE ~ 0)), TRUE ~ 0))))
 
   df$'Social and Peer Relationships'[df$'Social and Peer Relationships' == 0] <- "Not Triggered"
   df$'Social and Peer Relationships'[df$'Social and Peer Relationships' == 1] <- "Triggered to reduce maladaptive or antisocial peer interactions"
   df$'Social and Peer Relationships'[df$'Social and Peer Relationships' == 2] <- "Triggered to reduce social withdrawal or isolation"
   
   
   #################################################################
   ##                     Strengths: cCYMHSTR                     ##
   #################################################################
   
   df <- df %>% mutate(validstr = case_when(
     iC7 %in% c(0,1,2) & 
       iC9a %in% c(0,1,8) & 
       iF8b %in% c(0,1) & 
       iF15a %in% c(0,1) ~ 1, TRUE ~ 0))
   
   df <- df %>% mutate(xcymhstr = case_when(validstr == 1 ~
                                              (case_when(iC7 == 2 ~ + 1, TRUE ~ 0) +
                                                 case_when(iC9a %in% c(1,8) ~ + 1, TRUE ~ 0) +
                                                 case_when(iF8b == 0 ~ + 1, TRUE ~ 0) +
                                                 case_when(iF15a == 0 ~ + 1, TRUE ~ 0))))
   
   df <- df %>% mutate('Strengths' = case_when(validstr == 1 ~ 
                                              case_when(xcymhstr >= 3 ~ "Triggered", TRUE ~ "NOt Triggered")))
   
  
   
   ##################################################################
   ##                  Substance Use:cCYMHSUBUSE                   ##
   ##################################################################
   
   df <- df %>% mutate(validsubuse = case_when(
     iM6 %in% c(0,1) & 
       iW2 %in% c(0,1,2,3,4) &
       iW3a %in% c(0,1,2,3,4,5) &
       iW3b %in% c(0,1,2,3,4,5) &
       iW3c %in% c(0,1,2,3,4,5) &
       iW3d %in% c(0,1,2,3,4,5) &
       iW3e %in% c(0,1,2,3,4,5) &
       iW3f %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))
   
   df <- df %>% mutate(xcymhsubuse = case_when(validsubuse == 1 ~ 
                                                 (case_when(iM6 == 1 ~ + 1, TRUE ~ 0) +
                                                    case_when(iW2 %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                    case_when(iW3a %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                    case_when(iW3b %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                    case_when(iW3c %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) + 
                                                    case_when(iW3d %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) + 
                                                    case_when(iW3e %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) + 
                                                    case_when(iW3f %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0))))
   
   df <- df %>% mutate('Substance Use' = case_when(validsubuse == 1 ~ case_when(
     xcymhsubuse >= 1 ~ "Triggered", TRUE ~ "Not Triggered")))
   
   
   #################################################################
   ##          Support Systems for Discharge: cCYMHSSDIS          ##
   #################################################################
   
   df <- df %>% mutate(validssdis = case_when(
     iA11b %in% c(1:15) & 
       iA12e %in% c(1:6) & 
       iR16d %in% c(0,1,2,8) & 
       iR16e %in% c(0,1,2,8) & 
       iY8a %in% c(0,1,8) ~ 1, TRUE ~ 0))
   # iA11b replaced iA11j
   
   df <- df %>% mutate('Support Systems for Discharge' = case_when(validssdis == 1 ~ case_when(
     iA11b %in% c(5,8) | iA12e %in% c(1,5) | iY8a == 1 | iR16d %in% c(0,2) | 
       iR16e %in% c(0,2) ~ "Triggered", TRUE ~ "Not Triggered")))
   
   
   ##################################################################
   ##             Tobacco and Nicotine Use: cCYMHTOBAC             ##
   ##################################################################
   df <- df %>% mutate(validtobac = case_when(
     iW20a %in% c(0,1,2,3) & 
       iW20b %in% c(0,1,2,3) ~ 1, TRUE ~ 0))
   
   df <- df %>% mutate('Tobacco and Nicotine Use' = case_when(validtobac == 1 ~ case_when(
     iW20a == 3 | iW20b == 3 ~ "Triggered to prevent long-term tobacco use", 
     iW20a %in% c(1,2) | iW20b %in% c(1,2) ~ "Triggered to reduce or cease daily tobacco use", 
     iW20a == 0 & iW20b == 0 ~ "Not Triggered")))
   
   
   #################################################################
   ##                   Transitions: cCYMHTRANS                   ##
   #################################################################
   
   df <- df %>% mutate(validtrans = case_when(
     iZ12 %in% c(0,1) ~ 1, TRUE ~ 0))
   df <- df %>% mutate('Transitions' = case_when(validtrans == 1 ~ case_when(
     iZ12 == 1 ~ "Triggered", TRUE ~ "Not Triggered")))

   
   ##################################################################
   ##              Traumatic Life Events: cCYMHTRAUMA              ##
   ##################################################################
   
   df <- df %>% mutate(validtrauma = case_when(
     iB34a %in% c(0,1,2,3) & 
       iB34b %in% c(0,1,2,3) & 
       iB34c %in% c(0,1,2,3) & 
       iE1ddd %in% c(0,1,2,3,4) & 
       iE1fff %in% c(0,1,2,3,4) & 
       iE1iii %in% c(0,1,2,3,4) & 
       iE1jjj %in% c(0,1,2,3,4) & 
       iE1kkk %in% c(0,1,2,3,4) & 
       iE1lll %in% c(0,1,2,3,4) & 
       iE1eeee %in% c(0,1,2,3,4) & 
       iY1aa %in% c(0,1,2,3,4,5) & 
       iY1aj %in% c(0,1,2,3,4,5) &
       iY1ak %in% c(0,1,2,3,4,5) &
       iY1al %in% c(0,1,2,3,4,5) &
       iY1am %in% c(0,1,2,3,4,5) &
       iY1an %in% c(0,1,2,3,4,5) &
       iY1ao %in% c(0,1,2,3,4,5) &
       iY1aq %in% c(0,1,2,3,4,5) &
       iY1ar %in% c(0,1,2,3,4,5) &
       iY1at %in% c(0,1,2,3,4,5) &
       iY1au %in% c(0,1,2,3,4,5) &
       iY1b %in% c(0,1,8) & 
       iY2a %in% c(0,1) & 
       iY2c %in% c(0,1) & 
       iY2d %in% c(0,1) ~ 1, TRUE ~ 0))
   
   df <- df %>% mutate(xcymhtrauma1 = case_when(validtrauma == 1 ~ 
                                                  (case_when(iY1aa %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1aj %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1ak %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1am %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1an %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1ao %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1aq %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1ar %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1at %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1au %in% c(4,5) ~ + 1, TRUE ~ 0))))
   
   df <- df %>% mutate(xcymhtrauma2 = case_when(validtrauma == 1 ~ 
                                                  (case_when(iY2a == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iY2c == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iY2d == 1 ~ + 1, TRUE ~ 0))))
   
   df <- df %>% mutate(xcymhtrauma3 = case_when(validtrauma == 1 ~ 
                                                  (case_when(iB34a | iB34b | iB34c %in% c(1,2,3) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1aa %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1aj %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1ak %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1al %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1am %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1an %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1ao %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1aq %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1ar %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1at %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1au %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0))))
   
   df <- df %>% mutate(xcymhtrauma4 = case_when(validtrauma == 1 ~ 
                                                  (case_when(iE1ddd %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE1fff %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE1iii %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE1jjj %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE1kkk %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE1lll %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE1eeee %in% c(1,2,3,4) ~ + 1, TRUE ~ 0)))) 
   
   df <- df %>% mutate('Traumatic Life Events' = case_when(validtrauma == 1 ~ case_when(
     xcymhtrauma1 >= 1 | xcymhtrauma2 >= 1 ~"Triggered to address immediate safety concerns", 
     xcymhtrauma1 == 0 & xcymhtrauma2 == 0 ~ case_when(
       xcymhtrauma3 >= 1 ~ case_when(
         iY1b == 1 | xcymhtrauma4 >=2 ~ "Triggered to reduce the impact of prior traumatic life events", 
         iY1b < 1 & xcymhtrauma4 < 2 ~ "Not Triggered"),
       xcymhtrauma3 == 0 ~ "Not Triggered"))))

   
   #################################################################
   ##                    Video Gaming: cCYMHVG                    ##
   #################################################################
   
   df <- df %>% mutate(validvg = case_when(
     iW21 %in% c(0,1,2,3) ~ 1, TRUE ~ 0))
   df <- df %>% mutate('Video Gaming' = case_when(validvg == 1 ~ case_when(
     iW21 %in% c(2,3) ~ "Triggered", 
     iW21 < 2 ~ "Not Triggered")))
   
   #################################################################
   ##                  Eating/Weight: cCYMHWTMGT                  ##
   #################################################################
   
   df <- df %>% mutate(validwtmgt = case_when(
     iK2i %in% c(0,1) & 
       iK2j %in% c(0,1) & 
       iK2k %in% c(0,1) & 
       iK8a %in% c(0,1) & 
       iK8b %in% c(0,1) & 
       iK8c %in% c(0,1) ~ 1, TRUE ~ 0))  
   df <- df %>% mutate('Eating/Weight' = case_when(validwtmgt == 1 ~ case_when(
     iK2k == 1 | iK2k == 1 | iK2i == 1 ~ "Triggered for weight concerns", 
     iK2j < 1 & iK2k < 1 & iK2i < 1 ~ case_when(
       iK8a == 1 | iK8b ==1 | iK8c == 1 ~ "Triggered due to problematic eating behaviour", 
       iK8a < 1 & iK8b < 1 & iK8c < 1 ~ "Not Triggered"))))
   
  ##--------------
##  EXT__scale  
##--------------

df <- df %>% mutate(validexts = case_when(
  iE15a %in% c(0,1,2,3,4,5) &
    iE15d %in% c(0,1,2,3,4,5) &
    iE15e %in% c(0,1,2,3,4,5) &
    iE1oo %in% c(0,1,2,3,4) &
    iE3m %in% c(0,1,2,3,4) &
    iE3r %in% c(0,1,2,3,4) &
    iE3s %in% c(0,1,2,3,4) &
    iE3t %in% c(0,1,2,3,4) &
    iX16c %in% c(0,1,2,3,4,5) & 
    iX2a %in% c(0,1,2,3,4,5) & 
    iX2b %in% c(0,1,2,3,4,5) & 
    iX2c %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))

df <- df %>% mutate(EXT__scale = case_when(validexts == 1 ~ 
                                                         (case_when(iE15a == 0 ~ 0, iE15a %in% c(1,2,3,4,5) ~ 1)) + 
                                                         (case_when(iE15d == 0 ~ 0, iE15d %in% c(1,2,3,4,5) ~ 1)) + 
                                                         (case_when(iE15e == 0 ~ 0, iE15e %in% c(1,2,3,4,5) ~ 1)) + 
                                                         (case_when(iE1oo == 0 ~ 0, iE1oo %in% c(1,2,3,4) ~ 1)) + 
                                                         (case_when(iE3m == 0 ~ 0, iE3m %in% c(1,2,3,4) ~ 1)) +
                                                         (case_when(iE3r == 0 ~ 0, iE3r %in% c(1,2,3,4) ~ 1)) +
                                                         (case_when(iE3s == 0 ~ 0, iE3s %in% c(1,2,3,4) ~ 1)) +
                                                         (case_when(iE3t == 0 ~ 0, iE3t %in% c(1,2,3,4) ~ 1)) +
                                                         (case_when(iX16c == 0 ~ 0, iX16c %in% c(1,2,3,4,5) ~ 1)) +
                                                         (case_when(iX2a == 0 ~ 0, iX2a %in% c(1,2,3,4,5) ~ 1)) +
                                                         (case_when(iX2b == 0 ~ 0, iX2b %in% c(1,2,3,4,5) ~ 1)) +
                                                         (case_when(iX2c == 0 ~ 0, iX2c %in% c(1,2,3,4,5) ~ 1))))

##--------------
##  INT__scale  
##--------------

df <- df %>% mutate(validints = case_when(
  iE1eee %in% c(0,1,2,3,4) & 
    iE1eeee %in% c(0,1,2,3,4) &
    iE1fff %in% c(0,1,2,3,4) &
    iE1kkk %in% c(0,1,2,3,4) &
    iE1rrr %in% c(0,1,2,3,4) &
    iE1sss %in% c(0,1,2,3,4) &
    iE1ttt %in% c(0,1,2,3,4) &
    iE1uu %in% c(0,1,2,3,4) &
    iE1vv %in% c(0,1,2,3,4) &
    iE1ww %in% c(0,1,2,3,4) &
    iE1xx %in% c(0,1,2,3,4) &
    iE1yy %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

df <- df %>% mutate(INT__scale = case_when(validints == 1 ~ 
                                                         iE1eee + iE1eeee + iE1fff + iE1kkk +
                                                         iE1rrr + iE1sss + iE1ttt +  iE1uu + iE1vv +
                                                         iE1ww + iE1xx + iE1yy))

##--------------
##  ADL__scale  
##--------------

df <- df %>% mutate(validadl = case_when(
  iG2a %in% c(0,1,2,3,4,5,6,8) & 
    iG2b %in% c(0,1,2,3,4,5,6,8) & 
    iG2c %in% c(0,1,2,3,4,5,6,8) &
    iG2d %in% c(0,1,2,3,4,5,6,8) ~ 1, TRUE ~ 0))

df <- df %>% mutate(ADL__scale = case_when(validadl == 1 ~ 
                                         (case_when(iG2a == 0 ~ 0, iG2a %in% c(1,2,3,4,5) ~ 1, iG2a %in% c(6,8) ~ 2))+ 
                                         (case_when(iG2b == 0 ~ 0, iG2b %in% c(1,2,3,4,5) ~ 1, iG2b %in% c(6,8) ~ 2))+
                                         (case_when(iG2c == 0 ~ 0, iG2c %in% c(1,2,3,4,5) ~ 1, iG2c %in% c(6,8) ~ 2))+
                                         (case_when(iG2d == 0 ~ 0, iG2d %in% c(1,2,3,4,5) ~ 1, iG2d %in% c(6,8) ~ 2))))

##--------------
##  PEER__scale  
##--------------

df <- df %>% mutate(valideer = case_when(
  iP19b %in% c(0,1,8) &
    iP19e %in% c(0,1,8) &
    iP19f %in% c(0,1,8) ~ 1, TRUE ~ 0))

df <- df %>% mutate(PEER__scale = case_when(valideer == 1 ~ 
                                                         (case_when(iP19b == 1 ~ + 1, TRUE ~ 0) +
                                                            case_when(iP19f == 1 ~ + 1, TRUE ~ 0) +
                                                            case_when(iP19e == 1 ~ + 1, TRUE ~ 0))))

##--------------
##  FAM__scale  
##--------------

df <- df %>% mutate(validily = case_when(
  iF8a %in% c(0,1) &
    iP19d %in% c(0,1,8) &
    iP19h %in% c(0,1,8) &
    iY7a %in% c(0,1) &
    iY7b %in% c(0,1) &
    iY8a %in% c(0,1,8) ~ 1, TRUE ~ 0))

df <- df %>% mutate(FAM__scale = case_when(validily == 1 ~ 
                                                         case_when(iP19d %in% c(0,1) & iP19h %in% c(0,1) & iY8a %in% c(0,1) ~
                                                                     case_when(iF8a == 0 ~ (1 + iP19d + iP19h + iY7a + iY7b + iY8a), 
                                                                               iF8a == 1 ~ (iP19d + iP19h + iY7a + iY7b + iY8a)))))


##--------------------
##  STRENGTHS__scale  (Relational Strengths: sCYRelStren)
##--------------------

df <- df %>% mutate(validrelstren = case_when(
  iP8 %in% c(0,1) & 
    iF15c %in% c(0,1) &
    iF8a %in% c(0,1) &
    iF15d %in% c(0,1) &
    iF15e %in% c(0,1) &
    iF15f %in% c(0,1) ~ 1, TRUE ~ 0))

df <- df %>% mutate(STRENGTHS__scale = case_when(validrelstren == 1 ~ 
                                                               (case_when(iP8 == 0 ~ 1, iP8 == 1 ~ 0)) +
                                                               (case_when(iF15c == 0 ~ 1, iF15c == 1 ~ 0)) +
                                                               (case_when(iF8a == 0 ~ 1, iF8a == 1 ~ 0)) +
                                                               (case_when(iF15d == 0 ~ 1, iF15d == 1 ~ 0)) +
                                                               (case_when(iF15e == 0 ~ 1, iF15e == 1 ~ 0)) +
                                                               (case_when(iF15f == 0 ~ 1, iF15f == 1 ~ 0))))

##----------------------
##  SCHLDISRUPT__scale  
##----------------------

df <- df %>% mutate(validsdes = case_when(
  iBB5a %in% c(0,1,8) & 
    iBB5b %in% c(0,1,8) & 
    iBB5e %in% c(0,1,8) & 
    iBB5f %in% c(0,1,8) & 
    iBB11a %in% c(0,1) & 
    iBB11b %in% c(0,1) & 
    iBB10 %in% c(0,1,2,3) & 
    iBB14a %in% c(0,1,2,3,8) ~ 1, TRUE ~ 0))

df <- df %>% mutate(SCHLDISRUPT__scale = case_when(validsdes == 1 ~ 
                                                                 (case_when(iBB5a == 1 ~ + 1, TRUE ~ 0) +
                                                                    case_when(iBB5b == 1 ~ + 1, TRUE ~ 0) +
                                                                    case_when(iBB5e == 1 ~ + 1, TRUE ~ 0) +
                                                                    case_when(iBB5f == 1 ~ + 1, TRUE ~ 0) +
                                                                    case_when(iBB10 %in% c(1,2,3) ~ + 1, TRUE ~ 0) +
                                                                    case_when(iBB11a == 1 ~ + 1, TRUE ~ 0) + 
                                                                    case_when(iBB11b == 1 ~ + 1, TRUE ~ 0) + 
                                                                    case_when(iBB14a %in% c(2,3) ~ + 1, TRUE ~ 0))))


##------------------
##  SENSORY__scale  
##------------------

df <- df %>% mutate(validSensDiff = case_when( 
  iD28 %in% c(0,1,2,3,4) &
    iD29 %in% c(0,1,2,3,4) &
    iE3aa %in% c(0,1,2,3,4) &
    oE3ab %in% c(0,1,2,3,4) & 
    oE3ac %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

df <- df %>% mutate(SENSORY__scale = case_when(validSensDiff == 1 ~ 
                                                             iD28 + iD29 + iE3aa + oE3ab + oE3ac))

##----------------
##  INT-S__scale  
##----------------

df <- df %>% mutate('INT-S__scale' = iE1eee + iE1eeee + iE1fff + iE1kkk +
                                       iE1rrr + iE1sss + iE1ttt + iE1vv +
                                       iE1ww + iE1xx + iE1yy)

##----------------
##  EXT-S__scale  
##----------------

df <- df %>% mutate(validexts = case_when(
  iE15a %in% c(0,1,2,3,4,5) &
    iE15e %in% c(0,1,2,3,4,5) &
    iE1oo %in% c(0,1,2,3,4) &
    iE3l %in% c(0,1,2,3,4) &
    iX2a %in% c(0,1,2,3,4,5) & 
    iX2b %in% c(0,1,2,3,4,5) & 
    iX2c %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))

df <- df %>% mutate('EXT-S__scale' = case_when(validexts == 1 ~ 
                                                             (case_when(iE15a == 0 ~ 0, iE15a %in% c(1,2,3,4,5) ~ 1)) + 
                                                             (case_when(iE15e == 0 ~ 0, iE15e %in% c(1,2,3,4,5) ~ 1)) + 
                                                             (case_when(iE1oo == 0 ~ 0, iE1oo %in% c(1,2,3,4) ~ 1)) + 
                                                             (case_when(iE3l == 0 ~ 0, iE3m %in% c(1,2,3,4) ~ 1)) +
                                                             (case_when(iX2a == 0 ~ 0, iX2a %in% c(1,2,3,4,5) ~ 1)) +
                                                             (case_when(iX2b == 0 ~ 0, iX2b %in% c(1,2,3,4,5) ~ 1)) +
                                                             (case_when(iX2c == 0 ~ 0, iX2c %in% c(1,2,3,4,5) ~ 1))))

##----------------
##  AUT__scale  
##----------------

df <- df %>% mutate(validssc = case_when(iC7 %in% c(0,1,2) &
                                                       iE3aa %in% c(0,1,2,3,4) &
                                                       iE14a %in% c(0,1) &  
                                                       iE14b %in% c(0,1) &                    
                                                       iE14c %in% c(0,1) ~ 1, TRUE ~ 0))

df <- df %>% mutate(AUT__scale = case_when(validssc == 1 ~ 
                                                    (case_when(iE14a == 1 ~ 1, TRUE ~ 0)) + 
                                                    (case_when(iE14b == 1 ~ 1, TRUE ~ 0)) + 
                                                    (case_when(iE14c == 1 ~ 1, TRUE ~ 0)) + 
                                                    (case_when(iE3aa %in% c(1,2,3,4) ~ 1, TRUE ~ 0)) + 
                                                    (case_when(iC7== 2 ~ 1, TRUE ~ 0))))

##----------------
## COG__scale  
##----------------

df <- df %>% mutate(validcognitive = case_when(
  iC1d %in% c(0,1,2,3,4,5) &
    iC2a %in% c(0,10) &
    iC2b %in% c(0,1) & 
    iD1 %in% c(0,1,2,3,4) & 
    iD2 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

df <- df %>% mutate(COG__scale = case_when(validcognitive == 1 ~ 
                                                                (case_when(iC1d == 0 ~ 0, iC1d %in% c(1,2,3,4,5) ~ 1)) +
                                                                (case_when(iC2a == 0 ~ 0, iC2a == 1 ~ 1)) +
                                                                (case_when(iC2b == 0 ~ 0, iC2b == 1 ~ 1)) +
                                                                (case_when(iD1 == 0 ~ 0, iD1 %in% c(1,2,3,4) ~ 1)) +
                                                                (case_when(iD2 == 0 ~ 0, iD2 %in% c(1,2,3,4) ~ 1))))

##----------------
##  MANIA__scale  
##----------------

df <- df %>% mutate(validmania_old = case_when(
  iE1bbb %in% c(0,1,2,3,4) &
    iE1zz %in% c(0,1,2,3,4) &
    iE1llll %in% c(0,1,2,3,4) &
    iE1ccc %in% c(0,1,2,3,4) &
    iE1aaa %in% c(0,1,2,3,4) &
    iE6 %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))

df <-df %>% mutate(MANIA__scale = case_when(validmania_old == 1 ~ case_when
                                                        (iE6 == 0 ~  0, 
                                                          iE6 == 1 ~  1, 
                                                          iE6 == 2 ~  1, 
                                                          iE6 == 3 ~  1, 
                                                          iE6 == 4 ~  1,
                                                          iE6 == 5 ~  2) + iE1bbb + iE1zz
                                                        + iE1lll + iE1ccc + iE1aaa))

##----------------
##  SLEEP__scale  
##----------------

df <- df %>% mutate(valideep = case_when(
  iE1yyy %in% c(0,1,2,3,4) &
    iE1zzz %in% c(0,1,2,3,4)&
    iE1aaaa %in% c(0,1,2,3,4)&
    iE1bbbb %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

df <- df %>% mutate(SLEEP__scale = case_when(valideep == 1 ~ (iE1yyy +iE1zzz +iE1aaaa +
                                                                          iE1bbbb)))

##-------------------------
##  Psychiatric Diagnosis  
##-------------------------

df <- df %>% 
  mutate(`Psychiatric Diagnoses` = case_when(
    is.na(iCC10b) & is.na(iCC1d) ~ NA,
    !is.na(iCC10b) & rowSums(across(iCC10b:iCC10u, ~ . %in% c(2, 3, 4))) >= 1 ~ 1,
    !is.na(iCC1d) & rowSums(across(iCC1d:iCC1u, ~ . %in% c(1, 2, 3, 4))) >= 1 ~ 1,
    TRUE ~ 0
  ))


##---------------------
##  Medical Diagnosis    #### DOUBLE CCHECK THIS
##---------------------

df <- df %>%
  mutate(`Medical Diagnoses` = case_when(
    Tool != "rscr" & !is.na(iI1aa) & rowSums(across(iI1aa:iI1z)) >= 1 ~ 1,
    !is.na(ComorbidMedical_Screen) ~ ComorbidMedical_Screen,
    TRUE ~ 0
  ))

##----------
##  ID/GGD  
##----------

df <- df %>%
  mutate('ID/GDD' = if_else(
    Tool != "rscr" & (
      iCC10b %in% c(1, 2, 3, 4) |
        iCC10r %in% c(1, 2, 3, 4) |
        iCC1r %in% c(1, 2, 3, 4) |
        iCC9 %in% c(5, 6)
    ), 1, 0),
    if_else(
      is.na(ID_Screen),
      if_else(
        ComorbidMedical_Screen == 1, 1,
        if_else(ComorbidMedical_Screen == 0, 0, ComorbidMedical_Screen)
      ),
      if_else(ID_Screen == 1, 1,
              if_else(ID_Screen == 0, 0, ID_Screen)
      )))

##----------------------
##  Residential Issues  
##----------------------

df$'Residential Issues' <- ifelse(
  (df$iB12 == 1 | df$iB38c == 1 | df$iB38a == 1 | df$iB38b == 1 | df$iE5 %in% c(1,2,3) | (df$iA11b != 1 & !is.na(df$iA11b) & df$iA11b != 99)),
  1,
  ifelse(
    (!is.na(df$iB12) & df$iB12 != 99) | (!is.na(df$iB38c) & df$iB38c != 99) | (!is.na(df$iB38a) & df$iB38a != 99) | (!is.na(df$iB38b) & df$iB38b != 99) | (!is.na(df$iE5) & df$iE5 != 99) | (!is.na(df$iA11b) & df$iA11b != 99),
    0,
    NA)
)

##---------
##  xsdsi  
##---------

df <- df %>% mutate(xsdsi =
                                  iE1ss + iE1tt + iE1vv + iE1ww + iE1xx + iE1yy + 
                                  iE1aaa + iE1rrr + iE1ttt)
##---------
##  xsSOS  
##---------

df <- df %>% mutate(xsSOS =  case_when(
  iX1c == 5 ~ case_when(iX1b == 1 ~ 6, iX1b %in% c(0,8) ~ case_when(
    iX1e == 1 ~ 6, iX1e == 0 ~ case_when(xsdsi >= 9 ~ 5, xsdsi < 9 ~ case_when(
      iX1d == 1 ~ 4, iX1d == 0 ~ case_when(iE1nnn %in% c(1,2,3,4) ~ 5, 
                                           iE1nnn == 0 ~ 3))))),
  iX1c %in% c(3,4) ~ case_when(iX1b == 1 ~ 4, iX1b %in% c(0,8) ~ 3),
  
  iX1c %in% c(1,2) ~ case_when(iX1b == 1 ~ case_when(xsdsi >= 6 ~ 4,
                                                     xsdsi < 6 ~ case_when(
                                                       iX1d == 1 ~ case_when(
                                                         iE1nnn %in% c(1,2,3,4) ~ 5,
                                                         iE1nnn == 0 ~ 3), 
                                                       iX1d == 0 ~ case_when(
                                                         iE1nnn %in% c(1,2,3,4) ~ 4,
                                                         iE1nnn == 0 ~ 3))),
                               iX1b %in% c(0,8) ~ case_when(iE1nnn %in% 
                                                              c(1,2,3,4) ~ 3,
                                                            iE1nnn == 0 ~ 
                                                              case_when(
                                                                iX1d == 1 ~ 2,
                                                                iX1d == 0 ~ 1))),
  iX1c == 0 ~ 0))

##-------------------------
##  Valid RICHY variables  
##-------------------------

df <- df %>% mutate(validrichy = case_when(
  iE1yyy %in% c(0,1,2,3,4) & 
    iE3q %in% c(0,1,2,3,4) & 
    iE15e %in% c(0,1,2,3,4,5) &
    iJ2k %in% c(0,1,2,3,4) & 
    iJ2y %in% c(0,1,2,3,4) & 
    iJ2dd %in% c(0,1,2,3,4) & 
    iJ2gg %in% c(0,1,2,3,4) & 
    iJ2ll %in% c(0,1,2,3,4) &
    iJ3 %in% c(0,1,2,3) & 
    iJ9a %in% c(0,1) & 
    iJ9b %in% c(0,1) & 
    iJ9c %in% c(0,1) & 
    iJ9d %in% c(0,1) & 
    iJ9e %in% c(0,1) & 
    iJ9f %in% c(0,1) & 
    iJ9g %in% c(0,1) & 
    iP15a %in% c(0,1,2,8) &
    iP15b %in% c(0,1,2,8) &
    iP15c %in% c(0,1,2,8) &
    iP15d %in% c(0,1,2,8) &
    iP15e %in% c(0,1,2,8) &
    iP15f %in% c(0,1,2,8) &
    iP19b %in% c(0,1,8) &
    iP19e %in% c(0,1,8) &
    iX2b %in% c(0,1,2,3,4,5) &
    iX16c %in% c(0,1,2,3,4,5) &
    iY1al %in% c(0,1,2,3,4,5) &
    iY1am %in% c(0,1,2,3,4,5) & 
    iY1an %in% c(0,1,2,3,4,5) &
    iY1aq %in% c(0,1,2,3,4,5) &
    iY1ao %in% c(0,1,2,3,4,5) &
    iY1au %in% c(0,1,2,3,4,5) &
    iE1eee %in% c(0,1,2,3,4) & 
    iE1fff %in% c(0,1,2,3,4) & 
    iE1ggg %in% c(0,1,2,3,4) & 
    iE1hhh %in% c(0,1,2,3,4) & 
    iE1iii %in% c(0,1,2,3,4) & 
    iE1kkk %in% c(0,1,2,3,4) & 
    iE1lll %in% c(0,1,2,3,4) & 
    iE1eeee %in% c(0,1,2,3,4) & 
    iF8a %in% c(0,1) &
    iP19d %in% c(0,1,8) &
    iP19h %in% c(0,1,8) & ## identical to this point
    iY7a %in% c(0,1) &
    iY7b %in% c(0,1) &
    iY8a %in% c(0,1,8) & 
    iE1oo %in% c(0,1,2,3,4) &
    iE1nnn %in% c(0,1,2,3,4) & 
    iX1b %in% c(0,1,8) & 
    iX1c %in% c(0,1,2,3,4,5) & 
    iX1d %in% c(0,1) &
    iX1e %in% c(0,1) & 
    iE1ss %in% c(0,1,2,3,4) & 
    iE1tt %in% c(0,1,2,3,4) &
    iE1vv %in% c(0,1,2,3,4) &
    iE1ww %in% c(0,1,2,3,4) &
    iE1xx %in% c(0,1,2,3,4) &
    iE1yy %in% c(0,1,2,3,4) &
    iE1aaa %in% c(0,1,2,3,4) &
    iE1rrr %in% c(0,1,2,3,4) &
    iE1ttt %in% c(0,1,2,3,4) &
    iX2a %in% c(0,1,2,3,4,5) & 
    iX2c %in% c(0,1,2,3,4,5) &
    Age >= 0 & Age <= 130 &
    PARENTING__scale %in% c(0:12) ~ 1, TRUE ~ 0))

df <- df %>% mutate(validSSH = case_when(
  iE1oo %in% c(0,1,2,3,4) & 
    xsSOS %in% c(0,1,2,3,4,5,6) ~ 1, TRUE ~ 0))

##-----------
##  xparent  ## added ip15e and iP15f (as per SAS)
##-----------

df <- df %>% mutate(xparent = case_when(
  iP15a == 8 | iP15b == 8 | iP15c == 8 | iP15d == 8 | iP15e == 8 | iP15f ==8 ~ 1, TRUE ~ 0)) ## CHECK THIS!!!!!!!!!!!!!!!!!!!

##----------
##  xabuse  
##----------

df <- df %>% mutate(xabuse = case_when(
  iY1al %in% c(1,2,3,4,5) ~ + 1, iY1am %in% c(1,2,3,4,5) ~ + 1, 
  iY1an %in% c(1,2,3,4,5) ~ + 1, iY1aq %in% c(1,2,3,4,5) ~ + 1, 
  iY1ao %in% c(1,2,3,4,5) ~ + 1, iY1au %in% c(1,2,3,4,5) ~ + 1))

##-----------
##  xmedsym  
##-----------

df <- df %>% mutate(xmedsym = case_when(
  iJ2k %in% c(1,2,3,4) ~ + 1, iJ2y %in% c(1,2,3,4) ~ + 1, 
  iJ2dd %in% c(1,2,3,4) ~ + 1, iJ2gg %in% c(1,2,3,4) ~ + 1, 
  iJ2ll %in% c(1,2,3,4) ~ + 1, iJ3 %in% c(1,2,3) ~ + 1, iJ9a == 1 ~ + 1,
  iJ9b == 1 ~ + 1, iJ9c == 1 ~ + 1, iJ9d == 1 ~ + 1, iJ9e == 1 ~ + 1, 
  iJ9f == 1 ~ + 1, iJ9g == 1 ~ + 1))

##-----------
##  xsANXIETY  
##-----------

df <- df %>% mutate(xsANXIETY =  
                      iE1eee + iE1fff + iE1ggg + iE1hhh + iE1iii + iE1kkk + iE1lll + iE1eeee)

##------------
##  xsFAMILY  
##------------

df <- df %>% mutate(xsFAMILY = case_when(
  iP18d != 8 & iP19h !=8 & iY8a != 8 ~ case_when(
    iF8a == 0 ~ 1 + iP19d + iP19h + iY7a + iY7b + iY8a,
    iF8a == 1 ~ iP19d + iP19h + iY7a + iY7b + iY8a)))


##---------
##  ssSOSval  
##---------

df$ssSOSval <- ifelse(
  df$iX1c %in% c(0, 1, 2, 3, 4, 5, 8) &
    df$iX1e %in% c(0, 1, 2, 3, 4, 5, 8) &
    df$xsdsi %in% 0:36 &
    df$iX1d %in% c(0, 1, 2, 3, 4, 5, 8) &
    df$iE1nnn %in% c(0, 1, 2, 3, 4, 5, 8) &
    df$iX1b %in% c(0, 1, 2, 3, 4, 5, 8),
  1, 0
)


##---------
##  xcSSH  
##---------

df <- df %>% mutate(xcSSH = case_when(
  xsSOS %in% c(5,6) ~ 2, xsSOS %in% c(3,4) ~ case_when(
    iE1oo >= 2 ~ 2, iE1oo < 2 ~ 1), xsSOS < 3 ~ 0))


##---------
##  sRHOval  
##---------

df$sRHOval <- ifelse(
  df$iX2a %in% c(0,1,2,3,4,5) &
    df$iX2c %in% c(0,1,2,3,4,5) &
    df$iX2b %in% c(0,1,2,3,4,5) &
    df$iX16c %in% c(0,1,2,3,4,5) &
    df$iE1mmm %in% c(0,1,2,3,4,5) &
    df$iE1nnn %in% c(0,1,2,3,4,5) &
    df$iE1ooo %in% c(0,1,2,3,4,5) &
    df$iE1ppp %in% c(0,1,2,3,4,5),
  1, 0)

#################################################
# xsRHO 
#################################################

df <- df %>% mutate(xsRHO = case_when(
  iX2a %in% c(4,5) ~ 6, iX2a %in% c(2,3) ~ case_when( 
    iX2c %in% c(4,5) | iX2b %in% c(4,5) | iX16c %in% c(4,5) ~ 6, iE1mmm %in%
      c(2,3,4) | iE1nnn %in% c(2,3,4) | iE1ooo %in% c(2,3,4) | iE1ppp %in% 
      c(2,3,4) ~ 5, TRUE ~ 4),
  iX2a %in% c(0,1) ~ case_when(iX2c %in% c(4,5) | iX2b %in% c(4,5) | 
                                 iX16c %in% c(4,5) ~ case_when(
                                   iE1mmm %in% c(2,3,4) | iE1nnn %in% c(2,3,4) 
                                   | iE1ooo %in% c(2,3,4) | iE1ppp %in% 
                                     c(2,3,4) ~ 3, TRUE ~ 2), TRUE ~
                                 case_when(
                                   iE1mmm %in% c(2,3,4) | iE1nnn %in% c(2,3,4) 
                                   | iE1ooo %in% c(2,3,4) | iE1ppp %in% 
                                     c(2,3,4) ~ 1, TRUE ~ 0))))

#########################################################
# xcHARMOTH
#################################################

df <- df %>% mutate(xcHARMOTH = case_when(
  xsRHO %in% c(5,6) ~ 2, xsRHO %in% c(3,4) ~ case_when(
    iE1oo %in% c(2,3,4) ~ 2, iE1oo < 2 ~ 1), xsRHO < 2 ~ 0))

#########################################################
# RICHY__scale Calculation * NEW
#################################################

df <- df %>% mutate(RIChY_scale = case_when(
  Age <= 7 ~ case_when(
    iX2b %in% c(3,4,5) ~ 3, iX2b %in% c(0,1,2) ~ case_when(
      iE3q %in% c(2,3,4) ~ 1, iE3q %in% c(0,1) ~ 0)),
  
  Age %in% c(8,9,10,11) ~ case_when(
    iP19b == 8 | iP19e == 8 ~ case_when(
      xsANXIETY >= 7 ~ 5, xsANXIETY %in% c(0,1,2,3,4,5,6) ~ 3),
    iP19b != 8 & iP19e != 8 ~ case_when(
      iE15e %in% c(2,3,4,5) | iP19b == 1 ~ case_when(
        PARENTING__scale >= 3 | xparent == 1 ~ 4, 
        PARENTING__scale %in% c(0,1,2) ~ case_when(
          iE1yyy %in% c(2,3,4) ~ 3, iE1yyy %in% c(0,1) ~ 2)), ## FOUND ERROR should iE1yyy %in% c(2, 3, 4) ~ 3???
      iE15e %in% c(0,1) & iP19b %in% c(0, 8) ~ case_when( # 0 or 8
        xsFAMILY >= 3 | iY8a == 8 ~ 3, xsFAMILY %in% c(0,1,2) ~ case_when(
          xabuse >= 1 | xmedsym >= 1 ~ 1, xabuse == 0 & xmedsym == 0 ~ 0)))), 
    Age >= 12 ~ case_when(
    iE15e %in% c(2,3,4,5) | iP19b == 1 ~ case_when(
      xsANXIETY >= 10 ~ 3, xsANXIETY <= 9 ~ 5), 
    iE15e %in% c(0,1) & iP19b %in% c(0,8) ~ case_when( ## this one too
      xcSSH %in% c(1,2) ~ 4, xcSSH == 0 ~ case_when(
        xcHARMOTH %in% c(1,2) ~ 4, xcHARMOTH == 0 ~ case_when(
          xsFAMILY >= 1 | iY8a == 8 ~ case_when(
            xparent == 1 ~ 3, xparent == 0 ~ 2), xsFAMILY == 0 ~ 0))))))    


# test <- df %>% select(EMHID, validrichy, Age, iX2b, iE3q, iP19b, iP19e, xsANXIETY, iP19b, iP19e, iE15e, iP19b, PARENTING__scale, xparent, iE1yyy, xsFAMILY, iY8a, xabuse, xmedsym, xcSSH, xcHARMOTH, RIChY_scale, RIChY_scale2)

#########################################################
# ALEIC__scale
#################################################

df <- df %>% 
    mutate(ALEIC__scale = rowSums(
    data.frame(
      PhysAbuse = ifelse(iY1an %in% c(1,2,3,4,5), 1, 0),
      EmoAbuse = ifelse(iP19d == 1 | iY1ao %in% c(1, 2, 3, 4, 5), 1, 0),
      SexAbuse = ifelse(iY1am %in% c(1,2,3,4,5), 1, 0),
      WitnessViolence = ifelse(iP19g == 1 | iY1au %in% c(1, 2, 3, 4, 5), 1, 0),
      PhysNeglect = ifelse(iB34b %in% c(1,2,3) | iB34c%in% c(1,2,3) | iQ5a ==1 | iQ5b ==1, 1, 0),
      EmoNeglect = ifelse(iB34a %in% c(1, 2, 3), 1, 0),
      Neglect = ifelse(iY1at %in% c(1, 2, 3, 4, 5) | iY9 ==1 | iY8a %in% c(1, 2, 3, 4, 5), 1, 0),
      Parental = ifelse(iY1ap %in% c(1, 2, 3, 4, 5)| iY7a ==1, 1, 0),
      Placement = ifelse(iB35 ==1 | iB12 ==1, 1, 0),
      Bullying = ifelse(iY1aq %in% c(1, 2, 3, 4, 5), 1, 0),
      MHStressors = ifelse(iY7b ==1| iBB11b ==1, 1, 0),
      DeathLoss = ifelse(iY1ac %in% c(1, 2, 3, 4, 5)| iY1ar %in% c(1, 2, 3, 4, 5), 1, 0),
      Accident = ifelse(iY1aa %in% c(1, 2, 3, 4, 5), 1, 0),
      Disaster = ifelse(iY1ak %in% c(1,2,3,4,5)| iY1al %in% c(1,2,3,4,5), 1, 0),
      WarZone = ifelse(iY1aj %in% c(1,2,3,4,5), 1, 0),
      Migration = ifelse(iY1ai %in% c(1,2,3,4,5), 1, 0)
    ), na.rm=TRUE))

#########################################################
# TSS__scale
#################################################

df <- df %>% 
  mutate(TSS__scale = case_when(
    is.na(ALEIC__scale) ~ NA,
    TRUE ~ (ifelse(iE1pp %in% 1:5, 1, 0) +
              ifelse(iE1ss %in% 1:5, 1, 0) +
              ifelse(iE1vv %in% 1:5, 1, 0) +
              ifelse(iE1ww %in% 1:5, 1, 0) +
              ifelse(iE1xx %in% 1:5, 1, 0) +
              ifelse(iE1yy %in% 1:5, 1, 0) +
              ifelse(iE1aaa %in% 1:5, 1, 0) +
              ifelse(iE1iii %in% 1:5, 1, 0) +
              ifelse(iE1jjj %in% 1:5, 1, 0) +
              ifelse(iE1kkk %in% 1:5, 1, 0) +
              ifelse(iE1lll %in% 1:5, 1, 0) +
              ifelse(iE1eeee %in% 1:5, 1, 0) +
              ifelse(iE1qqq %in% 1:5, 1, 0) +
              ifelse(iE1sss %in% 1:5, 1, 0) +
              ifelse(iE1ttt %in% 1:5, 1, 0) +
              ifelse(iE1yyy %in% 1:5, 1, 0) +
              ifelse(iE1zzz %in% 1:5, 1, 0) +
              ifelse(iB10a %in% c(0, 8), 0, ifelse(iB10a == 1, 1, 0)) +
              ifelse(iY1b %in% c(0, 8), 0, ifelse(iY1b == 1, 1, 0)))))


############################################################################
############################################################################
###                                                                      ###
###                  SELECT COLUMNS FOR INTERRAI BI CSV                  ###
###                                                                      ###
############################################################################
############################################################################


interRAI <- df %>%
 select("iA3", "client_id", "iA2", "ref", "compl", "program_name",  "oV5", "oGoal1", "oGoal2", "oGoal3", "oGoal4", "iA5a", "record_id", "client_id", "worker_id", "program_id", "cihiA2a", "cihiA2c", "iA2", "Tool", "Type", "EMHID", "Age", "FirstChYMH", "FirstAx", "FirstScreener", "LastAx", "LastChYMH", "LastScreener", "DSI__scale", "ANX__scale", "CHAMHPS__scale", "DABS__scale", "SOCDIS__scale", "DISTRACT__scale", "KinarkRiskHTO_comb", "KinarkRiskHTS_comb", "KinarkRiskHTP_comb", "KinarkRiskSM_comb", "KinarkRiskVCP_comb", "KinarkRiskFB_comb", "KinarkRiskOC_comb", "Acute", "Complex", "KinarkRiskHTO_cat", "KinarkRiskHTS_cat", "KinarkRiskHTP_cat", "KinarkRiskSM_cat", "KinarkRiskVCP_cat", "KinarkRiskFB_cat", "KinarkRiskOC_cat", "Acute_cat", "Complex_cat", "ED_Screen", "ID_Screen", "ComorbidMedical_Screen", "PSS__scale", "Trauma", "RISSK__scale", "RIO__scale", "SOS__scale", "RHO__scale", "IADLC__scale", "CAREDIS__scale", "PARENTING__scale", "COMM__scale", "CAS", "Psychiatrist", "FamilyEngaged", "Physical Activity", "Attachment", "Caffeine Use", "Caregiver Distress", "Communication", "Control Interventions", "Criminality Prevention", "Education", "Hazardous Fire Involvement", "Gambling", "Harm to Others", "Informal Support", "Interpersonal Conflict", "Life Skills", "Medication Adherence", "Medication Review", "Parenting2", "Readmission", "Suicidality and Purposeful Self-Harm", "Sexual Behaviour", "Sleep Disturbance", "Social and Peer Relationships", "Strengths", "Substance Use", "Support Systems for Discharge", "Tobacco and Nicotine Use", "Transitions", "Traumatic Life Events", "Video Gaming", "Eating/Weight", "ABS__scale", "EXT__scale", "INT__scale", "ADL__scale", "PEER__scale", "FAM__scale", "STRENGTHS__scale", "SCHLDISRUPT__scale", "SENSORY__scale", "INT-S__scale", "EXT-S__scale", "AUT__scale", "COG__scale", "MANIA__scale", "SLEEP__scale", "Psychiatric Diagnoses", "Medical Diagnoses", "ID/GDD", "Residential Issues", "RIChY_scale", "ALEIC__scale", "TSS__scale")

rm(ChYMH_export, df) # Remove unnecessary dfs




```

## Compass Script

The Compass R interRAI R Script (this file can also be found in the root of the data manual directory in the scripts folder)

```{r, eval=FALSE}
############################################################################
############################################################################
###                                                                      ###
###                        STRICT POWER BI SCRIPT - VII                   ###
###                                                                      ###
############################################################################
############################################################################

## REMINDER: WHEN FINISHED CALCULATIONS REMOVE UNECESSARY DFS TO DECREASE NAVIGATOR LOADING TIME IN POWERBI

rm(list = ls())

library(readr)
library(dplyr)
library(readxl)
library(data.table)
library(magrittr)
library(stringr)
#library(janitor)

##################################################################
##                       Reference Tables                       ##
##################################################################

# First grab our reference tables

ID_Lookup <- read_excel("M:/DATA & REPORTS/Clinical & Client Services/Clinical Data/interRAI/interRAI Data.xlsx", sheet = "ID Lookup")

ID_Lookup <- subset(ID_Lookup, select=-c(4, 5, 10:12, 18:34)) 

# Chart Number / EMHID / CRN lookup

Table1 <- subset(ID_Lookup, select=c(1:3)) ## this one is needed

# Chart Number / ID lookup

Table4 <- subset(ID_Lookup, select=c(4:7)) ## this one is needed

Table4 <- Table4 %>% rename("Chart Number" = "Chart Number...7", "Gender" = "Gender...9")

##################################################################
##                   Detailed Program History                   ##
##################################################################

filepath <- "M:/DATA & REPORTS/Clinical & Client Services/Clinical Data/Program Histories/Detailed Program History and Client Data"

# Get a list of file paths

files <- list.files(path=filepath, pattern="*.csv", full.names=TRUE)

# Read in each file as a data frame and subset the columns we want to keep

df_list <- lapply(files, function(file) {
  df <- read.csv(file)
  cols_to_keep <- c(1,2, 3, 61, 65)
  df[, cols_to_keep]
})

# Merge the data frames 

DetailedHistory_export <- do.call(rbind, df_list)

## Rename column headers

CIS_ID1 <- DetailedHistory_export %>%
  select("Client ID#" = 1,"Year of Birth" = 2, "Gender" = 3, "Chart Number" = 4, "BI CIS Client Identifier"=5 ) %>%
  distinct()

# remove duplicate rows

CIS_ID1 <- CIS_ID1 %>%
  distinct()

############################################################################
############################################################################
###                                                                      ###
###                          IDEAS WEB                                   ###
###                                                                      ###
############################################################################
############################################################################

# Load Codebook (variable descriptions and rules to keep as well as descriptors etc)

IdeasWeb_CodeBook <- read_excel("M:\\DATA & REPORTS\\Clinical & Client Services\\Clinical Data\\interRAI\\interRAI Matching Codebook.xlsx",sheet = "ideasWeb Variables")

# Grab old Ideas Web data

interRAI_ideasWeb <- read_excel("M:/DATA & REPORTS/Clinical & Client Services/Clinical Data/interRAI/ideasWeb interRAI ChYMH Export/interRAI Data ideasWeb.xlsx", na=c("99","n/a"))

# Rename problematic columns

interRAI_ideasWeb <- interRAI_ideasWeb %>% dplyr::rename(iP22a1=iP22a1...452, iP22a2=iP22a2...453, iP22a1_OLD=iP22a1...625, iP22a2_OLD=iP22a2...626)

# grab codes of the variables we want to keep 

keep1_1 <- filter(IdeasWeb_CodeBook, KEEP==TRUE)$`iCode ideasWeb` # subset the iCode ideasWeb values
keep1_2 <- filter(IdeasWeb_CodeBook, KEEP==TRUE)$`NewCode` # subset the newvalues

# change old names to new names

keep1_2 <- make.unique(keep1_2)

df1_2 <- dplyr::select(interRAI_ideasWeb,keep1_1)

df1_3 <- setnames(df1_2, old = keep1_1, new =keep1_2)  ### should improve this method I think

df1_3$SOURCE <- "ideasWeb" #label these as ideasWeb items

# format dates

# convert the 3 previous "history of concussion" columns to 1 column

df1_3$iI9<-ifelse((df1_3$iI9+df1_3$iI9.2+df1_3$iI9.1)==0,0,
                    ifelse((df1_3$iI9+df1_3$iI9.2+df1_3$iI9.1)==1,1,
                           ifelse((df1_3$iI9+df1_3$iI9.2+df1_3$iI9.1)==2,2,
                                  ifelse((df1_3$iI9+df1_3$iI9.2+df1_3$iI9.1)>=3,3,NA))))

# convert Formal Care - Behaviour Therapist to columns to 1

df1_3$iN16s <- ifelse(is.na(df1_3$iN16s),df1_3$iN16s.1,df1_3$iN16s)

# convert Formal Care - Behaviour Therapist to columns to 1

df1_3$iF8a <- ifelse(is.na(df1_3$iF8a),df1_3$iF8a.1,df1_3$iF8a)

# convert Strengths - Strong and supportive relationship with family

df1_3$iA11b <- ifelse(is.na(df1_3$iA11b),df1_3$iA11b.1,df1_3$iA11b)

# convert Parent/Primary Caregiver has Current Developmental or Mental Health issues

df1_3$iY7a <- ifelse(is.na(df1_3$iY7a),df1_3$iY7a.1,df1_3$iY7a)

# Convert NAs to true NA: school attendance (number of days absent)

df1_3$iBB9[df1_3$iBB9 == "NA" | is.na(df1_3$iBB9)] <- NA

# format columns

df1_4_3<- df1_3 %>% mutate_at(c('iB36a','iB36b','iBB12','iBB9','iN5a','iN5b','iN5c'),as.numeric)

df1_4_3$iB2 <- as.Date(with(df1_4_3, paste(iB2b,iB2c,iB2a,sep="-")),"%m-%d-%Y") ## 

df1_4_3$iT1 <- as.Date(with(df1_4_3,paste(iT1b,iT1c,iT1a, sep="-")),"%m-%d-%Y")

#df1_4_3$survey_type<-as.numeric(dplyr::recode(df1_4_3$survey_type, 'Initial'=1, 'Monitoring Assessment'=2, 'Discharge'=3, 'Readmission Initial'=1, 'Subsequent'=2, .default=4))
 
df1_4_3 <- df1_4_3 %>% dplyr::mutate_at(c("KinarkRiskVCP","KinarkRiskHTO","KinarkRiskFB","KinarkRiskOC"), ~as.integer(dplyr::recode(.,"no"=0,"maybe"=1,"yes"=2,"superyes"=3)))
 
df1_4_3 <- df1_4_3 %>% dplyr::mutate_at(c("KinarkRiskHTP","KinarkRiskSM"), ~as.integer(dplyr::recode(.,"no"=0,"yes"=1)))
 
df1_4_3 <- df1_4_3 %>% dplyr::mutate_at(c("KinarkRiskHTS"), ~as.integer(dplyr::recode(.,"no"=0,"maybe"=1,"superyes"=2)))

df1_4_3$CaseComplexityFA <- as.character(df1_4_3$CaseComplexityFA)

df1_4_3$CaseComplexityS <- as.character(df1_4_3$CaseComplexityS)

df1_4_3$cihiU3 <- as.character(df1_4_3$cihiU3)

# format TRUE false to 1 and 0

df1_4_3 <- df1_4_3 %>% dplyr::mutate_at(c("CaseComplexityFA","CaseComplexityS", "cihiU3"), ~as.integer(dplyr::recode(.,"TRUE"=1,"FALSE"=0)))

# remove extra columns

df1_4_4 <- dplyr::select(df1_4_3,-c("iB2a","iB2b","iB2c","iI9.1","iI9.2","iN16s.1","iT1a","iT1b","iT1c","iF8a.1","iA11b.1","iY7a.1"))

df1_5 <- df1_4_4 %>% dplyr::select(order(colnames(df1_4_4)))

df1_5$iU2 <- as.Date(df1_5$iU2, "%m/%d/%Y")
df1_5$iT1 <- as.Date(df1_5$iT1, "%m/%d/%Y")
df1_5$iA9 <- as.Date(df1_5$iA9, "%m/%d/%Y")

df1_6 <- df1_5

df1_6$iA8 <- as.character(df1_6$iA8)
df1_6$iA2 <- as.character(df1_6$iA2)
df1_6$cihiA2a <- as.character(df1_6$cihiA2a)

## This needs to be properly figured out still *gender/sex/etc)
# cihiA2a is new "sex" variable (from ideasweb)

df1_6 <- df1_6 %>%
  mutate(cihiA2a = case_when(
    is.na(cihiA2a)  ~ NA,
    cihiA2a == "UN" ~ "UNK",
    cihiA2a=="M"~"M",
    cihiA2a=="F"~"F",
    TRUE ~ NA
  ))

##################################################################
##                      EMHware ChYMH DATA                      ##
##################################################################

## Grab EMHware codebook

EMHware_CodeBook <- read_excel("M:\\DATA & REPORTS\\Clinical & Client Services\\Clinical Data\\interRAI\\interRAI Matching Codebook.xlsx", sheet = "EMHware Variables")

#### Grab new ChYMH data

ChYMH_folder <- "M:/DATA & REPORTS/Clinical & Client Services/Clinical Data/interRAI/EMHware interRAI ChYMH Export"

allfiles <- list.files(path=ChYMH_folder, pattern="*.csv", full.names=TRUE)

ChYMH_export <- plyr::ldply(allfiles, read_csv, show_col_types = FALSE)

# filter all those without NA in program

ChYMH_1 <- filter(ChYMH_export,!is.na(program_name)) # remove rows w/NAs in program_name

ChYMH_1 <- subset(ChYMH_1, !grepl("default", program_name)) # remove rows w/default as program

# define variables we want to keep (leave this out for now)

#keep2_1 <- filter(EMHware_CodeBook, KEEP==TRUE)$`iCode EMHware`

#ChYMH_2<- dplyr::select(ChYMH_1,all_of(keep2_1)) # can also use "any_of" command

ChYMH_1$SOURCE<-"EMHware"

# convert all true and false to 0 and 1
# use the code below to double to subset all columns that countain the string (to double check not removing important text)
#sub <- ChYMH_export[grep("true", ChYMH_export)] 

# ChYMH_1[ChYMH_1 == 'false'] <- 0 <--- this code stopped working on 08-21-2023 / not sure why but was getting POSIX error--which was weird
# ChYMH_1[ChYMH_1 == 'true'] <- 1

# ChYMH_1[ChYMH_1 == 'FALSE'] <- 0
# ChYMH_1[ChYMH_1 == 'TRUE'] <- 1

ChYMH_1 <- ChYMH_1 %>%
  mutate(across(everything(), ~sub("true", "1", .)))
ChYMH_1 <- ChYMH_1 %>%
  mutate(across(everything(), ~sub("false", "0", .)))
ChYMH_1 <- ChYMH_1 %>%
  mutate(across(everything(), ~sub("TRUE", "1", .)))
ChYMH_1 <- ChYMH_1 %>%
  mutate(across(everything(), ~sub("FALSE", "0", .)))



# NA erroneous dates
ChYMH_1$cihiAD4c[ChYMH_1$cihiAD4c == as.Date("1900-04-08")] <- NA 
ChYMH_1$iB2[ChYMH_1$iB2 == as.Date("1900-04-08")] <- NA 
ChYMH_1$iU2[ChYMH_1$iU2 == as.Date("1900-04-08")] <- NA 

# auto format column types

ChYMH_2 <- type_convert(ChYMH_1)

ChYMH_3 <- transform(ChYMH_2,cihiU3=as.numeric(cihiU3),client_id=as.character(client_id),iA5d=as.character(iA5d))

#ChYMH_4$iA2<-as.numeric(dplyr::recode(ChYMH_4$iA2, "M"=1, "F"=2, "OTH"=3))

#ChYMH_4$cihiA2a<-as.numeric(dplyr::recode(ChYMH_4$cihiA2a, "M"=1, "F"=2, "UN"=3))

#ChYMH_4$iA8 <-as.numeric(dplyr::recode(ChYMH_4$iA8, '1'=1, '2'=2,'3'=3,'4'=4,'5'=5,'6'=6,'7'=7,'5First'=5, '6First'=6)) #####

ChYMH_3$iA8 <- gsub("1", "Initial", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("6First", "Initial", ChYMH_3$iA8) ### CHECK THESE!!!! <-------------- Ask Nick
ChYMH_3$iA8 <- gsub("5First", "Initial", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("5", "Discharge", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("2", "Reassessment", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("6", "Discharge", ChYMH_3$iA8)
ChYMH_3$iA8 <- gsub("4", "Reassessment", ChYMH_3$iA8)

#ChYMH_3[ChYMH_3 == ""] <- NA # all blank spaces become NA

ChYMH_4 <- subset(ChYMH_3, !grepl("default", program_name))

# 
# ChYMH_4$type1 <-  ifelse(ChYMH_4$iA8=="Initial", "Initial",
#                        ifelse(ChYMH_4$iA8=="Reassessment" | ChYMH_4$iA8=="Subsequent", "Reassessment",
#                               ifelse(ChYMH_4$iA8==5 |ChYMH_4$iA8==6,3,
#                                      ifelse(ChYMH_4$iA8==7,4,0))))
# 
# ChYMH_4$type2 <-  ifelse(ChYMH_4$oA8=="S-INTL",1,
#                        ifelse(ChYMH_4$oA8=="S-SQNT",2,
#                               ifelse(ChYMH_4$oA8=="S-DCRG",3,0)))
# 
# ChYMH_4$type3 <-  ifelse(ChYMH_4$type_cd=="chymh_dd_monitoring_op",2,
#                        ifelse(ChYMH_4$type_cd=="chymh_monitoring_op",2,0))
# 
# ChYMH_4$survey_type2 <-  ifelse(ChYMH_4$type3 != 0 & !is.na(ChYMH_4$type3), ChYMH_4$type3,
#                              ifelse(ChYMH_4$type2 != 0 & !is.na(ChYMH_4$type2), ChYMH_4$type2,
#                                     ifelse(ChYMH_4$type1 != 0 & !is.na(ChYMH_4$type1), ChYMH_4$type1, NA)))


# convert all instances of 'true' to 1
# use the code below to double to subset all columns that countain the string (to double check not removing important text)
#sub <- ChYMH_export[grep("true", ChYMH_export)] 

ChYMH <- ChYMH_4
Ideas <- df1_6

Ideas <- Ideas %>% mutate_if(is.integer, as.numeric)
#Ideas$iA9 <- as.Date(Ideas$iA9, "%m/%d/%Y")
Ideas$iB2 <- as.Date(Ideas$iB2, "%m/%d/%Y")
Ideas$iT1 <- as.Date(Ideas$iT1, "%m/%d/%Y")
#Ideas$iU2 <- as.Date(Ideas$iU2, "%m/%d/%Y")
ChYMH$iA11a <- as.numeric(ChYMH$iA11a)
ChYMH$iAA1a <- as.numeric(ChYMH$iAA1a)
ChYMH$iAA1c <- as.numeric(ChYMH$iAA1c)
ChYMH$iAA1d <- as.numeric(ChYMH$iAA1d)
ChYMH$iAA1e <- as.numeric(ChYMH$iAA1e)
ChYMH$iAA1f <- as.numeric(ChYMH$iAA1f)
ChYMH$iM7 <- as.numeric(ChYMH$iM7)
ChYMH$iN6c <- as.numeric(ChYMH$iN6c)

#common <- compare_df_cols_same(ChYMH, Ideas) # Code to check if any variables differ in format (each matching variable must have same format)

# ChYMH$client_id <- as.character(ChYMH$iN6c)
# ChYMH$iN6c <- as.numeric(ChYMH$iN6c)
# Join dfs

Combined <- dplyr::bind_rows(ChYMH, Ideas) # join the dfs


#Combined <- Combined %>%
#  filter(type_cd %in% c("chymh_op", "chymh_s_plus", "chymh_dd_op", "chymh_monitoring_op"))  # DOUBLEL CHECK THIS WITH NICK
rm(ChYMH_1, ChYMH_2, ChYMH_3, ChYMH_4, df1_2, df1_3, df1_4_3, df1_4_4, df1_5, df1_6)
############################################################################
############################################################################
###                                                                      ###
###                          CALCULATED COLUMNS                          ###
###                                                                      ###
############################################################################
############################################################################

##----------------------------
##   1. Assessment tool used  
##----------------------------

Combined <- mutate(Combined, Tool = if_else(is.na(instrument), 
                                            if_else(type_cd == "chymh_s_plus", "rscr", "cymh"), 
                                            instrument))
# rscr = screener
# chymh = ChYMH

##------------------------------------------------------------------------
##  2. Type of assessment (Initial, Reassessment, Monitoring, Discharge)   ASK NICK!!!!
##------------------------------------------------------------------------

Combined <- mutate(Combined, 
                   Type = if_else(is.na(type_cd),
                                  if_else(survey_type == "Readmission Initial", "Initial", survey_type), 
                                  if_else(type_cd == "chymh_monitoring_op", "Monitoring Assessment", 
                                          if_else(oA8 == "S-INTL", "Initial", 
                                                  if_else(oA8 == "S-SQNT", "Reassessment", # formerly "subsequent"
                                                          if_else(iA8 == "2", "Reassessment", iA8))))))
# iA8 = reason for assessment

Combined <- mutate(Combined, 
                   Type = if_else(is.na(Type), iA8, Type))

Combined$Type <- gsub("2", "Reassessment", Combined$Type) 

##----------------------
##  3. Reference date  
##---------------------

# iA9 = assessment reference date in EMHware
# reference_d = the same in Ideas web

Combined$ref <- Combined$iA9

#Combined$ref <- ifelse(is.na(Combined$iA9), Combined$reference_d, Combined$iA9)

##---------------------------------
##  4. Last assessment completed      ## MODIFY THIS
##---------------------------------

# if iT1 and iU2 are blank grab complete_d, if only iU2 is blank grab iT1, otherwise iU2 

Combined <- mutate(Combined,
                   compl = if_else(is.na(iU2), iT1, iU2))

# iT1 = last day of involvement w/program or agency
# iU2 = date assessment completed
# complete_d = date assessment completed IdeasWeb

##-------------------
##  5. CREATE EMHID                                  ########### DOUBLE CHECK THIS!!! 2 dno't have valid EMHID
##-------------------

CIS_ID1$'Client ID#' <- as.character(CIS_ID1$'Client ID#')
CIS_ID1$`BI CIS Client Identifier` <- as.character(CIS_ID1$`BI CIS Client Identifier`)
Table4$ID <- as.character(Table4$ID)

# If client_id has a valid value, return CIS_ID1$client ID#, otherwise match client_id with BI CIS Client 

Combined$EMHID <- ifelse(!is.na(Combined$client_id),
                         CIS_ID1$`Client ID#`[match(Combined$client_id, CIS_ID1$`BI CIS Client Identifier`)],
                         NA)

# check if there is a match between Combined$crn and Table1$CRN, and if there is, return the corresponding value from Table1$'EMHID Actual'
Combined$EMHID <- ifelse(is.na(Combined$EMHID) & !is.na(Combined$client_id),
                         Table1$`EMHID Actual`[match(Combined$client_id, Table1$CRN)],
                         Combined$EMHID)

# check if there is a match between Combined$iA5a and Table4$'Chart Number', and if there is, return the corresponding value from Table4$ID
Combined$EMHID <- ifelse(is.na(Combined$EMHID) & !is.na(Combined$iA5d),
                         Table4$ID[match(Combined$iA5d, Table4$`Chart Number`)],
                         Combined$EMHID)

# check if there is a match between Combined$iA5a and Table4$ID, and if there is, return the corresponding value from Table4$ID

Combined$EMHID <- ifelse(is.na(Combined$EMHID) & !is.na(Combined$iA5d),
                         Table4$ID[match(Combined$iA5d, Table4$ID)],
                         Combined$EMHID)

##---------------------
##  6. Calculate Age   
##---------------------

# grab all birth_years 

Combined$birth_year <- ifelse(!is.na(match(Combined$EMHID, CIS_ID1$"Client ID#")),
                              CIS_ID1$'Year of Birth'[match(Combined$EMHID, CIS_ID1$"Client ID#")],
                              Combined$iA3)

# Convert Combined$ref to a date format

#Combined$ref <- as.Date(Combined$ref)

# Now calculate age in years at the given reference date (Combined$ref)

Combined$Age <- as.integer((Combined$ref - as.Date(paste0(Combined$birth_year, "-01-01")))/365.25)

##------------------------------------------
##  7. Calculate FirstChYMH and last ChYMH  
##------------------------------------------

Combined <- Combined %>%
  group_by(EMHID) %>%
  mutate(MinRef = min(if_else(Tool != "rscr", ref, as.Date(Inf)), na.rm = FALSE),
         MaxRef = max(if_else(Tool != "rscr", ref, as.Date(-Inf)), na.rm = FALSE),
         FirstChYMH = as.integer(ref == MinRef),
         LastChYMH = as.integer(ref == MaxRef)) %>%
  ungroup() %>%
  select(-MinRef, -MaxRef)

##-------------------------------------------------------------------
##  8. For FirstAx and last AX variable (get clarification on this)  
##-------------------------------------------------------------------

Combined <- Combined %>%
  group_by(EMHID) %>%
  mutate(MinRef = min(ref, na.rm = FALSE),
         MaxRef = max(ref, na.rm = FALSE),
         FirstAx = as.integer(ref == MinRef),
         LastAx = as.integer(ref == MaxRef)) %>%
  ungroup() %>%
  select(-MinRef, -MaxRef)

##-----------------------------
##  9. First & last  Screener  
##-----------------------------
 
Combined <- Combined %>%
  group_by(EMHID) %>%
  mutate(MinRef = min(if_else(Tool == "rscr", ref, as.Date(Inf)), na.rm = FALSE),
         MaxRef = max(if_else(Tool == "rscr", ref, as.Date(-Inf)), na.rm = FALSE),
         FirstScreener = as.integer(ref == MinRef),
         LastScreener = as.integer(ref == MaxRef)) %>%
  ungroup() %>%
  select(-MinRef, -MaxRef)

#test <- Combined %>% select(EMHID, Tool, ref, FirstChYMH, LastChYMH, FirstAx, LastAx, FirstScreener, LastScreener)

##------------------
##  10. DSI_Scale 
##------------------

Combined <- Combined %>% mutate(validdsi = case_when(
  iE1ss %in% c(0,1,2,3,4) &
    iE1vv %in% c(0,1,2,3,4) &
    iE1ww %in% c(0,1,2,3,4) &
    iE1xx %in% c(0,1,2,3,4) &
    iE1yy %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(DSI__scale = case_when(validdsi == 1 ~ 
                                         (case_when(iE1ss %in% c(0,1,2,3) ~ + iE1ss, iE1ss == 4 ~ + 3)) +
                                         (case_when(iE1vv %in% c(0,1,2,3) ~ + iE1vv, iE1vv == 4 ~ + 3)) +
                                         (case_when(iE1ww %in% c(0,1,2,3) ~ + iE1ww, iE1ww == 4 ~ + 3)) +
                                         (case_when(iE1xx %in% c(0,1,2,3) ~ + iE1xx, iE1xx == 4 ~ + 3)) +
                                         (case_when(iE1yy %in% c(0,1,2,3) ~ + iE1yy, iE1yy == 4 ~ + 3))))

##------------------
##  11. ANX Scores  
##------------------

Combined <- Combined %>% mutate(validnxs = case_when(
  iE1eee %in% c(0,1,2,3,4) & 
    iE1fff %in% c(0,1,2,3,4) & 
    iE1ggg %in% c(0,1,2,3,4) & 
    iE1iii %in% c(0,1,2,3,4) & 
    iE1kkk %in% c(0,1,2,3,4) & 
    iE1lll %in% c(0,1,2,3,4) & 
    iE1eeee %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(ANX__scale = case_when(validnxs == 1 ~ 
                                          iE1eee + iE1fff + iE1ggg + iE1iii + iE1kkk + iE1lll + iE1eeee))

##--------------
##  12. CHAMHP  
##--------------

Combined <- Combined %>%
  mutate(CHAMHPS__scale =
           ifelse(
             Age <= 7,
             ifelse(
               iX14a == 0,
               ifelse(
                 iX2a %in% c(0, 1, 2),
                 ifelse(iE1rrr %in% c(0, 1), 0,
                        ifelse(iE1rrr %in% c(2, 3, 4), 2, NA)),
                 ifelse(iX2a %in% c(3, 4, 5), 2, NA)),
               ifelse(
                 iX14a == 1,
                 ifelse(iX2a %in% c(0, 1), 1,
                        ifelse(iX2a %in% c(2, 3, 4, 5), 3, NA)),
                 ifelse(iX14a %in% c(2, 3, 4),
                        ifelse(iE1lll == 0, 3,
                               ifelse(
                                 iE1lll %in% c(1, 2, 3, 4), 5, NA
                               )), NA))),
             ifelse(
               Age >= 8 & Age <= 11,
               ifelse(
                 iX14a %in% c(0, 1),
                 ifelse(
                   iX14b %in% c(0, 1),
                   ifelse(
                     iE3n %in% c(0, 1, 2),
                     ifelse(iEEE2 %in% c(0, 1), 0,
                            ifelse(iEEE2 %in% c(2, 3, 4), 2, NA)),
                     ifelse(iE3n %in% c(3, 4), 4, NA)
                   ),
                   ifelse(
                     iX14b == 2,
                     ifelse(iE1qq %in% c(0, 1, 2), 1,
                            ifelse(iE1qq %in% c(3, 4), 3, NA)),
                     ifelse(iX14b %in% c(3, 4), 4, NA)
                   )),
                 ifelse(
                   iX14a == 2,
                   ifelse(iE1vv %in% c(0, 1, 2), 3,
                          ifelse(iE1vv %in% c(3, 4), 5, NA)),
                   ifelse(iX14a %in% c(3, 4), 5, NA)
                 )),
               ifelse(Age >= 12,
                      ifelse(
                        iX14a %in% c(0, 1),
                        ifelse(
                          iX14b %in% c(0, 1),
                          ifelse(
                            iE1iii %in% c(0, 1, 2),
                            ifelse(
                              iE1xx %in% c(0, 1, 2),
                              ifelse(
                                iY1ao %in% c(0, 1, 2),
                                ifelse(iX1d == 0, 1, 2),
                                ifelse(iY1ao %in% c(3, 4, 5), 3, NA)
                              ),
                              ifelse(iE1xx %in% c(3, 4), 3, NA)
                            ),
                            ifelse(iE1iii %in% c(3, 4), 3, NA)
                          ),
                          ifelse(iX14b == 2,
                                 3,
                                 ifelse(iX14b %in% c(3, 4),
                                        5,
                                        NA))),
                        ifelse(
                          iX14a == 2,
                          ifelse(
                            iX1c %in% c(0, 1, 2, 3, 4),
                            ifelse(
                              iBB5f %in% c(0, 8),
                              ifelse(iX2a %in% c(0, 1),
                                     3,
                                     ifelse(iX2a %in% c(2, 3, 4, 5),
                                            4,
                                            NA)),
                              ifelse(iBB5f == 1, 4, NA)
                            ),
                            ifelse(iX1c == 5, 4, NA)
                          ),
                          ifelse(iX14a %in% c(3, 4),
                                 ifelse(
                                   iEEE2 %in% c(0, 1),
                                   ifelse(iE1qqq == 0,
                                          5,
                                          ifelse(iE1qqq %in% c(1, 2, 3, 4),
                                                 6,
                                                 NA)),
                                   ifelse(iEEE2 %in% c(2, 3, 4),
                                          6,
                                          NA)),
                                 NA))),NA))))

#test <- Combined %>% filter(Age >= 12 & iX14a >=3) %>% select(EMHID,Age, iX14a, iBB5f, iEEE2, iE1qqq, CHAMHPS__scale)

##------------------
##  13. DABS scale  
##------------------

Combined <- Combined %>% mutate(validdabs = case_when( 
  iE3l %in% c(0,1,2,3,4) &
    iE3m %in% c(0,1,2,3,4) &
    iE3n %in% c(0,1,2,3,4) &
    iE3q %in% c(0,1,2,3,4) &
    iE3r %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(DABS__scale = case_when(validdabs == 1 ~
                                          iE3l + iE3m + iE3n + iE3q + iE3r))

##--------------
##  ABS__scale  
##--------------

Combined <- Combined %>% mutate(validabs = case_when(
  iE3l %in% c(0,1,2,3,4) & 
    iE3m %in% c(0,1,2,3,4) & 
    iE3n %in% c(0,1,2,3,4) & 
    iE3p %in% c(0,1,2,3,4) ~ 1,
  TRUE ~ 0)) 

Combined <- Combined %>% mutate(ABS__scale = case_when(validabs==1 ~ 
                                                         (case_when(iE3l %in% c(0,1,2,3) ~ iE3l, iE3l == 4 ~ + 3)) + 
                                                         (case_when(iE3m %in% c(0,1,2,3) ~ + iE3m, iE3m == 4 ~ + 3)) +
                                                         (case_when(iE3n %in% c(0,1,2,3) ~ + iE3n, iE3n == 4 ~ + 3)) + 
                                                         (case_when(iE3p %in% c(0,1,2,3) ~ + iE3p, iE3p == 4 ~ + 3))))
##-------------------
##  14. SOCDIS scale: sCYMHANHEDO
##-------------------

Combined <- Combined %>% mutate(validedo = case_when(
  iE1qqq %in% c(0,1,2,3,4) &                                            
    iE1rrr %in% c(0,1,2,3,4) &                                                 
    iE1sss %in% c(0,1,2,3,4) &                                              
    iE1ttt %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate('SOCDIS__scale' = case_when(validedo == 1 ~
                                              iE1qqq + iE1rrr + iE1sss + iE1ttt))

##-----------------------
##  15. DISTRACT_scale   
##-----------------------

Combined <- Combined %>% mutate(validact = case_when(
  iE1oo %in% c(0,1,2,3,4) &
    iE1pp %in% c(0,1,2,3,4)&
    iE1qq %in% c(0,1,2,3,4)&
    iE1rr %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(DISTRACT__scale = case_when(validact == 1 ~ (
  iE1oo +iE1pp +iE1qq + iE1rr)))

##--------------------------
##  16. KinarkRiskHTO_comb  
##--------------------------

Combined$KinarkRiskHTO_comb <- Combined$KinarkRiskHTO

##--------------------------
##  17. KinarkRiskHTS_comb  
##--------------------------

Combined$KinarkRiskHTS_comb <- Combined$KinarkRiskHTS

##--------------------------
##  18. KinarkRiskHTP_comb  
##--------------------------

Combined$KinarkRiskHTP_comb<- Combined$KinarkRiskHTP

##-------------------------
##  19. KinarkRiskSM_comb  
##-------------------------

Combined$KinarkRiskSM_comb <- Combined$KinarkRiskSM

##--------------------------
##  20. KinarkRiskVCP_comb  
##--------------------------
Combined$KinarkRiskVCP_comb<- Combined$KinarkRiskVCP

##--------------------------
##  21. KinarkRiskFB_comb  
##--------------------------

Combined$KinarkRiskFB_comb <- Combined$KinarkRiskFB

##-------------------------
##  22. KinarkRiskOC_comb  
##-------------------------
Combined$KinarkRiskOC_comb <- Combined$KinarkRiskOC

##-------------
##  23. Acute  
##-------------

Combined$Acute <- Combined$CaseComplexityFA

##---------------
##  24. Complex  
##---------------

Combined$Complex <- Combined$CaseComplexityS

##-------------------------
##  25. KinarkRiskHTO_cat  
##-------------------------

Combined <- Combined %>%
  mutate(KinarkRiskHTO_cat = case_when(
    KinarkRiskHTO == 0 ~ "No Risk",
    KinarkRiskHTO == 1 ~ "Potential Risk",
    KinarkRiskHTO == 2 ~ "Risk Identified",
    KinarkRiskHTO == 3 ~ "Serious Risk"
  ))

##-------------------------
##  26. KinarkRiskHTS_cat  
##-------------------------

Combined <- Combined %>%
  mutate(KinarkRiskHTS_cat = case_when(
    KinarkRiskHTS  == 0 ~ "No Risk",
    KinarkRiskHTS  == 1 ~ "Potential Risk",
    KinarkRiskHTS  == 2 ~ "Risk Identified",
    KinarkRiskHTS  == 3 ~ "Serious Risk"
  ))

##------------------------
##  27. KinarkRiskSM_cat  
##------------------------

Combined <- Combined %>%
  mutate(KinarkRiskSM_cat = case_when(
    is.na(KinarkRiskSM )  ~ NA,
    KinarkRiskSM  == 0 ~ "No Risk",
    KinarkRiskSM  == 1 ~ "Potential Risk",
    KinarkRiskSM  == 2 ~ "Risk Identified",
    KinarkRiskSM  == 3 ~ "Serious Risk"
  ))

##------------------------
##  28. KinarkRiskSM_cat  
##------------------------

Combined <- Combined %>%
  mutate(KinarkRiskHTP_cat = case_when(
    is.na(KinarkRiskHTP )  ~ NA,
    KinarkRiskHTP  == 0 ~ "No Risk",
    KinarkRiskHTP  == 1 ~ "Potential Risk",
    KinarkRiskHTP  == 2 ~ "Risk Identified",
    KinarkRiskHTP  == 3 ~ "Serious Risk"
  ))

##-------------------------
##  29. KinarkRiskVCP_cat  
##-------------------------

Combined <- Combined %>%
  mutate(KinarkRiskVCP_cat = case_when(
    is.na(KinarkRiskVCP )  ~ NA,
    KinarkRiskVCP  == 0 ~ "No Risk",
    KinarkRiskVCP  == 1 ~ "Potential Risk",
    KinarkRiskVCP  == 2 ~ "Risk Identified",
    KinarkRiskVCP  == 3 ~ "Serious Risk"
  ))

##------------------------
##  30. KinarkRiskFB_cat  
##------------------------

Combined <- Combined %>%
  mutate(KinarkRiskFB_cat = case_when(
    is.na(KinarkRiskFB )  ~ NA,
    KinarkRiskFB  == 0 ~ "No Risk",
    KinarkRiskFB  == 1 ~ "Potential Risk",
    KinarkRiskFB  == 2 ~ "Risk Identified",
    KinarkRiskFB  == 3 ~ "Serious Risk"
  ))

##------------------------
##  31. KinarkRiskOC_cat  
##------------------------

Combined <- Combined %>%
  mutate(KinarkRiskOC_cat = case_when(
    is.na(KinarkRiskOC )  ~ NA,
    KinarkRiskOC  == 0 ~ "No Risk",
    KinarkRiskOC  == 1 ~ "Potential Risk",
    KinarkRiskOC  == 2 ~ "Risk Identified",
    KinarkRiskOC  == 3 ~ "Serious Risk"
  ))

##-----------------
##  32. Acute_cat  
##-----------------

Combined <- Combined %>%
  mutate(Acute_cat = case_when(
    is.na(Acute)  ~ NA,
    Acute == 1 ~ "Yes",
    Acute == 0 ~ "No"
  ))

##-------------------
##  33. Complex_cat  
##-------------------

Combined <- Combined %>%
  mutate(Complex_cat = case_when(
    is.na(Complex)  ~ NA,
    Complex == 1 ~ "Yes",
    Complex == 0 ~ "No"
  ))

##-----------------------------------------------
##  34.  ED_Screen, ID_Screen & Comorbid screen  
##-----------------------------------------------

Combined$ED_Screen <- Combined$iW29

Combined$ID_Screen <- Combined$iA47

Combined$ComorbidMedical_Screen <- Combined$iA48  

##------------------
##  43. Positive Symptoms Scale  
##------------------

Combined <- Combined %>% mutate(validpss = case_when(iE1mmm %in% c(0,1,2,3,4) & 
                                                       iE1ooo %in% c(0,1,2,3,4) & 
                                                       iE1nnn %in% c(0,1,2,3,4) & 
                                                       iE1ppp %in% c(0,1,2,3,4) ~ 1,
                                                     TRUE ~ 0))

Combined <- Combined %>% mutate(PSS__scale = case_when(validpss == 1 ~ 
                                                     (case_when(iE1mmm %in% c(0,1,2,3) ~ iE1mmm, iE1mmm == 4 ~ + 3)) + 
                                                     (case_when(iE1ooo %in% c(0,1,2,3) ~ + iE1ooo, iE1ooo == 4 ~ + 3)) +
                                                     (case_when(iE1nnn %in% c(0,1,2,3) ~ + iE1nnn, iE1nnn == 4 ~ + 3)) +
                                                    (case_when(iE1ppp %in% c(0,1,2,3) ~ + iE1ppp, iE1ppp == 4 ~ + 3)))) 
Combined$sCYPSS <- Combined$PSS__scale

##---------------
##  36.  Trauma  
##---------------

Combined <- Combined %>%
  mutate(Trauma = case_when(
    is.na(iY1b)  ~ NA,
    iY1b == 1 ~ "Caused Intense Fear",
    iY1b == 0 ~ "No or Not Applicable",
    iY1b == 8 ~ "Did Not Respond"
  ))


##--------------------
##  37.  RISSK_scale  
##--------------------

Combined <- Combined %>% mutate(validssk = case_when(
  iE1ss %in% c(0:4) &
    iE1tt %in% c(0:4) &
    iE1vv %in% c(0:4) &
    iE1ww %in% c(0:4) &
    iE1xx %in% c(0:4) &
    iE1yy %in% c(0:4) &
    iE1aaa %in% c(0:4) &
    iE1rrr %in% c(0:4) &
    iE1ttt %in% c(0:4) &
    iE3w %in% c(0:4) &
    iP19h %in% c(0,1,8) &
    iX1a %in% c(0:5) &
    iX1b %in% c(0,1,8) & 
    iX1c %in% c(0:5) &
    iX1d %in% c(0,1) ~ 1, TRUE ~ 0),
  xdsi = iE1ss + iE1tt + iE1vv + iE1ww + iE1xx +iE1yy + iE1aaa + iE1rrr + iE1ttt)

Combined <- Combined %>% mutate(RISSK__scale = case_when(validssk == 1 ~ 
                                           (case_when(iX1c == 0 ~
                                                        case_when(iX1d == 0 ~ 
                                                                    case_when(iX1a == 0 ~ 
                                                                                case_when(iE3w == 0 ~ 
                                                                                            case_when (xdsi >= 0 & xdsi <= 17 ~ 0,TRUE ~ 1),TRUE ~ 1),TRUE ~ 3)),
                                                      iX1c %in% c(1,2,3) ~ 
                                                        case_when(iX1a %in% c(0,1,2) ~ 
                                                                    case_when(iX1b %in% c(0,8) ~ 
                                                                                case_when(xdsi %in% c(0,1) ~ 1, 
                                                                                          xdsi >= 2 & xdsi <= 12 ~ 2, 
                                                                                          xdsi >= 13 & xdsi <= 36 ~ 3),TRUE ~ 
                                                                                case_when(iX1d == 0 ~ 2),TRUE ~ 4)),
                                                      iX1c == 4 ~ 
                                                        case_when(iX1d == 0 ~ 3,TRUE ~ 
                                                                    case_when(iX1b == 0 ~ 
                                                                                case_when(iP19h == 0 ~ 4, TRUE ~ 5),TRUE ~ 5)),
                                                      iX1c == 5 ~ 
                                                        case_when(iX1b %in% c(0,8) ~ 
                                                                    case_when (iX1d == 0 ~ 3,TRUE ~ 5),iX1a %in% c(0,1,2,3) ~ 5,TRUE ~ 6)))))

##-----------------
##  40. RIO_scale  
##-----------------

Combined <- Combined %>% mutate(validrio = case_when(
  iE1oo %in% c(0,1,2,3,4) &
    iE3l %in% c(0,1,2,3,4) &
    iE3m %in% c(0,1,2,3,4) & 
    iE3n %in% c(0,1,2,3,4) & 
    iE3q %in% c(0,1,2,3,4) &
    iP19h %in% c(0,1,8) &
    iX2a %in% c(0,1,2,3,4,5) &
    iX2b %in% c(0,1,2,3,4,5) &
    iX2c %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(xrio = case_when(validrio == 1 ~ iX2a + iX2b + iX2c))

Combined <- Combined %>% mutate(xbeh = case_when(validrio ==1 ~ 
                                       (case_when(iE3l %in% c(2,3,4) ~ iE3l-1) +
                                          case_when(iE3n %in% c(2,3,4) ~ iE3n-1))))

Combined <- Combined %>% mutate(RIO__scale = case_when(validrio == 1 ~ 
                                         (case_when(iE3m == 0 ~ 
                                                      (case_when(xrio == 0 ~ 
                                                                   case_when(iE3q & iE3n %in% c(1,2,3,4) ~ 1,TRUE ~ 0))) +
                                                      (case_when(xrio %in% c(1,2) ~ 1, TRUE ~ 0)) +
                                                      (case_when(xrio %in% c(3,4) ~ 3, TRUE ~ 0)) +
                                                      (case_when(xrio >= 5 ~ 3, TRUE ~ 0)), TRUE ~ 0) +
                                            case_when(iE3m == 1 ~ 
                                                        (case_when(xrio %in% c(0,1) ~ 
                                                                     ((case_when(iE3q == 0 ~ 1, TRUE ~ 0)) +
                                                                        case_when(iE3q >= 1 ~ 
                                                                                    (case_when(iE1oo == 0 ~ 1, TRUE ~ 0) +
                                                                                       (case_when(iE1oo %in% c(1,2,3) ~ 2, TRUE ~ 0)) +
                                                                                       (case_when(iE1oo == 4 ~ 3, TRUE ~ 0))))), TRUE ~ 0) +
                                                           case_when(xrio %in% c(2,3,4,5) ~ 3, TRUE ~ 0) +
                                                           case_when(xrio >= 6 ~ case_when(iE3q & iE3n %in%
                                                                                            c(1,2,3,4) ~ 5,TRUE ~ 4), TRUE ~ 0)),
                                                      TRUE ~ 0) +
                                            case_when(iE3m == 2 ~
                                                        (case_when(xrio >= 0 & xrio <= 6 ~ 
                                                                     (case_when(xbeh %in% c(0,1) ~ 3, TRUE ~ 0) +
                                                                        case_when(xbeh >= 2 ~ 4,TRUE ~ 5)), TRUE ~ 0)), TRUE ~ 0) +
                                            case_when(iE3m == 3 ~ 
                                                        (case_when(xrio %in% c(0,1,2,3,4) ~ 3, TRUE ~ 0) +
                                                           case_when(xrio >= 5 ~ case_when(iP19h %in% c(0,8) ~ 4,TRUE ~ 5))), 
                                                      TRUE ~ 0) +
                                            case_when(iE3m == 4 ~ 
                                                        (case_when(xrio %in% c(0,1,2) ~ 4, TRUE ~ 0) +
                                                           case_when(xrio >= 3 & xrio <= 8 ~ 5, TRUE ~ 0)+ 
                                                           case_when(xrio >= 9 ~ 6, TRUE ~ 0)), TRUE ~ 0))))
##---------------------------------------
##  41. SOS__scale SEVERITY OF SELF HARM  
##---------------------------------------

Combined <- Combined %>% mutate(validsos = case_when(
  iC1d %in% c(0,1,2,3,4,5) & #  decision making
    iC2a %in% c(0,1) & #  short term memory (brooklyn had iC2a) <-- look this up
    iD1 %in% c(0,1,2,3,4) &  # understoof
    iE1mmm %in% c(0,1,2,3,4) &  #hallucinations
    iE1nnn %in% c(0,1,2,3,4) & # command hallucinations
    iE1ooo %in% c(0,1,2,3,4) & # delusions
    iE1ppp %in% c(0,1,2,3,4) & # Abnormal thought processes
    iE1ss %in% c(0,1,2,3,4) & # Sad facial expressions
    iE1vv %in% c(0,1,2,3,4) & # negative statements
    iE1ww %in% c(0,1,2,3,4) & # self-deprecating
    iE1xx %in% c(0,1,2,3,4) & # guilt or shame
    iE1yy %in% c(0,1,2,3,4) & # hopelessness
    iG2j %in% c(0,1,2,3,4,5,6,8) & #Eating
    iX1b %in% c(0,1,8) & # suicidal intent
    iX1c %in% c(0,1,2,3,4,5) & # considered self-injury
    iX1d %in% c(0,1) & #others concerned about self-injury
    iX1e %in% c(0,1) ~ 1, TRUE ~ 0)) # suicide plan


Combined <- Combined %>% mutate(xcsp1 = case_when(
  iC1d %in% c(0,1,2,3,4,5) &
    iD1 %in% c(0,1,2,3,4) &
    iC2a %in% c(0,1) ~ 1, TRUE ~ 0))


Combined <- Combined %>% mutate(xcps2 = case_when(
  iC1d %in% c(0,1,2,3,4,5) &
    iD1 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))


# Impairment count

Combined <- Combined %>% mutate(xcps1 = case_when(validsos == 1 ~
                                                    (
                                                      case_when(iC1d %in% c(1, 2, 3) ~ 1, TRUE ~ 0) +
                                                        case_when(iD1 %in% c(1, 2, 3, 4) ~ 1, TRUE ~ 0) +
                                                        case_when(iC2a == 1 ~ +1, TRUE ~ 0)
                                                    )))

# Severe Imp count

Combined <- Combined %>% mutate(xcps2 = case_when(validsos == 1 ~
                                                    (
                                                      case_when(iC1d == 3 ~ 1, TRUE ~ 0) +
                                                        case_when(iD1 %in% c(3, 4) ~ +1, TRUE ~ 0)
                                                    )))
# cog performance count

Combined <- Combined %>% mutate(xcps = case_when(validsos == 1 ~
                                                   (
                                                     case_when(iC1d ==  5 ~ 6, TRUE ~ 0) +
                                                       case_when(iC1d == 4 ~ (
                                                         case_when(iC1d %in% c(6, 8) ~ 6, TRUE ~ 0) +
                                                           case_when(iG2j %in% c(0, 1, 2, 3, 4, 5) ~ 5, TRUE ~ 0)
                                                       ), TRUE ~ 0) +
                                                       case_when(iC1d >= 0 &
                                                                   iC1d < 4 ~ (
                                                                     case_when(xcps1 %in% c(2, 3) ~
                                                                                 (
                                                                                   case_when(xcps2 == 2 ~ 4, TRUE ~ 0) +
                                                                                     case_when(xcps2 == 1 ~ 3, TRUE ~ 0) +
                                                                                     case_when(xcps2 == 0 ~ 2, TRUE ~ 0)
                                                                                 ), TRUE ~ 0) +
                                                                       case_when(xcps1 == 1 ~ 1, TRUE ~ 0) +
                                                                       case_when(xcps1 == 0 ~ 0, TRUE ~ 0)
                                                                   )))))
# Depressive Severity count

Combined <- Combined %>% mutate(xdsi = case_when(
  validsos == 1 ~
    (
      case_when(iE1vv == 0 ~ 0, iE1vv %in% c(1, 2) ~ 1, iE1vv %in% c(3, 4) ~ 2) +
        case_when(iE1ss == 0 ~ 0, iE1ss %in% c(1, 2) ~ 1, iE1ss %in% c(3, 4) ~ 2) +
        case_when(iE1ww == 0 ~ 0, iE1ww %in% c(1, 2) ~ 1, iE1ww %in% c(3, 4) ~ 2) +
        case_when(iE1xx == 0 ~ 0, iE1xx %in% c(1, 2) ~ 1, iE1xx %in% c(3, 4) ~ 2) +
        case_when(iE1yy == 0 ~ 0, iE1yy %in% c(1, 2) ~ 1, iE1yy %in% c(3, 4) ~ 2)
    )
))

# Positive Sumptoms count


Combined <- Combined %>% mutate(xpss = case_when(validsos == 1 ~
                                                   (case_when(iE1mmm == 0 ~ +0, iE1mmm %in% c(1, 2) ~ +1, iE1mmm %in% c(3, 4) ~ +2) +
                                                       case_when(iE1nnn == 0 ~ +0, iE1nnn %in% c(1, 2) ~ +1, iE1nnn %in% c(3, 4) ~ +2) +
                                                       case_when(iE1ooo == 0 ~ +0, iE1ooo %in% c(1, 2) ~ +1, iE1ooo %in% c(3, 4) ~ +2) +
                                                       case_when(iE1ppp == 0 ~ +0, iE1ppp %in% c(1, 2) ~ +1, iE1ppp %in% c(3, 4) ~ +2)
                                                   )))

## CY Severity of Self Harm Scale

Combined <-
  Combined %>% mutate(SOS__scale = case_when(validsos == 1 ~
                                               (case_when(iX1c == 5 ~
                                                             (case_when(iX1b == 1 ~
                                                                           (case_when(xdsi >= 6 ~ 6, TRUE ~ 0) +
                                                                               case_when(xdsi < 6 ~ 5, TRUE ~ 0)), TRUE ~ 0) +
                                                                 case_when(iX1b %in% c(0, 8) ~(
                                                                       case_when(xdsi >= 6 & iX1e == 1 ~ 5, TRUE ~ 0) +
                                                                         case_when(xdsi >= 6 &
                                                                                     iX1e == 0 ~ 3, TRUE ~ 0) +
                                                                         case_when(xdsi < 6 &
                                                                                     iX1d == 1 ~ 4, TRUE ~ 0) +
                                                                         case_when(xdsi < 6 &
                                                                                     iX1d == 0 ~ 2, TRUE ~ 0)),
                                                                   TRUE ~ 0)), TRUE ~ 0) +
                                                   case_when(iX1c %in% c(3, 4) ~ (
                                                                 case_when(iX1b == 1 ~ 4, TRUE ~ 0) +
                                                                   case_when(iX1b %in% c(0, 8) ~ 3, TRUE ~ 0)
                                                               ), TRUE ~ 0) +
                                                   case_when(iX1c %in% c(0, 1, 2) ~(
                                                                 case_when(iX1b == 1 ~
                                                                             (case_when(xdsi >= 4 ~ 4, TRUE ~ 0) +
                                                                                 case_when(xdsi < 4 ~ 1, TRUE ~ 0)), TRUE ~ 0) +
                                                                   case_when(
                                                                     iX1b %in% c(0, 8) ~(
                                                                         case_when(xpss >= 3 & xcps >= 3 ~ 3, TRUE ~ 0) +
                                                                           case_when(xpss >= 3 & xcps < 3 ~ 2, TRUE ~ 0) +
                                                                           case_when(xpss < 3 & iX1d == 1 ~ 2, TRUE ~ 0) +
                                                                           case_when(xpss < 3 &
                                                                                       iX1d == 0 &
                                                                                       xcps >= 1 ~ 1, TRUE ~ 0) +
                                                                           case_when(xpss < 3 &
                                                                                       iX1d == 0 &
                                                                                       xcps == 0 ~ 0, TRUE ~ 0)),TRUE ~ 0)), TRUE ~ 0))))

Combined$sCYSOS <- Combined$SOS__scale

##-----------------
##  42. RHO_scale  
##-----------------

# old rho calculation
#Combined$RHO__scale <- ifelse(is.na(Combined$sCYRHO), ifelse(is.na(Combined$rhoscale_Scale), NA, Combined$rhoscale_Scale), Combined$sCYRHO)

Combined <- Combined %>% mutate(validrho = case_when(
  iE1ooo %in% c(0,1,2,3,4) & 
    iE1yyy %in% c(0,1,2,3,4) & 
    iE6 %in% c(0,1,2,3,4,5) & 
    iE7 %in% c(0,1,2) & 
    iX2a %in% c(0,1,2,3,4,5) & 
    iX2b %in% c(0,1,2,3,4,5) & 
    iX2c %in% c(0,1,2,3,4,5) &
    ABS__scale %in% c(0:12) &
    PSS__scale %in% c(0:12) & 
    iX4 %in% c(0,1,2) ~ 1,
  TRUE ~ 0))


Combined <- Combined %>% mutate(xrho1 = case_when(
  iX2a %in% c(4,5) | 
    iX2b %in% c(4,5) | 
    iX2c %in% c(4,5) | 
    iX4 == 2 ~ 2,
  iX2a %in% c(1,2,3) |
    iX2b %in% c(1,2,3) | 
    iX2c %in% c(1,2,3) | 
    iX4 == 1 ~ 1,
  TRUE ~ 0),
  xrho2 = iX2a + iX2b + iX2c)

Combined <- Combined %>% mutate(RHO__scale = case_when(validrho == 1 ~ case_when(
  xrho1 == 2 ~ case_when(
    xrho2 >= 10 ~ case_when(
      iE1ooo %in% c(1,2,3,4) ~ 6, iE1ooo == 0 ~ 5),
    xrho2 <10 ~ case_when(
      iE7 == 2 ~ 5, iE7 == 1 & iE1yyy %in% c(1,2,3,4) ~ 4,
      iE7 == 1 & iE1yyy == 0 ~ 2, iE7 == 0 ~ 3)),
  xrho1 == 1 ~ case_when(PSS__scale >= 2 ~ 4, PSS__scale < 2 ~ 2),
  xrho1 == 0 ~ case_when(ABS__scale >= 3 ~ 3, ABS__scale < 3 ~ case_when(
    PSS__scale >= 4 ~ 1, PSS__scale < 4 & iE6 %in% c(2,3,4,5) ~ 1,
    PSS__scale < 4 & iE6 %in% c(0,1) ~ 0)))))

Combined$sCYRHO <- Combined$RHO__scale

##------------------
##  43. PAIN_scale  
##------------------

#Combined$PAIN__scale <- ifelse(is.na(Combined$sPAIN), ifelse(is.na(Combined$pain_Scale), NA, Combined$pain_Scale), Combined$sPAIN)


##--------------------
##  44. IADLC__scale  
##--------------------

Combined <- Combined %>% mutate(validiadlc = case_when(
  iG1ab %in% c(0,1,2,3,4,5,6) & 
    iG1bb %in% c(0,1,2,3,4,5,6) & 
    iG1cb %in% c(0,1,2,3,4,5,6) & 
    iG1db %in% c(0,1,2,3,4,5,6) & 
    iG1eb %in% c(0,1,2,3,4,5,6) & 
    iG1fb %in% c(0,1,2,3,4,5,6) & 
    iG1gb %in% c(0,1,2,3,4,5,6) & 
    iG1hb %in% c(0,1,2,3,4,5,6) & 
    iG1nb %in% c(0,1,2,3,4,5,6) & 
    iG1ob %in% c(0,1,2,3,4,5,6) & 
    iZZ1ab %in% c(0,1,2,3,4,5,6) &
    Age >= 0 & Age <= 130 ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(IADLC__scale = case_when(validiadlc == 1 ~ case_when(
  Age >= 12 & Age < 19 ~ 
    iG1ab + iG1bb + iG1cb + iG1db + iG1eb + iG1fb + iG1gb + iG1hb + iG1nb + iG1ob
  + iZZ1ab)))

##-----------------------------------------------
##  sCYPS PARENTING STRENGTHS (for RICHY calc) -- 
##-----------------------------------------------

Combined <- Combined %>% mutate(validps = case_when(
  iP15a %in% c(0,1,2) &
    iP15b %in% c(0,1,2) &
    iP15c %in% c(0,1,2) &
    iP15d %in% c(0,1,2) &
    iP15e %in% c(0,1,2) &
    iP15f %in% c(0,1,2) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(PARENTING__scale = case_when(validps == 1 ~
                                                               (case_when(iP15a == 0 ~ + 2, iP15a == 1 ~ + 1, iP15a == 2 ~ + 0)) +
                                                               (case_when(iP15b == 0 ~ + 2, iP15b == 1 ~ + 1, iP15b == 2 ~ + 0)) +
                                                               (case_when(iP15c == 0 ~ + 2, iP15c == 1 ~ + 1, iP15c == 2 ~ + 0)) +
                                                               (case_when(iP15d == 0 ~ + 2, iP15d == 1 ~ + 1, iP15d == 2 ~ + 0)) +
                                                               (case_when(iP15e == 0 ~ + 2, iP15e == 1 ~ + 1, iP15e == 2 ~ + 0)) +
                                                               (case_when(iP15f == 0 ~ + 2, iP15f == 1 ~ + 1, iP15f == 2 ~ + 0))))
##--------------------
##  CAREDIS__scale  Caregiver Distress Algorithm --
##--------------------

Combined <- Combined %>% mutate(ProactiveItem = 
                      (case_when(iE15a== 0 ~ + 0, iE15a %in% c(1,2,3,4,5) ~ + 1)) +
                      (case_when(iE15d== 0 ~ + 0, iE15d %in% c(1,2,3,4,5) ~ + 1)) + 
                      (case_when(iE15e== 0 ~ + 0, iE15e %in% c(1,2,3,4,5) ~ + 1)) + 
                      (case_when(iX16c== 0 ~ + 0, iX16c %in% c(1,2,3,4,5) ~ + 1)) +        
                      (case_when(iX2a== 0 ~ + 0, iX2a %in% c(1,2,3,4,5) ~ + 1)) +           
                      (case_when(iX2b== 0 ~ + 0, iX2b %in% c(1,2,3,4,5) ~ + 1)) +           
                      (case_when(iX2c== 0 ~ + 0, iX2c %in% c(1,2,3,4,5) ~ + 1)))

Combined <- Combined %>% mutate(devMHsubst_Issues = 
                      (case_when(iY7a & iY1ap == 0 ~ 0, TRUE ~ 0) +
                         case_when(iY7a == 1 ~ 1, TRUE ~ 0) +
                         case_when(iY1ap %in% c(1,2,3,4,5) ~ 1)))

Combined <- Combined %>% mutate(familyfunction = 
                      (case_when(iF8a == 1 ~ 1, TRUE ~ 0) +
                         case_when(iF8a == 0 ~  0, TRUE ~ 0) + 
                         case_when(iP19d | iP19e == 1 ~  1, TRUE ~ 0) + 
                         case_when(iP19d & iP19e == 0 ~  0, TRUE ~ 0) + 
                         case_when(iY7a & iY1ap == 0 ~  0, TRUE ~ 0) + 
                         case_when(iY7a == 1 | iY1ap %in% c(1,2,3,4,5) ~  1, TRUE ~ 0) + 
                         case_when(iY7b == 1 ~  1, TRUE ~ 0) + 
                         case_when(iY7b == 0 ~  0, TRUE ~ 0)))

Combined <- Combined %>% mutate(validiccared = case_when(
  iJ5a %in% c(0,1,2,3) & 
    iE1zzz %in% c(0,1,2,3,4) & 
    iE1ccc %in% c(0,1,2,3,4) & 
    iY9 %in% c(0,1) & 
    iX1a %in% c(0,1,2,3,4,5) & 
    iE1hhh %in% c(0,1,2,3,4) & 
    iP19a %in% c(0,1,8) & 
    iE1tt %in% c(0,1,2,3,4) & 
    iY1au %in% c(0,1,2,3,4,5) & 
    iE1ss %in% c(0,1,2,3,4) & 
    iE6 %in% c(0,1,2,3,4,5) & 
    iC9b %in% c(0,1,8) & 
    iE18a %in% c(0,1) &
    PARENTING__scale %in% c(0:12) & 
    PSS__scale %in% c(0:12) & 
    DABS__scale %in% c(0:20) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(CAREDIS__scale = case_when(validiccared == 1 ~ 
                                  (case_when(ProactiveItem == 0 ~ case_when(
                                            PARENTING__scale == 12 ~ case_when(
                                              ABS__scale == 0 ~ case_when(
                                                devMHsubst_Issues == 0 ~ case_when(
                                                  iE1ccc == 0 ~ 1, iE1ccc %in% c(1,2,3,4) ~ 2),
                                                devMHsubst_Issues == 1 ~ 2),
                                              ABS__scale >= 1 ~ case_when(
                                                iC9a == 0 ~ case_when(
                                                  iY9 == 0 ~ 1, iY9 == 1 ~ 2),
                                                iC9a %in% c(1,8) ~ case_when(
                                                  iX1a == 0 ~ 2, iX1a %in% c(1,2,3,4,5) ~ 3))),
                                            PARENTING__scale %in% c(10,11) ~ case_when(
                                              devMHsubst_Issues == 0 ~ 1, 
                                              devMHsubst_Issues == 1 ~ 3),
                                            PARENTING__scale %in% c(0,1,2,3,4,5,6,7,8,9) ~ case_when(
                                              iJ5a == 0 ~ case_when(
                                                iE1zzz == 0 ~ 2, iE1zzz %in% c(1,2,3,4) ~ 3),
                                              iJ5a %in% c(1,2,3) ~ 4)), TRUE ~ 0) +
                                             
                                             case_when(ProactiveItem %in% c(1,2) ~ case_when(
                                               familyfunction == 0 ~ case_when(
                                                 sCYDABS %in% c(0,1,2,3,4,5,6,7) ~ case_when(
                                                   iY1au == 0 ~ 1, iY1au %in% c(1,2,3,4,5) ~ 3),
                                                 sCYDABS >= 8 ~ case_when(
                                                   iE1ss == 0 ~ 1, iE1ss %in% c(1,2,3,4) ~ 3)),
                                               familyfunction == 1 ~ case_when(
                                                 iE1hhh == 0 ~ case_when(
                                                   iY9 == 0 ~ 2, iY9 == 1 ~ 4),
                                                 iE1hhh %in% c(1,2,3,4) ~ 4),
                                               familyfunction >= 2 ~ case_when(
                                                 iP19a == 0 ~ case_when(
                                                   iE1ttt == 0 ~ 2, iE1ttt %in% c(1,2,3,4) ~ 3),
                                                 iP19a == 1 ~ 4)), TRUE ~ 0) + 
                                             
                                             case_when(ProactiveItem %in% c(3,4,5,6,7) ~ case_when(
                                               PARENTING__scale %in% c(7,8,9,10,11,12) ~ case_when(
                                                 iE6 %in% c(1,2,3,4,5) ~ 5, 
                                                 iE6 == 0 ~ case_when(
                                                   devMHsubst_Issues == 0 ~ case_when(
                                                     iX1a %in% c(0,1) ~ case_when(
                                                       sCYDABS %in% c(0,1,2,3,4,5,6,7,8,9,10) ~ 2, 
                                                       sCYDABS >= 11 ~ 4),
                                                     iX1a %in% c(2,3,4,5) ~ 4),
                                                   devMHsubst_Issues == 1 ~ case_when(
                                                     iE18a == 1 ~ 3, 
                                                     iE18a == 0 ~ 5))),
                                               PARENTING__scale %in% c(0,1,2,3,4,5,6) ~ case_when(
                                                 iC9b == 0 ~ 4, iC9b %in% c(1,8) ~ 5)), TRUE ~ 0))))

##-----------------
##  COMM__scale  --
##-----------------

Combined <- Combined %>% mutate(validcomm = case_when(
  iD1 %in% c(0,1,2,3,4) & 
    iD2 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(COMM__scale = case_when(validcomm == 1 ~ iD1 + iD2))

##--------------------------------------------
##   CAS / Psychiatrist / Family Engagment  --
##--------------------------------------------

Combined <- Combined %>%
  mutate(CAS = case_when(
    is.na(iN16w)  ~ NA,
    iN16w > 0 ~ "Involved"
  ))

Combined <- Combined %>%
  mutate(Psychiatrist = case_when(
    is.na(iN16o)  ~ NA,
    iN16w > 0 ~ "Involved"
  ))

Combined <- Combined %>%
  mutate(FamilyEngaged = case_when(
    is.na(iZ10)  ~ NA,
    iN16w > 0 ~ "Involved"
  ))

##------------------------
##   Physical Activity  --
##------------------------

Combined <- Combined %>% 
  mutate(cCYMHPA = case_when(
  iG6a %in% c(0,1) ~ 1, TRUE ~ 0))


Combined$'Physical Activity' <-
  ifelse(is.na(Combined$cCYMHPA),
    NA,
      ifelse(
        Combined$cCYMHPA == 1,
        "Triggered",
        ifelse(Combined$cCYMHPA == 0,
            "Not Triggered",
            NA
          )))

##------------------------
##  Attachment          --
##------------------------

 Combined <-  Combined %>% mutate(validattach = case_when(
  iB33 %in% c(0,1,2) & 
    iB34a %in% c(0,1,2,3) & 
    iB34b %in% c(0,1,2,3) & 
    iB35 %in% c(0,1) &
    iP16a %in% c(0,1,8) & 
    iP16b %in% c(0,1,8) & 
    iY1am %in% c(0,1,2,3,4,5) & 
    iY1an %in% c(0,1,2,3,4,5) & 
    iY1ao %in% c(0,1,2,3,4,5) & 
    iY1ar %in% c(0,1,2,3,4,5) & 
    iY1at %in% c(0,1,2,3,4,5) & 
    iY1au %in% c(0,1,2,3,4,5) & 
    iY7a %in% c(0,1) & 
    T_age <= 12 ~ 1, TRUE ~ 0))

 Combined <-  Combined %>% mutate(xcymhattach1 = case_when(validattach == 1 ~ 
                                               (case_when(iB33 == 2 ~ + 1, TRUE ~ 0) +
                                                  case_when(iB34a %in% c(1,2) ~ + 1, TRUE ~ 0) +
                                                  case_when(iB34b %in% c(1,2) ~ + 1, TRUE ~ 0) +
                                                  case_when(iB34c %in% c(1,2) ~ + 1, TRUE ~ 0) +
                                                  case_when(iB35 == 1 ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1am %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1an %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1ao %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1ap %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1ar %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1at %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY1au %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                  case_when(iY7a == 1 ~ + 1, TRUE ~ 0))))

 Combined <-  Combined %>% mutate(xcymhattach2 = case_when(validattach == 1 ~ 
                                               (case_when(iP16a == 1 ~ + 1, TRUE ~ 0) +
                                                  case_when(iP16b ==1 ~ + 1, TRUE ~ 0) +
                                                  case_when(iP16c == 1 ~ + 1, TRUE ~ 0))))
 
  Combined <-  Combined %>% mutate(Attachment = case_when( 
   xcymhattach1 >= 1 & xcymhattach2 >= 1 ~ 1, 
   xcymhattach1 == 0 | xcymhattach2 == 0 ~ 0))

  
  ##################################################################
  ##                         Caffeine Use                         ##
  ##################################################################
  
 Combined <-  Combined %>% mutate('Caffeine Use' = case_when(
    iW10b %in% c(2,3) ~ 1, 
    iW10b < 2 ~ 0))

  Combined$'Caffeine Use'[Combined$'Caffeine Use'== 1] <- "Triggered"
  Combined$'Caffeine Use'[Combined$'Caffeine Use'== 0] <- "Not Triggered"


  
  #################################################################
  ##                      Caregiver Distress                      ##
  #################################################################

   Combined <-  Combined %>% mutate(xcymhcaredist = case_when(iB32a | iB32b == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iP19g == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iQ4 == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1ap %in% c(2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY7a == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iY8a == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iY8b == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iY9 == 1 ~ + 1, TRUE ~ 0))
  
 Combined <- Combined %>% mutate('Caregiver Distress' = case_when(
    xcymhcaredist >= 2 ~ 1, TRUE ~ 0))
  
 Combined$'Caregiver Distress'[Combined$'Caregiver Distress'== 1] <- "Triggered"
 Combined$'Caregiver Distress'[Combined$'Caregiver Distress'== 0] <- "Not Triggered"
 
 #################################################################
 ##                        Communication    : cCYMHCOMM                    ##
 #################################################################
 
 
  Combined <-  Combined %>% mutate('Communication' = case_when(
   iD1 %in% c(2,3,4) | iD2 %in% c(2,3,4) ~ 1, 
   iD1 < 2 & iD2 < 2 ~ 0))
 
 Combined$'Caregiver Distress'[Combined$'Caregiver Distress'== 1] <- "Triggered"
 Combined$'Caregiver Distress'[Combined$'Caregiver Distress'== 0] <- "Not Triggered"
 
 #################################################################
 ##                    Control Interventions                    ##
 #################################################################
 
  Combined <-  Combined %>% mutate(validctrlint = case_when(
   iE1nnn %in% c(0,1,2,3,4) & 
     iM7 %in% c(0,1,2,3,4,5,6,7,8,9) & 
     iN6c %in% c(0,1,2,3,4,5) & 
     iX1a %in% c(0,1,2,3,4,5) & 
     iX2a %in% c(0,1,2,3,4,5) & 
     iX4 %in% c(0,1,2) & 
     iAA1a %in% c(0,1,2,3,4,5) & 
     iAA1c %in% c(0,1,2,3,4,5) & 
     iAA1f %in% c(0,1,2,3,4,5) &
     sCYABS %in% c(0:12) & 
     sCYPSS %in% c(0:12) ~ 1, TRUE ~ 0))
 
  Combined <-  Combined %>% mutate(xcymhctrlint1 = case_when(validctrlint == 1 ~ 
                                                 (case_when(iM7 %in% c(1,2,3,4,5,6,7,8,9) ~ + 1, TRUE ~ 0) +
                                                    case_when(iN6c %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                    case_when(iAA1a %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                    case_when(iAA1c %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) + 
                                                    case_when(iAA1f %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0))))
 
  Combined <-  Combined %>% mutate(xcymhctrlint2 = case_when(validctrlint == 1 ~ 
                                                 (case_when(iE1nnn %in% c(2,3,4) ~ + 1, TRUE ~ 0) + 
                                                    case_when(iX1a == 5 ~ + 1, TRUE ~ 0) +
                                                    case_when(iX2a == 5 ~ + 1, TRUE ~ 0) + 
                                                    case_when(iX4 == 2 ~ + 1, TRUE ~ 0) + 
                                                    case_when(sCYABS >= 5 ~ + 1, TRUE ~ 0) +
                                                    case_when(sCYPSS >= 8 ~ + 1, TRUE ~ 0))))
  
  Combined <- Combined %>% mutate('Control Interventions'= case_when(validctrlint == 1 ~ 
                                                 (case_when(xcymhctrlint1 & xcymhctrlint2 >= 1 ~ 2, TRUE ~ 0) +
                                                    case_when(xcymhctrlint1 >= 1 & xcymhctrlint2 == 0 ~ 1, TRUE ~ 0)))) 
  
  Combined$'Control Interventions'[Combined$'Control Interventions'== 1] <- "Triggered to minimize the need for control interventions (young persons not in a psychiatric emergency situation)"
  Combined$'Control Interventions'[Combined$'Control Interventions'== 0] <- "Not Triggered"
  
  ##################################################################
  ##                    Criminality Prevention                    ##
  ##################################################################
  
  
   Combined <-  Combined %>%
    mutate('Criminality Prevention' = case_when(
    iE1dddd %in% c(1,2,3,4) | iE15a %in% c(2,3,4,5) | iX2a %in% c(2,3,4,5) ~ 1, 
    iE1dddd < 1 & iE15a < 2 & iX2a < 2 ~ 0))

  Combined$'Criminality Prevention'[Combined$'Criminality Prevention'== 1] <- "Triggered"
  Combined$'Criminality Prevention'[Combined$'Criminality Prevention'== 0] <- "Not Triggered"
  
  
  #################################################################
  ##                          Education: cCYMHEDU                         
  #################################################################
  
   Combined <-  Combined %>% mutate(xiBB5a = case_when(
    iBB4c %in% c(2,3) ~ as.numeric(iBB5a), 
    iBB4c == 1 ~ 0))
  
   Combined <-  Combined %>% mutate(xiBB5b = case_when(
    iBB4c %in% c(2,3) ~ as.numeric(iBB5b), 
    iBB4c == 1 ~ 0))
  
   Combined <-  Combined %>% mutate(xiBB5e = case_when(
    iBB4c %in% c(2,3) ~ as.numeric(iBB5e), 
    iBB4c == 1 ~ 0))
  
   Combined <-  Combined %>% mutate(xiBB5f = case_when(
    iBB4c %in% c(2,3) ~ as.numeric(iBB5f), 
    iBB4c == 1 ~ 0))
  
   Combined <-  Combined %>% mutate(xiBB10 = case_when(
    iBB4c %in% c(2,3) ~ as.numeric(iBB10), 
    iBB4c == 1 ~ 0))
  
   Combined <-  Combined %>% mutate(xiBB11a = case_when(
    iBB4c %in% c(1,2,3) ~ as.numeric(iBB11a)))
  
   Combined <-  Combined %>% mutate(xiBB11b = case_when(
    iBB4c %in% c(1,2,3) ~ as.numeric(iBB11b)))
  
   Combined <-  Combined %>% mutate(xiBB14a = case_when(
    iBB4c %in% c(1,2,3) ~ as.numeric(iBB14a)))
   
    Combined <-  Combined %>% mutate(validedu = case_when(
     iBB2 %in% c(0,1,2,3,8) &
       xiBB5a %in% c(0,1,8) & 
       xiBB5b %in% c(0,1,8) & 
       xiBB5e %in% c(0,1,8) & 
       xiBB5f %in% c(0,1,8) &
       xiBB10 %in% c(0,1,2,3) & 
       xiBB11a %in% c(0,1) & 
       xiBB11b %in% c(0,1) & 
       xiBB14a %in% c(0,1,2,3,8) ~ 1, TRUE ~ 0))
   
    Combined <-  Combined %>% mutate(xcymhedu1 = case_when(validedu == 1 ~ 
                                               (case_when(xiBB5a == 1 ~ + 1, TRUE ~ 0) +
                                                  case_when(xiBB5b == 1 ~ + 1, TRUE ~ 0) +
                                                  case_when(xiBB5e == 1 ~ + 1, TRUE ~ 0) + 
                                                  case_when(xiBB5f == 1 ~ + 1, TRUE ~ 0) + 
                                                  case_when(xiBB10 %in% c(1,3) ~ + 1, TRUE ~ 0) +
                                                  case_when(xiBB14a %in% c(2,3) ~ + 1, TRUE ~ 0))))
   
    Combined <-  Combined %>% mutate(xcymhedu2 = case_when(validedu == 1 ~ 
                                               (case_when(xiBB11a | xiBB11b == 1 ~ + 1, TRUE ~ 0) + 
                                                  case_when(iBB2 != 0 & iBB2 != 1 & iBB2 != 2 & iBB2 != 3 ~ + 1, TRUE ~ 0)))) 
   
   
     Combined <-  Combined %>% mutate(Education = case_when(validedu == 1 ~ case_when(
      xcymhedu1 >= 1 ~ "Triggered due to risk of dropping out of school",  
      xcymhedu1 == 0 ~ case_when(
        xcymhedu2 == 2 ~ "Triggered due to current disrupted education", 
        xcymhedu2 < 2 ~ "Not Triggered"))))
   
##################################################################
##                  Hazardous Fire Involvement                  ##
##################################################################

 Combined <-  Combined %>% mutate(validfire = case_when(
  iC1d %in% c(0,1,2,3,4,5) & 
    iE1oo %in% c(0,1,2,3,4) & 
    iE1mmm %in% c(0,1,2,3,4) & 
    iE1nnn %in% c(0,1,2,3,4) & 
    iE1ooo %in% c(0,1,2,3,4) & 
    iP15e %in% c(0,1,2,8) & 
    iX18 %in% c(0,1,2,3,4,5) & 
    iY1am %in% c(0,1,2,3,4,5) & 
    iY1an %in% c(0,1,2,3,4,5) & 
    iY1ao %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))

 Combined <- Combined %>% mutate(xcymhfire = case_when(validfire == 1 ~ case_when(
  iC1d %in% c(3,4) ~ + 1, 
  iE1oo %in% c(2,3,4) ~ + 1,
  iE1mmm %in% c(2,3,4) ~ + 1, 
  iE1nnn %in% c(2,3,4) ~ + 1, 
  iE1ooo %in% c(2,3,4) ~ + 1, 
  iP15e %in% c(2,8) ~ + 1, 
  iY1am %in% c(1,2,3,4,5) | iY1an %in% c(1,2,3,4,5) | 
    iY1ao %in% c(1,2,3,4,5) ~ + 1)))
 
  Combined <-  Combined %>% mutate(`Hazardous Fire Involvement` = case_when(validfire == 1 ~ case_when(
   iX18 %in% c(2,3,4,5) ~ case_when(
     xcymhfire >= 2 ~ "Triggered at high risk", 
     xcymhfire == 1 ~ "Triggered at moderate risk", 
     xcymhfire == 0 ~ "Triggered at low risk"), 
   iX18 < 2 ~ "Not Triggered")))

  ##################################################################
  ##                           Gambling                           ##
  ##################################################################
  
   Combined <-  Combined %>% mutate(validgamb = case_when(
    iW8 %in% c(0,1) &
      cihiU3 == 1 ~ 1, TRUE ~ 0))
   
  Combined <-  Combined %>% mutate(Gambling = case_when(validgamb == 1 ~ case_when(
    iW8 == 1 ~ "Triggered", 
    iW8 < 1 ~ "Not Triggered")))
  
  ##################################################################
  ##                        Harm to Others                        ##
  ##################################################################
  
  Combined <- Combined %>% mutate(validharmoth = case_when(
    iE1oo %in% c(0,1,2,3,4) & 
      sCYRHO %in% c(0,1,2,3,4,5,6) ~ 1, TRUE ~ 0))
 
   Combined <- Combined %>% mutate('Harm to Others' = case_when(validharmoth == 1 ~ case_when(
    sCYRHO %in% c(5,6) ~ 2, 
    sCYRHO %in% c(3,4) ~ case_when(
      iE1oo %in% c(2,3,4) ~ 2, 
      iE1oo < 2 ~ 1),
    sCYRHO <= 2 ~ 0)))
   
   Combined$'Harm to Others'[Combined$'Harm to Others' == 2] <- "Triggered due to high risk of harm to others"
   Combined$'Harm to Others'[Combined$'Harm to Others' == 1] <- "Triggered due to moderate risk of harm to others"
   Combined$'Harm to Others'[Combined$'Harm to Others' == 0] <- "Not Triggered"

   
   ##################################################################
   ##                       Informal Support                       ##
   ##################################################################
   
   Combined <- Combined %>% mutate(xcymhinfsupp =  case_when(iP18a %in% c(2,3) ~ + 1, TRUE ~ 0) +
                                                     case_when(iP18b == 3 ~ + 1, TRUE ~ 0) +
                                                     case_when(iP18c == 3 ~ + 1, TRUE ~ 0) +
                                                     case_when(iP18d == 3 ~ + 1, TRUE ~ 0) +
                                                     case_when(iP18e == 3 ~ + 1, TRUE ~ 0))
   Combined <- Combined %>% mutate('Informal Support' = case_when(xcymhinfsupp >= 2 ~ 1, TRUE ~ 0) + 
                                                     case_when(xcymhinfsupp < 2 ~ 0, TRUE ~ 0))
   
   Combined$'Informal Support'[Combined$'Informal Support' == 1] <- "Triggered"
   Combined$'Informal Support'[Combined$'Informal Support' == 0] <- "Not Triggered"

   
   ##################################################################
   ##                    Interpersonal Conflict                    ##
   ##################################################################
   
   Combined <- Combined %>% mutate(xiBB5e = (case_when(
     iBB4c %in% c(0,1) ~ 0)+ 
       case_when(iBB4c %in% c(2,3) ~ as.numeric(iBB5e), TRUE ~ 0)))
   
   Combined <- Combined %>% mutate(validipcon = case_when(
     iP19a %in% c(0,1,8) &
       iP19b %in% c(0,1,8) &
       iP19c %in% c(0,1,8) &
       iP19d %in% c(0,1,8) &
       iP19e %in% c(0,1,8) &
       iP19f %in% c(0,1,8) &
       xiBB5e %in% c(0,1,2,3) & 
       iBB5e %in% c(0,1,8) ~ 1, TRUE ~ 0))
   
   Combined <- Combined %>% mutate(xcymhipcon = case_when(validipcon == 1 ~ 
                                                (case_when(iP19a | iP19d == 1 ~ + 1, TRUE ~ 0) +
                                                   case_when(iP19b | iP19e | iP19f == 1 ~ + 1, TRUE ~ 0) +
                                                   case_when(iP19c | xiBB5e == 1 ~ + 1, TRUE ~ 0))))
   
   Combined <- Combined %>% mutate('Interpersonal Conflict' = case_when(validipcon == 1 ~ 
                                                (case_when(xcymhipcon >= 2 ~ 2, TRUE ~ 0) +
                                                   case_when(xcymhipcon == 1 ~ 1, TRUE ~ 0) +
                                                   case_when(xcymhipcon == 0 ~ 0, TRUE ~ 0))))
   
   Combined$'Interpersonal Conflict'[Combined$'Interpersonal Conflict' == 1] <- "Triggered to reduce conflict within a specific domain"
   Combined$'Interpersonal Conflict'[Combined$'Interpersonal Conflict' == 0] <- "Not Triggered"
   Combined$'Interpersonal Conflict'[Combined$'Interpersonal Conflict' == 2] <- "Triggered to reduce widespread conflict"
   
   #################################################################
   ##                         Life Skills                         ##
   #################################################################
   
   Combined <- Combined %>% mutate(xiBB5e = (case_when(
     iBB4c %in% c(0,1) ~ 0)+ 
       case_when(iBB4c %in% c(2,3) ~ as.numeric(iBB5e), TRUE ~ 0)))
   
   Combined <- Combined %>% mutate(validipcon = case_when(
     iP19a %in% c(0,1,8) &
       iP19b %in% c(0,1,8) &
       iP19c %in% c(0,1,8) &
       iP19d %in% c(0,1,8) &
       iP19e %in% c(0,1,8) &
       iP19f %in% c(0,1,8) &
       xiBB5e %in% c(0,1,2,3) & 
       iBB5e %in% c(0,1,8) ~ 1, TRUE ~ 0))
   
   Combined <- Combined %>% mutate(xcymhipcon = case_when(validipcon == 1 ~ 
                                                (case_when(iP19a | iP19d == 1 ~ + 1, TRUE ~ 0) +
                                                   case_when(iP19b | iP19e | iP19f == 1 ~ + 1, TRUE ~ 0) +
                                                   case_when(iP19c | xiBB5e == 1 ~ + 1, TRUE ~ 0))))
   
   Combined <- Combined %>% mutate('Life Skills' = case_when(validipcon == 1 ~ 
                                                (case_when(xcymhipcon >= 2 ~ 2, TRUE ~ 0) +
                                                   case_when(xcymhipcon == 1 ~ 1, TRUE ~ 0) +
                                                   case_when(xcymhipcon == 0 ~ 0, TRUE ~ 0))))
   
   Combined$'Life Skills'[Combined$'Life Skills' == 0] <- "Not Triggered"
   Combined$'Life Skills'[Combined$'Life Skills' == 1] <- "Triggered for IADL assistance"
   Combined$'Life Skills'[Combined$'Life Skills' == 2] <- "Triggered for ADL assistance"
   
   
   ##################################################################
   ##                     Medication Adherence                     ##
   ##################################################################
   
   Combined <- Combined %>% mutate('Medication Adherence' = case_when(
     iM3 == 2 | iM4 == 1 | iM12 == 0 ~ 1, 
     iM3 != 2 & iM4 != 1 & iM12 != 0 ~ 0))
   
   Combined$'Medication Adherence'[Combined$'Medication Adherence' == 1] <- "Triggered"
   Combined$'Medication Adherence'[Combined$'Medication Adherence' == 0] <- "Not Triggered"

   
   #################################################################
   ##                      Medication Review                      ##
   #################################################################
   
   Combined <- Combined %>% mutate(xcymhmedrev = case_when(
     iJ2c %in% c(2,3,4) ~ + 1, 
     iJ2k %in% c(2,3,4) | iJ2y %in% c(2,3,4) ~ + 1, 
     iJ2n %in% c(2,3,4) | iJ2x %in% c(2,3,4) ~ + 1, 
     iJ2dd %in% c(2,3,4) ~ + 1, 
     iJ2gg %in% c(2,3,4) ~ + 1, 
     iJ2ll %in% c(2,3,4) ~ + 1, 
     iJ3 %in% c(1,2,3) ~ + 1, 
     iJ9a == 1 | iJ9b == 1 | iJ9c == 1 | iJ9d == 1 | iJ9e == 1 | 
       iJ9f == 1 | iJ9g == 1 ~ + 1, 
     iR9 == 1 ~ + 1))
   
   Combined <- Combined %>% mutate('Medication Review' = case_when(
     iM5 == 1 ~ 1, 
     iM5 != 1 ~ case_when(
       iM3 %in% c(0,1) & xcymhmedrev >= 1 ~ 1, 
       iM3 != 0 | iM3 != 1 | xcymhmedrev == 0 ~ 0)))
   
   Combined$'Medication Review'[Combined$'Medication Review' == 1] <- "Triggered"
   Combined$'Medication Review'[Combined$'Medication Review' == 0] <- "Not Triggered"

   
   ##################################################################
   ##                          Parenting2                          ##
   ##################################################################
   
   Combined <- Combined %>% mutate(xcymhparent = case_when(iP15a == 2 ~ + 1, TRUE ~ 0) +
                                                    case_when(iP15b == 2 ~ + 1, TRUE ~ 0) + 
                                                    case_when(iP15c == 2 ~ + 1, TRUE ~ 0) +
                                                    case_when(iP15d == 2 ~ + 1, TRUE ~ 0) +
                                                    case_when(iP15e == 2 ~ + 1, TRUE ~ 0) + 
                                                    case_when(iP15f == 2 ~ + 1, TRUE ~ 0))
   
   Combined <- Combined %>% mutate('Parenting2' = case_when(xcymhparent >= 2 ~ 1, TRUE ~ 0) +
                                                    case_when(xcymhparent < 2 ~ 0, TRUE ~ 0))
   Combined$'Parenting2'[Combined$'Parenting2' == 1] <- "Triggered"
   Combined$'Parenting2'[Combined$'Parenting2' == 0] <- "Not Triggered"
   
   
   #################################################################
   ##                   Readmission (cCYMHREAD)                   ##
   #################################################################
   
   Combined <- Combined %>% mutate(validread = case_when(
     iB12 %in% c(0,1) & 
       iB33 %in% c(0,1,2) & 
       iB38a %in% c(0,1) & 
       iB38b %in% c(0,1) & 
       iE5 %in% c(0,1,2,3) & 
       iP19h %in% c(0,1,8) & 
       iV1 %in% c(0,1,2) & 
       sCYPSS >= 0 & sCYPSS <= 12 & 
       sCYRHO >= 0 & sCYPSS <= 6 & 
       sCYSOS >= 0 & sCYPSS <= 6 ~ 1, TRUE ~ 0))
   
   Combined <- Combined %>% mutate(xcymhread1 = case_when(validread == 1 ~ 
                                                (case_when(iB12 == 1 ~ + 1, TRUE ~ 0) +
                                                   case_when(iB33 == 2 ~ + 1, TRUE ~ 0) +
                                                   case_when(iB38a == 1 ~ + 1, TRUE ~ 0) +
                                                   case_when(iB38b == 1 ~ + 1, TRUE ~ 0) + 
                                                   case_when(iP19h == 1 ~ + 1, TRUE ~ 0) +
                                                   case_when(sCYPSS >= 2 ~ + 1, TRUE ~ 0) +
                                                   case_when(sCYRHO >= 3 ~ + 1, TRUE ~ 0) +
                                                   case_when(sCYSOS >= 3 ~ + 1, TRUE ~ 0))))
   
   Combined <- Combined %>% mutate(xcymhread2 = case_when(validread == 1 ~ 
                                                (case_when(iE5 %in% c(2,3) ~  1, TRUE ~ 0) +
                                                   case_when(iV1 == 2 ~ 1, TRUE ~ 0) +
                                                   case_when(iV1 == 1 ~ case_when(xcymhread1 >= 1 ~ 1, TRUE ~ 0), TRUE ~ 0)))) 
   
   
   Combined <- Combined %>% mutate(Readmission = case_when(validread == 1 ~ 
                                               (case_when(xcymhread2 >= 1 ~ 1, TRUE ~ 0) +
                                                  case_when(xcymhread2 == 0 ~ 0, TRUE ~ 0))))
   
   Combined$Readmission[Combined$Readmission == 1] <- "Triggered"
   Combined$Readmission[Combined$Readmission == 0] <- "Not Triggered"
   
   
   ##################################################################
   ##        Suicidality and Purposeful Self Harm: cCYMHSSH        ##
   ##################################################################
   
   Combined <- Combined %>% mutate('Suicidality and Purposeful Self-Harm' = case_when(
     sCYSOS %in% c(5,6) ~ 2, 
     sCYSOS %in% c(3,4) ~ case_when(
       iE1oo >= 2 ~ 2, 
       iE1oo < 2 ~ 1),
     sCYSOS < 3 ~ 0))
   
   Combined$'Suicidality and Purposeful Self-Harm'[Combined$'Suicidality and Purposeful Self-Harm' == 0] <- "Not Triggered"
   Combined$'Suicidality and Purposeful Self-Harm'[Combined$'Suicidality and Purposeful Self-Harm' == 1] <- "Triggered due to moderate risk of harm to self"
   Combined$'Suicidality and Purposeful Self-Harm'[Combined$'Suicidality and Purposeful Self-Harm' == 2] <- "Triggered due to high risk of harm to self" 

   
   ##################################################################
   ##                  Sexual Behaviour: cCYMHSEX                  ##
   ##################################################################
   
   Combined <- Combined %>% mutate(validsex = case_when( 
     iE3o %in% c(0,1,2,3,4) & # inapprop. sexual behav.
       iE19a %in% c(0,1) & # inapprop. sexual knowledge
       iW27 %in% c(0,1) ~ 1, TRUE ~ 0)) # family concern about risky sexual beh
   
   #iJ10a and iX3 are from the Adolescent Supplement only. The CAP can be calculated without these.
   
   Combined <- Combined %>% mutate('Sexual Behaviour' = case_when(validsex == 1 ~ case_when(
     (iE3o %in% c(2,3,4) | iE19a == 1 | iJ10a == 1 | iX3 == 1 | iW27 == 1) ~ 1, TRUE ~ 0)))
 
   Combined$'Sexual Behaviour'[Combined$'Sexual Behaviour' == 1] <- "Triggered"
   Combined$'Sexual Behaviour'[Combined$'Sexual Behaviour' == 0] <- "Not Triggered"
   
   
   #################################################################
   ##                      Sleep Disturbance                      ##
   #################################################################
   
   Combined <- Combined %>% mutate(validsleep = case_when(
     iE1lll %in% c(0,1,2,3,4) &
       iE1yyy %in% c(0,1,2,3,4) & 
       iE1zzz %in% c(0,1,2,3,4) & 
       iE1aaaa %in% c(0,1,2,3,4) & 
       iE1bbbb %in% c(0,1,2,3,4) & 
       iJ4 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))
   
   Combined <- Combined %>% mutate(xcymhsleep = case_when(validsleep == 1 ~ 
                                                (case_when(iE1lll %in% c(2,3,4) ~ + 1, TRUE ~ 0) +
                                                   case_when(iE1yyy %in% c(2,3,4) ~ + 1, TRUE ~ 0) +
                                                   case_when(iE1zzz %in% c(2,3,4) ~ + 1, TRUE ~ 0) + 
                                                   case_when(iE1aaaa %in% c(2,3,4) ~ + 1, TRUE ~ 0) +
                                                   case_when(iE1bbbb %in% c(2,3,4) ~ + 1, TRUE ~ 0) +
                                                   case_when(iJ4 %in% c(1,2,3,4) ~ + 1, TRUE ~ 0))))
  
   Combined <- Combined %>% mutate('Sleep Disturbance' = case_when(validsleep == 1 ~ case_when(
     xcymhsleep >= 2 ~ "Triggered", TRUE ~ "Not Triggered")))
   
   
   ##################################################################
   ##          Social and Peer Relationships: cCYMHSOCREL          ##
   ##################################################################
   
   Combined <- Combined %>% mutate(validsocrel = case_when(
     iE1qqq %in% c(0,1,2,4) & 
       iE1ttt %in% c(0,1,2,3,4) & 
       iE14d %in% c(0,1) & 
       iE15e %in% c(0,1,2,3,4,5) & 
       iF13 %in% c(0,1) & 
       iF15e %in% c(0,1) & 
       iF15f %in% c(0,1) & 
       iP8 %in% c(0,1) & 
       iY1aq %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))
   
   Combined <- Combined %>% mutate(xcymhsocrel1 = case_when(validsocrel == 1 ~ 
                                                  (case_when(iE1qqq %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE1ttt %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE14d == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iF15e == 0 ~ + 1, TRUE ~ 0) +
                                                     case_when(iF15f == 0 ~ + 1, TRUE ~ 0) +
                                                     case_when(iP8 == 0 ~ + 1, TRUE ~ 0) + 
                                                     case_when(iY1aq %in% c(2,3,4,5) ~ + 1, TRUE ~ 0))))
   
   Combined <- Combined %>% mutate(xcymhsocrel2 = case_when(validsocrel == 1 ~ 
                                                  (case_when(iE15e %in% c(2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iF13 == 1 ~ + 1, TRUE ~ 0)))) 
   
   Combined <- Combined %>% mutate('Social and Peer Relationships' = case_when(validsocrel == 1 ~ 
                                                 (case_when(xcymhsocrel1 >= 2 ~ 2, TRUE ~ 0) +
                                                    case_when(xcymhsocrel1 < 2 ~ 
                                                                (case_when(xcymhsocrel2 >= 1 ~ 1, TRUE ~ 0) +
                                                                   case_when(xcymhsocrel2 == 0 ~ 0, TRUE ~ 0)), TRUE ~ 0))))
 
   Combined$'Social and Peer Relationships'[Combined$'Social and Peer Relationships' == 0] <- "Not Triggered"
   Combined$'Social and Peer Relationships'[Combined$'Social and Peer Relationships' == 1] <- "Triggered to reduce maladaptive or antisocial peer interactions"
   Combined$'Social and Peer Relationships'[Combined$'Social and Peer Relationships' == 2] <- "Triggered to reduce social withdrawal or isolation"
   
   
   #################################################################
   ##                     Strengths: cCYMHSTR                     ##
   #################################################################
   
   Combined <- Combined %>% mutate(validstr = case_when(
     iC7 %in% c(0,1,2) & 
       iC9a %in% c(0,1,8) & 
       iF8b %in% c(0,1) & 
       iF15a %in% c(0,1) ~ 1, TRUE ~ 0))
   
   Combined <- Combined %>% mutate(xcymhstr = case_when(validstr == 1 ~
                                              (case_when(iC7 == 2 ~ + 1, TRUE ~ 0) +
                                                 case_when(iC9a %in% c(1,8) ~ + 1, TRUE ~ 0) +
                                                 case_when(iF8b == 0 ~ + 1, TRUE ~ 0) +
                                                 case_when(iF15a == 0 ~ + 1, TRUE ~ 0))))
   
   Combined <- Combined %>% mutate('Strengths' = case_when(validstr == 1 ~ 
                                              case_when(xcymhstr >= 3 ~ "Triggered", TRUE ~ "NOt Triggered")))
   
  
   
   ##################################################################
   ##                  Substance Use:cCYMHSUBUSE                   ##
   ##################################################################
   
   Combined <- Combined %>% mutate(validsubuse = case_when(
     iM6 %in% c(0,1) & 
       iW2 %in% c(0,1,2,3,4) &
       iW3a %in% c(0,1,2,3,4,5) &
       iW3b %in% c(0,1,2,3,4,5) &
       iW3c %in% c(0,1,2,3,4,5) &
       iW3d %in% c(0,1,2,3,4,5) &
       iW3e %in% c(0,1,2,3,4,5) &
       iW3f %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))
   
   Combined <- Combined %>% mutate(xcymhsubuse = case_when(validsubuse == 1 ~ 
                                                 (case_when(iM6 == 1 ~ + 1, TRUE ~ 0) +
                                                    case_when(iW2 %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                    case_when(iW3a %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                    case_when(iW3b %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                    case_when(iW3c %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) + 
                                                    case_when(iW3d %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) + 
                                                    case_when(iW3e %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) + 
                                                    case_when(iW3f %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0))))
   
   Combined <- Combined %>% mutate('Substance Use' = case_when(validsubuse == 1 ~ case_when(
     xcymhsubuse >= 1 ~ "Triggered", TRUE ~ "Not Triggered")))
   
   
   #################################################################
   ##          Support Systems for Discharge: cCYMHSSDIS          ##
   #################################################################
   
   Combined <- Combined %>% mutate(validssdis = case_when(
     iA11b %in% c(1:15) & 
       iA12e %in% c(1:6) & 
       iR16d %in% c(0,1,2,8) & 
       iR16e %in% c(0,1,2,8) & 
       iY8a %in% c(0,1,8) ~ 1, TRUE ~ 0))
   # iA11b replaced iA11j
   
   Combined <- Combined %>% mutate('Support Systems for Discharge' = case_when(validssdis == 1 ~ case_when(
     iA11b %in% c(5,8) | iA12e %in% c(1,5) | iY8a == 1 | iR16d %in% c(0,2) | 
       iR16e %in% c(0,2) ~ "Triggered", TRUE ~ "Not Triggered")))
   
   
   ##################################################################
   ##             Tobacco and Nicotine Use: cCYMHTOBAC             ##
   ##################################################################
   Combined <- Combined %>% mutate(validtobac = case_when(
     iW20a %in% c(0,1,2,3) & 
       iW20b %in% c(0,1,2,3) ~ 1, TRUE ~ 0))
   
   Combined <- Combined %>% mutate('Tobacco and Nicotine Use' = case_when(validtobac == 1 ~ case_when(
     iW20a == 3 | iW20b == 3 ~ "Triggered to prevent long-term tobacco use", 
     iW20a %in% c(1,2) | iW20b %in% c(1,2) ~ "Triggered to reduce or cease daily tobacco use", 
     iW20a == 0 & iW20b == 0 ~ "Not Triggered")))
   
   
   #################################################################
   ##                   Transitions: cCYMHTRANS                   ##
   #################################################################
   
   Combined <- Combined %>% mutate(validtrans = case_when(
     iZ12 %in% c(0,1) ~ 1, TRUE ~ 0))
   Combined <- Combined %>% mutate('Transitions' = case_when(validtrans == 1 ~ case_when(
     iZ12 == 1 ~ "Triggered", TRUE ~ "Not Triggered")))

   
   ##################################################################
   ##              Traumatic Life Events: cCYMHTRAUMA              ##
   ##################################################################
   
   Combined <- Combined %>% mutate(validtrauma = case_when(
     iB34a %in% c(0,1,2,3) & 
       iB34b %in% c(0,1,2,3) & 
       iB34c %in% c(0,1,2,3) & 
       iE1ddd %in% c(0,1,2,3,4) & 
       iE1fff %in% c(0,1,2,3,4) & 
       iE1iii %in% c(0,1,2,3,4) & 
       iE1jjj %in% c(0,1,2,3,4) & 
       iE1kkk %in% c(0,1,2,3,4) & 
       iE1lll %in% c(0,1,2,3,4) & 
       iE1eeee %in% c(0,1,2,3,4) & 
       iY1aa %in% c(0,1,2,3,4,5) & 
       iY1aj %in% c(0,1,2,3,4,5) &
       iY1ak %in% c(0,1,2,3,4,5) &
       iY1al %in% c(0,1,2,3,4,5) &
       iY1am %in% c(0,1,2,3,4,5) &
       iY1an %in% c(0,1,2,3,4,5) &
       iY1ao %in% c(0,1,2,3,4,5) &
       iY1aq %in% c(0,1,2,3,4,5) &
       iY1ar %in% c(0,1,2,3,4,5) &
       iY1at %in% c(0,1,2,3,4,5) &
       iY1au %in% c(0,1,2,3,4,5) &
       iY1b %in% c(0,1,8) & 
       iY2a %in% c(0,1) & 
       iY2c %in% c(0,1) & 
       iY2d %in% c(0,1) ~ 1, TRUE ~ 0))
   
   Combined <- Combined %>% mutate(xcymhtrauma1 = case_when(validtrauma == 1 ~ 
                                                  (case_when(iY1aa %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1aj %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1ak %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1am %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1an %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1ao %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1aq %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1ar %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1at %in% c(4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1au %in% c(4,5) ~ + 1, TRUE ~ 0))))
   
   Combined <- Combined %>% mutate(xcymhtrauma2 = case_when(validtrauma == 1 ~ 
                                                  (case_when(iY2a == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iY2c == 1 ~ + 1, TRUE ~ 0) +
                                                     case_when(iY2d == 1 ~ + 1, TRUE ~ 0))))
   
   Combined <- Combined %>% mutate(xcymhtrauma3 = case_when(validtrauma == 1 ~ 
                                                  (case_when(iB34a | iB34b | iB34c %in% c(1,2,3) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1aa %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1aj %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1ak %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1al %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1am %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1an %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1ao %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1aq %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1ar %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1at %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0) +
                                                     case_when(iY1au %in% c(1,2,3,4,5) ~ + 1, TRUE ~ 0))))
   
   Combined <- Combined %>% mutate(xcymhtrauma4 = case_when(validtrauma == 1 ~ 
                                                  (case_when(iE1ddd %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE1fff %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE1iii %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE1jjj %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE1kkk %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE1lll %in% c(1,2,3,4) ~ + 1, TRUE ~ 0) +
                                                     case_when(iE1eeee %in% c(1,2,3,4) ~ + 1, TRUE ~ 0)))) 
   
   Combined <- Combined %>% mutate('Traumatic Life Events' = case_when(validtrauma == 1 ~ case_when(
     xcymhtrauma1 >= 1 | xcymhtrauma2 >= 1 ~"Triggered to address immediate safety concerns", 
     xcymhtrauma1 == 0 & xcymhtrauma2 == 0 ~ case_when(
       xcymhtrauma3 >= 1 ~ case_when(
         iY1b == 1 | xcymhtrauma4 >=2 ~ "Triggered to reduce the impact of prior traumatic life events", 
         iY1b < 1 & xcymhtrauma4 < 2 ~ "Not Triggered"),
       xcymhtrauma3 == 0 ~ "Not Triggered"))))

   
   #################################################################
   ##                    Video Gaming: cCYMHVG                    ##
   #################################################################
   
   Combined <- Combined %>% mutate(validvg = case_when(
     iW21 %in% c(0,1,2,3) ~ 1, TRUE ~ 0))
   Combined <- Combined %>% mutate('Video Gaming' = case_when(validvg == 1 ~ case_when(
     iW21 %in% c(2,3) ~ "Triggered", 
     iW21 < 2 ~ "Not Triggered")))
   
   #################################################################
   ##                  Eating/Weight: cCYMHWTMGT                  ##
   #################################################################
   
   Combined <- Combined %>% mutate(validwtmgt = case_when(
     iK2i %in% c(0,1) & 
       iK2j %in% c(0,1) & 
       iK2k %in% c(0,1) & 
       iK8a %in% c(0,1) & 
       iK8b %in% c(0,1) & 
       iK8c %in% c(0,1) ~ 1, TRUE ~ 0))  
   Combined <- Combined %>% mutate('Eating/Weight' = case_when(validwtmgt == 1 ~ case_when(
     iK2k == 1 | iK2k == 1 | iK2i == 1 ~ "Triggered for weight concerns", 
     iK2j < 1 & iK2k < 1 & iK2i < 1 ~ case_when(
       iK8a == 1 | iK8b ==1 | iK8c == 1 ~ "Triggered due to problematic eating behaviour", 
       iK8a < 1 & iK8b < 1 & iK8c < 1 ~ "Not Triggered"))))
   
  ##--------------
##  EXT__scale  
##--------------

Combined <- Combined %>% mutate(validexts = case_when(
  iE15a %in% c(0,1,2,3,4,5) &
    iE15d %in% c(0,1,2,3,4,5) &
    iE15e %in% c(0,1,2,3,4,5) &
    iE1oo %in% c(0,1,2,3,4) &
    iE3m %in% c(0,1,2,3,4) &
    iE3r %in% c(0,1,2,3,4) &
    iE3s %in% c(0,1,2,3,4) &
    iE3t %in% c(0,1,2,3,4) &
    iX16c %in% c(0,1,2,3,4,5) & 
    iX2a %in% c(0,1,2,3,4,5) & 
    iX2b %in% c(0,1,2,3,4,5) & 
    iX2c %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(EXT__scale = case_when(validexts == 1 ~ 
                                                         (case_when(iE15a == 0 ~ 0, iE15a %in% c(1,2,3,4,5) ~ 1)) + 
                                                         (case_when(iE15d == 0 ~ 0, iE15d %in% c(1,2,3,4,5) ~ 1)) + 
                                                         (case_when(iE15e == 0 ~ 0, iE15e %in% c(1,2,3,4,5) ~ 1)) + 
                                                         (case_when(iE1oo == 0 ~ 0, iE1oo %in% c(1,2,3,4) ~ 1)) + 
                                                         (case_when(iE3m == 0 ~ 0, iE3m %in% c(1,2,3,4) ~ 1)) +
                                                         (case_when(iE3r == 0 ~ 0, iE3r %in% c(1,2,3,4) ~ 1)) +
                                                         (case_when(iE3s == 0 ~ 0, iE3s %in% c(1,2,3,4) ~ 1)) +
                                                         (case_when(iE3t == 0 ~ 0, iE3t %in% c(1,2,3,4) ~ 1)) +
                                                         (case_when(iX16c == 0 ~ 0, iX16c %in% c(1,2,3,4,5) ~ 1)) +
                                                         (case_when(iX2a == 0 ~ 0, iX2a %in% c(1,2,3,4,5) ~ 1)) +
                                                         (case_when(iX2b == 0 ~ 0, iX2b %in% c(1,2,3,4,5) ~ 1)) +
                                                         (case_when(iX2c == 0 ~ 0, iX2c %in% c(1,2,3,4,5) ~ 1))))

##--------------
##  INT__scale  
##--------------

Combined <- Combined %>% mutate(validints = case_when(
  iE1eee %in% c(0,1,2,3,4) & 
    iE1eeee %in% c(0,1,2,3,4) &
    iE1fff %in% c(0,1,2,3,4) &
    iE1kkk %in% c(0,1,2,3,4) &
    iE1rrr %in% c(0,1,2,3,4) &
    iE1sss %in% c(0,1,2,3,4) &
    iE1ttt %in% c(0,1,2,3,4) &
    iE1uu %in% c(0,1,2,3,4) &
    iE1vv %in% c(0,1,2,3,4) &
    iE1ww %in% c(0,1,2,3,4) &
    iE1xx %in% c(0,1,2,3,4) &
    iE1yy %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(INT__scale = case_when(validints == 1 ~ 
                                                         iE1eee + iE1eeee + iE1fff + iE1kkk +
                                                         iE1rrr + iE1sss + iE1ttt +  iE1uu + iE1vv +
                                                         iE1ww + iE1xx + iE1yy))

##--------------
##  ADL__scale  
##--------------

Combined <- Combined %>% mutate(validadl = case_when(
  iG2a %in% c(0,1,2,3,4,5,6,8) & 
    iG2b %in% c(0,1,2,3,4,5,6,8) & 
    iG2c %in% c(0,1,2,3,4,5,6,8) &
    iG2d %in% c(0,1,2,3,4,5,6,8) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(ADL__scale = case_when(validadl == 1 ~ 
                                         (case_when(iG2a == 0 ~ 0, iG2a %in% c(1,2,3,4,5) ~ 1, iG2a %in% c(6,8) ~ 2))+ 
                                         (case_when(iG2b == 0 ~ 0, iG2b %in% c(1,2,3,4,5) ~ 1, iG2b %in% c(6,8) ~ 2))+
                                         (case_when(iG2c == 0 ~ 0, iG2c %in% c(1,2,3,4,5) ~ 1, iG2c %in% c(6,8) ~ 2))+
                                         (case_when(iG2d == 0 ~ 0, iG2d %in% c(1,2,3,4,5) ~ 1, iG2d %in% c(6,8) ~ 2))))

##--------------
##  PEER__scale  
##--------------

Combined <- Combined %>% mutate(valideer = case_when(
  iP19b %in% c(0,1,8) &
    iP19e %in% c(0,1,8) &
    iP19f %in% c(0,1,8) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(PEER__scale = case_when(valideer == 1 ~ 
                                                         (case_when(iP19b == 1 ~ + 1, TRUE ~ 0) +
                                                            case_when(iP19f == 1 ~ + 1, TRUE ~ 0) +
                                                            case_when(iP19e == 1 ~ + 1, TRUE ~ 0))))

##--------------
##  FAM__scale  
##--------------

Combined <- Combined %>% mutate(validily = case_when(
  iF8a %in% c(0,1) &
    iP19d %in% c(0,1,8) &
    iP19h %in% c(0,1,8) &
    iY7a %in% c(0,1) &
    iY7b %in% c(0,1) &
    iY8a %in% c(0,1,8) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(FAM__scale = case_when(validily == 1 ~ 
                                                         case_when(iP19d %in% c(0,1) & iP19h %in% c(0,1) & iY8a %in% c(0,1) ~
                                                                     case_when(iF8a == 0 ~ (1 + iP19d + iP19h + iY7a + iY7b + iY8a), 
                                                                               iF8a == 1 ~ (iP19d + iP19h + iY7a + iY7b + iY8a)))))


##--------------------
##  STRENGTHS__scale  (Relational Strengths: sCYRelStren)
##--------------------

Combined <- Combined %>% mutate(validrelstren = case_when(
  iP8 %in% c(0,1) & 
    iF15c %in% c(0,1) &
    iF8a %in% c(0,1) &
    iF15d %in% c(0,1) &
    iF15e %in% c(0,1) &
    iF15f %in% c(0,1) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(STRENGTHS__scale = case_when(validrelstren == 1 ~ 
                                                               (case_when(iP8 == 0 ~ 1, iP8 == 1 ~ 0)) +
                                                               (case_when(iF15c == 0 ~ 1, iF15c == 1 ~ 0)) +
                                                               (case_when(iF8a == 0 ~ 1, iF8a == 1 ~ 0)) +
                                                               (case_when(iF15d == 0 ~ 1, iF15d == 1 ~ 0)) +
                                                               (case_when(iF15e == 0 ~ 1, iF15e == 1 ~ 0)) +
                                                               (case_when(iF15f == 0 ~ 1, iF15f == 1 ~ 0))))

##----------------------
##  SCHLDISRUPT__scale  
##----------------------

Combined <- Combined %>% mutate(validsdes = case_when(
  iBB5a %in% c(0,1,8) & 
    iBB5b %in% c(0,1,8) & 
    iBB5e %in% c(0,1,8) & 
    iBB5f %in% c(0,1,8) & 
    iBB11a %in% c(0,1) & 
    iBB11b %in% c(0,1) & 
    iBB10 %in% c(0,1,2,3) & 
    iBB14a %in% c(0,1,2,3,8) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(SCHLDISRUPT__scale = case_when(validsdes == 1 ~ 
                                                                 (case_when(iBB5a == 1 ~ + 1, TRUE ~ 0) +
                                                                    case_when(iBB5b == 1 ~ + 1, TRUE ~ 0) +
                                                                    case_when(iBB5e == 1 ~ + 1, TRUE ~ 0) +
                                                                    case_when(iBB5f == 1 ~ + 1, TRUE ~ 0) +
                                                                    case_when(iBB10 %in% c(1,2,3) ~ + 1, TRUE ~ 0) +
                                                                    case_when(iBB11a == 1 ~ + 1, TRUE ~ 0) + 
                                                                    case_when(iBB11b == 1 ~ + 1, TRUE ~ 0) + 
                                                                    case_when(iBB14a %in% c(2,3) ~ + 1, TRUE ~ 0))))


##------------------
##  SENSORY__scale  
##------------------

Combined <- Combined %>% mutate(validSensDiff = case_when( 
  iD28 %in% c(0,1,2,3,4) &
    iD29 %in% c(0,1,2,3,4) &
    iE3aa %in% c(0,1,2,3,4) &
    oE3ab %in% c(0,1,2,3,4) & 
    oE3ac %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(SENSORY__scale = case_when(validSensDiff == 1 ~ 
                                                             iD28 + iD29 + iE3aa + oE3ab + oE3ac))

##----------------
##  INT-S__scale  
##----------------

Combined <- Combined %>% mutate('INT-S__scale' = iE1eee + iE1eeee + iE1fff + iE1kkk +
                                       iE1rrr + iE1sss + iE1ttt + iE1vv +
                                       iE1ww + iE1xx + iE1yy)

##----------------
##  EXT-S__scale  
##----------------

Combined <- Combined %>% mutate(validexts = case_when(
  iE15a %in% c(0,1,2,3,4,5) &
    iE15e %in% c(0,1,2,3,4,5) &
    iE1oo %in% c(0,1,2,3,4) &
    iE3l %in% c(0,1,2,3,4) &
    iX2a %in% c(0,1,2,3,4,5) & 
    iX2b %in% c(0,1,2,3,4,5) & 
    iX2c %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate('EXT-S__scale' = case_when(validexts == 1 ~ 
                                                             (case_when(iE15a == 0 ~ 0, iE15a %in% c(1,2,3,4,5) ~ 1)) + 
                                                             (case_when(iE15e == 0 ~ 0, iE15e %in% c(1,2,3,4,5) ~ 1)) + 
                                                             (case_when(iE1oo == 0 ~ 0, iE1oo %in% c(1,2,3,4) ~ 1)) + 
                                                             (case_when(iE3l == 0 ~ 0, iE3m %in% c(1,2,3,4) ~ 1)) +
                                                             (case_when(iX2a == 0 ~ 0, iX2a %in% c(1,2,3,4,5) ~ 1)) +
                                                             (case_when(iX2b == 0 ~ 0, iX2b %in% c(1,2,3,4,5) ~ 1)) +
                                                             (case_when(iX2c == 0 ~ 0, iX2c %in% c(1,2,3,4,5) ~ 1))))

##----------------
##  AUT__scale  
##----------------

Combined <- Combined %>% mutate(validssc = case_when(iC7 %in% c(0,1,2) &
                                                       iE3aa %in% c(0,1,2,3,4) &
                                                       iE14a %in% c(0,1) &  
                                                       iE14b %in% c(0,1) &                    
                                                       iE14c %in% c(0,1) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(AUT__scale = case_when(validssc == 1 ~ 
                                                    (case_when(iE14a == 1 ~ 1, TRUE ~ 0)) + 
                                                    (case_when(iE14b == 1 ~ 1, TRUE ~ 0)) + 
                                                    (case_when(iE14c == 1 ~ 1, TRUE ~ 0)) + 
                                                    (case_when(iE3aa %in% c(1,2,3,4) ~ 1, TRUE ~ 0)) + 
                                                    (case_when(iC7== 2 ~ 1, TRUE ~ 0))))

##----------------
## COG__scale  
##----------------

Combined <- Combined %>% mutate(validcognitive = case_when(
  iC1d %in% c(0,1,2,3,4,5) &
    iC2a %in% c(0,10) &
    iC2b %in% c(0,1) & 
    iD1 %in% c(0,1,2,3,4) & 
    iD2 %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(COG__scale = case_when(validcognitive == 1 ~ 
                                                                (case_when(iC1d == 0 ~ 0, iC1d %in% c(1,2,3,4,5) ~ 1)) +
                                                                (case_when(iC2a == 0 ~ 0, iC2a == 1 ~ 1)) +
                                                                (case_when(iC2b == 0 ~ 0, iC2b == 1 ~ 1)) +
                                                                (case_when(iD1 == 0 ~ 0, iD1 %in% c(1,2,3,4) ~ 1)) +
                                                                (case_when(iD2 == 0 ~ 0, iD2 %in% c(1,2,3,4) ~ 1))))

##----------------
##  MANIA__scale  
##----------------

Combined <- Combined %>% mutate(validmania_old = case_when(
  iE1bbb %in% c(0,1,2,3,4) &
    iE1zz %in% c(0,1,2,3,4) &
    iE1llll %in% c(0,1,2,3,4) &
    iE1ccc %in% c(0,1,2,3,4) &
    iE1aaa %in% c(0,1,2,3,4) &
    iE6 %in% c(0,1,2,3,4,5) ~ 1, TRUE ~ 0))

Combined <-Combined %>% mutate(MANIA__scale = case_when(validmania_old == 1 ~ case_when
                                                        (iE6 == 0 ~  0, 
                                                          iE6 == 1 ~  1, 
                                                          iE6 == 2 ~  1, 
                                                          iE6 == 3 ~  1, 
                                                          iE6 == 4 ~  1,
                                                          iE6 == 5 ~  2) + iE1bbb + iE1zz
                                                        + iE1lll + iE1ccc + iE1aaa))

##----------------
##  SLEEP__scale  
##----------------

Combined <- Combined %>% mutate(valideep = case_when(
  iE1yyy %in% c(0,1,2,3,4) &
    iE1zzz %in% c(0,1,2,3,4)&
    iE1aaaa %in% c(0,1,2,3,4)&
    iE1bbbb %in% c(0,1,2,3,4) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(SLEEP__scale = case_when(valideep == 1 ~ (iE1yyy +iE1zzz +iE1aaaa +
                                                                          iE1bbbb)))

##-------------------------
##  Psychiatric Diagnosis  
##-------------------------

Combined <- Combined %>% 
  mutate(`Psychiatric Diagnoses` = case_when(
    is.na(iCC10b) & is.na(iCC1d) ~ NA,
    !is.na(iCC10b) & rowSums(across(iCC10b:iCC10u, ~ . %in% c(2, 3, 4))) >= 1 ~ 1,
    !is.na(iCC1d) & rowSums(across(iCC1d:iCC1u, ~ . %in% c(1, 2, 3, 4))) >= 1 ~ 1,
    TRUE ~ 0
  ))


##---------------------
##  Medical Diagnosis    #### DOUBLE CCHECK THIS
##---------------------

Combined <- Combined %>%
  mutate(`Medical Diagnoses` = case_when(
    Tool != "rscr" & !is.na(iI1aa) & rowSums(across(iI1aa:iI1z)) >= 1 ~ 1,
    !is.na(iA48) ~ iA48,
    TRUE ~ 0
  ))

##----------
##  ID/GGD  
##----------

Combined <- Combined %>%
  mutate('ID/GDD' = if_else(
    Tool != "rscr" & (
      iCC10b %in% c(1, 2, 3, 4) |
        iCC10r %in% c(1, 2, 3, 4) |
        iCC1r %in% c(1, 2, 3, 4) |
        iCC9 %in% c(5, 6)
    ), 1, 0),
    if_else(
      is.na(iA47),
      if_else(
        iA48 == 1, 1,
        if_else(iA48 == 0, 0, iA48)
      ),
      if_else(iA47 == 1, 1,
              if_else(iA47 == 0, 0, iA47)
      )))

##----------------------
##  Residential Issues  
##----------------------

Combined$'Residential Issues' <- ifelse(
  (Combined$iB12 == 1 | Combined$iB38c == 1 | Combined$iB38a == 1 | Combined$iB38b == 1 | Combined$iE5 %in% c(1,2,3) | (Combined$iA11b != 1 & !is.na(Combined$iA11b) & Combined$iA11b != 99)),
  1,
  ifelse(
    (!is.na(Combined$iB12) & Combined$iB12 != 99) | (!is.na(Combined$iB38c) & Combined$iB38c != 99) | (!is.na(Combined$iB38a) & Combined$iB38a != 99) | (!is.na(Combined$iB38b) & Combined$iB38b != 99) | (!is.na(Combined$iE5) & Combined$iE5 != 99) | (!is.na(Combined$iA11b) & Combined$iA11b != 99),
    0,
    NA)
)

##---------
##  xsdsi  
##---------

Combined <- Combined %>% mutate(xsdsi =
                                  iE1ss + iE1tt + iE1vv + iE1ww + iE1xx + iE1yy + 
                                  iE1aaa + iE1rrr + iE1ttt)
##---------
##  xsSOS  
##---------

Combined <- Combined %>% mutate(xsSOS =  case_when(
  iX1c == 5 ~ case_when(iX1b == 1 ~ 6, iX1b %in% c(0,8) ~ case_when(
    iX1e == 1 ~ 6, iX1e == 0 ~ case_when(xsdsi >= 9 ~ 5, xsdsi < 9 ~ case_when(
      iX1d == 1 ~ 4, iX1d == 0 ~ case_when(iE1nnn %in% c(1,2,3,4) ~ 5, 
                                           iE1nnn == 0 ~ 3))))),
  iX1c %in% c(3,4) ~ case_when(iX1b == 1 ~ 4, iX1b %in% c(0,8) ~ 3),
  
  iX1c %in% c(1,2) ~ case_when(iX1b == 1 ~ case_when(xsdsi >= 6 ~ 4,
                                                     xsdsi < 6 ~ case_when(
                                                       iX1d == 1 ~ case_when(
                                                         iE1nnn %in% c(1,2,3,4) ~ 5,
                                                         iE1nnn == 0 ~ 3), 
                                                       iX1d == 0 ~ case_when(
                                                         iE1nnn %in% c(1,2,3,4) ~ 4,
                                                         iE1nnn == 0 ~ 3))),
                               iX1b %in% c(0,8) ~ case_when(iE1nnn %in% 
                                                              c(1,2,3,4) ~ 3,
                                                            iE1nnn == 0 ~ 
                                                              case_when(
                                                                iX1d == 1 ~ 2,
                                                                iX1d == 0 ~ 1))),
  iX1c == 0 ~ 0))

##-------------------------
##  Valid RICHY variables  
##-------------------------

Combined <- Combined %>% mutate(validrichy = case_when(
  iE1yyy %in% c(0,1,2,3,4) & 
    iE3q %in% c(0,1,2,3,4) & 
    iE15e %in% c(0,1,2,3,4,5) &
    iJ2k %in% c(0,1,2,3,4) & 
    iJ2y %in% c(0,1,2,3,4) & 
    iJ2dd %in% c(0,1,2,3,4) & 
    iJ2gg %in% c(0,1,2,3,4) & 
    iJ2ll %in% c(0,1,2,3,4) &
    iJ3 %in% c(0,1,2,3) & 
    iJ9a %in% c(0,1) & 
    iJ9b %in% c(0,1) & 
    iJ9c %in% c(0,1) & 
    iJ9d %in% c(0,1) & 
    iJ9e %in% c(0,1) & 
    iJ9f %in% c(0,1) & 
    iJ9g %in% c(0,1) & 
    iP15a %in% c(0,1,2,8) &
    iP15b %in% c(0,1,2,8) &
    iP15c %in% c(0,1,2,8) &
    iP15d %in% c(0,1,2,8) &
    iP15e %in% c(0,1,2,8) &
    iP15f %in% c(0,1,2,8) &
    iP19b %in% c(0,1,8) &
    iP19e %in% c(0,1,8) &
    iX2b %in% c(0,1,2,3,4,5) &
    iX16c %in% c(0,1,2,3,4,5) &
    iY1al %in% c(0,1,2,3,4,5) &
    iY1am %in% c(0,1,2,3,4,5) & 
    iY1an %in% c(0,1,2,3,4,5) &
    iY1aq %in% c(0,1,2,3,4,5) &
    iY1ao %in% c(0,1,2,3,4,5) &
    iY1au %in% c(0,1,2,3,4,5) &
    iE1eee %in% c(0,1,2,3,4) & 
    iE1fff %in% c(0,1,2,3,4) & 
    iE1ggg %in% c(0,1,2,3,4) & 
    iE1hhh %in% c(0,1,2,3,4) & 
    iE1iii %in% c(0,1,2,3,4) & 
    iE1kkk %in% c(0,1,2,3,4) & 
    iE1lll %in% c(0,1,2,3,4) & 
    iE1eeee %in% c(0,1,2,3,4) & 
    iF8a %in% c(0,1) &
    iP19d %in% c(0,1,8) &
    iP19h %in% c(0,1,8) & ## identical to this point
    iY7a %in% c(0,1) &
    iY7b %in% c(0,1) &
    iY8a %in% c(0,1,8) & 
    iE1oo %in% c(0,1,2,3,4) &
    iE1nnn %in% c(0,1,2,3,4) & 
    iX1b %in% c(0,1,8) & 
    iX1c %in% c(0,1,2,3,4,5) & 
    iX1d %in% c(0,1) &
    iX1e %in% c(0,1) & 
    iE1ss %in% c(0,1,2,3,4) & 
    iE1tt %in% c(0,1,2,3,4) &
    iE1vv %in% c(0,1,2,3,4) &
    iE1ww %in% c(0,1,2,3,4) &
    iE1xx %in% c(0,1,2,3,4) &
    iE1yy %in% c(0,1,2,3,4) &
    iE1aaa %in% c(0,1,2,3,4) &
    iE1rrr %in% c(0,1,2,3,4) &
    iE1ttt %in% c(0,1,2,3,4) &
    iX2a %in% c(0,1,2,3,4,5) & 
    iX2c %in% c(0,1,2,3,4,5) &
    Age >= 0 & Age <= 130 &
    PARENTING__scale %in% c(0:12) ~ 1, TRUE ~ 0))

Combined <- Combined %>% mutate(validSSH = case_when(
  iE1oo %in% c(0,1,2,3,4) & 
    xsSOS %in% c(0,1,2,3,4,5,6) ~ 1, TRUE ~ 0))

##-----------
##  xparent  ## added ip15e and iP15f (as per SAS)
##-----------

Combined <- Combined %>% mutate(xparent = case_when(
  iP15a == 8 | iP15b == 8 | iP15c == 8 | iP15d == 8 | iP15e == 8 | iP15f ==8 ~ 1, TRUE ~ 0)) ## CHECK THIS!!!!!!!!!!!!!!!!!!!

##----------
##  xabuse  
##----------

Combined <- Combined %>% mutate(xabuse = case_when(
  iY1al %in% c(1,2,3,4,5) ~ + 1, iY1am %in% c(1,2,3,4,5) ~ + 1, 
  iY1an %in% c(1,2,3,4,5) ~ + 1, iY1aq %in% c(1,2,3,4,5) ~ + 1, 
  iY1ao %in% c(1,2,3,4,5) ~ + 1, iY1au %in% c(1,2,3,4,5) ~ + 1))

##-----------
##  xmedsym  
##-----------

Combined <- Combined %>% mutate(xmedsym = case_when(
  iJ2k %in% c(1,2,3,4) ~ + 1, iJ2y %in% c(1,2,3,4) ~ + 1, 
  iJ2dd %in% c(1,2,3,4) ~ + 1, iJ2gg %in% c(1,2,3,4) ~ + 1, 
  iJ2ll %in% c(1,2,3,4) ~ + 1, iJ3 %in% c(1,2,3) ~ + 1, iJ9a == 1 ~ + 1,
  iJ9b == 1 ~ + 1, iJ9c == 1 ~ + 1, iJ9d == 1 ~ + 1, iJ9e == 1 ~ + 1, 
  iJ9f == 1 ~ + 1, iJ9g == 1 ~ + 1))

##-----------
##  xsANXIETY  
##-----------

Combined <- Combined %>% mutate(xsANXIETY =  
                      iE1eee + iE1fff + iE1ggg + iE1hhh + iE1iii + iE1kkk + iE1lll + iE1eeee)

##------------
##  xsFAMILY  
##------------

Combined <- Combined %>% mutate(xsFAMILY = case_when(
  iP18d != 8 & iP19h !=8 & iY8a != 8 ~ case_when(
    iF8a == 0 ~ 1 + iP19d + iP19h + iY7a + iY7b + iY8a,
    iF8a == 1 ~ iP19d + iP19h + iY7a + iY7b + iY8a)))


##---------
##  ssSOSval  
##---------

Combined$ssSOSval <- ifelse(
  Combined$iX1c %in% c(0, 1, 2, 3, 4, 5, 8) &
    Combined$iX1e %in% c(0, 1, 2, 3, 4, 5, 8) &
    Combined$xsdsi %in% 0:36 &
    Combined$iX1d %in% c(0, 1, 2, 3, 4, 5, 8) &
    Combined$iE1nnn %in% c(0, 1, 2, 3, 4, 5, 8) &
    Combined$iX1b %in% c(0, 1, 2, 3, 4, 5, 8),
  1, 0
)


##---------
##  xcSSH  
##---------

Combined <- Combined %>% mutate(xcSSH = case_when(
  xsSOS %in% c(5,6) ~ 2, xsSOS %in% c(3,4) ~ case_when(
    iE1oo >= 2 ~ 2, iE1oo < 2 ~ 1), xsSOS < 3 ~ 0))


##---------
##  sRHOval  
##---------

Combined$sRHOval <- ifelse(
  Combined$iX2a %in% c(0,1,2,3,4,5) &
    Combined$iX2c %in% c(0,1,2,3,4,5) &
    Combined$iX2b %in% c(0,1,2,3,4,5) &
    Combined$iX16c %in% c(0,1,2,3,4,5) &
    Combined$iE1mmm %in% c(0,1,2,3,4,5) &
    Combined$iE1nnn %in% c(0,1,2,3,4,5) &
    Combined$iE1ooo %in% c(0,1,2,3,4,5) &
    Combined$iE1ppp %in% c(0,1,2,3,4,5),
  1, 0)

#################################################
# xsRHO 
#################################################

Combined <- Combined %>% mutate(xsRHO = case_when(
  iX2a %in% c(4,5) ~ 6, iX2a %in% c(2,3) ~ case_when( 
    iX2c %in% c(4,5) | iX2b %in% c(4,5) | iX16c %in% c(4,5) ~ 6, iE1mmm %in%
      c(2,3,4) | iE1nnn %in% c(2,3,4) | iE1ooo %in% c(2,3,4) | iE1ppp %in% 
      c(2,3,4) ~ 5, TRUE ~ 4),
  iX2a %in% c(0,1) ~ case_when(iX2c %in% c(4,5) | iX2b %in% c(4,5) | 
                                 iX16c %in% c(4,5) ~ case_when(
                                   iE1mmm %in% c(2,3,4) | iE1nnn %in% c(2,3,4) 
                                   | iE1ooo %in% c(2,3,4) | iE1ppp %in% 
                                     c(2,3,4) ~ 3, TRUE ~ 2), TRUE ~
                                 case_when(
                                   iE1mmm %in% c(2,3,4) | iE1nnn %in% c(2,3,4) 
                                   | iE1ooo %in% c(2,3,4) | iE1ppp %in% 
                                     c(2,3,4) ~ 1, TRUE ~ 0))))

#########################################################
# xcHARMOTH
#################################################

Combined <- Combined %>% mutate(xcHARMOTH = case_when(
  xsRHO %in% c(5,6) ~ 2, xsRHO %in% c(3,4) ~ case_when(
    iE1oo %in% c(2,3,4) ~ 2, iE1oo < 2 ~ 1), xsRHO < 2 ~ 0))

#########################################################
# RICHY__scale Calculation * NEW
#################################################

Combined <- Combined %>% mutate(RIChY_scale = case_when(
  Age <= 7 ~ case_when(
    iX2b %in% c(3,4,5) ~ 3, iX2b %in% c(0,1,2) ~ case_when(
      iE3q %in% c(2,3,4) ~ 1, iE3q %in% c(0,1) ~ 0)),
  
  Age %in% c(8,9,10,11) ~ case_when(
    iP19b == 8 | iP19e == 8 ~ case_when(
      xsANXIETY >= 7 ~ 5, xsANXIETY %in% c(0,1,2,3,4,5,6) ~ 3),
    iP19b != 8 & iP19e != 8 ~ case_when(
      iE15e %in% c(2,3,4,5) | iP19b == 1 ~ case_when(
        PARENTING__scale >= 3 | xparent == 1 ~ 4, 
        PARENTING__scale %in% c(0,1,2) ~ case_when(
          iE1yyy %in% c(2,3,4) ~ 3, iE1yyy %in% c(0,1) ~ 2)), ## FOUND ERROR should iE1yyy %in% c(2, 3, 4) ~ 3???
      iE15e %in% c(0,1) & iP19b %in% c(0, 8) ~ case_when( # 0 or 8
        xsFAMILY >= 3 | iY8a == 8 ~ 3, xsFAMILY %in% c(0,1,2) ~ case_when(
          xabuse >= 1 | xmedsym >= 1 ~ 1, xabuse == 0 & xmedsym == 0 ~ 0)))), 
    Age >= 12 ~ case_when(
    iE15e %in% c(2,3,4,5) | iP19b == 1 ~ case_when(
      xsANXIETY >= 10 ~ 3, xsANXIETY <= 9 ~ 5), 
    iE15e %in% c(0,1) & iP19b %in% c(0,8) ~ case_when( ## this one too
      xcSSH %in% c(1,2) ~ 4, xcSSH == 0 ~ case_when(
        xcHARMOTH %in% c(1,2) ~ 4, xcHARMOTH == 0 ~ case_when(
          xsFAMILY >= 1 | iY8a == 8 ~ case_when(
            xparent == 1 ~ 3, xparent == 0 ~ 2), xsFAMILY == 0 ~ 0))))))    


# test <- Combined %>% select(EMHID, validrichy, Age, iX2b, iE3q, iP19b, iP19e, xsANXIETY, iP19b, iP19e, iE15e, iP19b, PARENTING__scale, xparent, iE1yyy, xsFAMILY, iY8a, xabuse, xmedsym, xcSSH, xcHARMOTH, RIChY_scale, RIChY_scale2)

#########################################################
# ALEIC__scale
#################################################

Combined <- Combined %>% 
    mutate(ALEIC__scale = rowSums(
    data.frame(
      PhysAbuse = ifelse(iY1an %in% c(1,2,3,4,5), 1, 0),
      EmoAbuse = ifelse(iP19d == 1 | iY1ao %in% c(1, 2, 3, 4, 5), 1, 0),
      SexAbuse = ifelse(iY1am %in% c(1,2,3,4,5), 1, 0),
      WitnessViolence = ifelse(iP19g == 1 | iY1au %in% c(1, 2, 3, 4, 5), 1, 0),
      PhysNeglect = ifelse(iB34b %in% c(1,2,3) | iB34c%in% c(1,2,3) | iQ5a ==1 | iQ5b ==1, 1, 0),
      EmoNeglect = ifelse(iB34a %in% c(1, 2, 3), 1, 0),
      Neglect = ifelse(iY1at %in% c(1, 2, 3, 4, 5) | iY9 ==1 | iY8a %in% c(1, 2, 3, 4, 5), 1, 0),
      Parental = ifelse(iY1ap %in% c(1, 2, 3, 4, 5)| iY7a ==1, 1, 0),
      Placement = ifelse(iB35 ==1 | iB12 ==1, 1, 0),
      Bullying = ifelse(iY1aq %in% c(1, 2, 3, 4, 5), 1, 0),
      MHStressors = ifelse(iY7b ==1| iBB11b ==1, 1, 0),
      DeathLoss = ifelse(iY1ac %in% c(1, 2, 3, 4, 5)| iY1ar %in% c(1, 2, 3, 4, 5), 1, 0),
      Accident = ifelse(iY1aa %in% c(1, 2, 3, 4, 5), 1, 0),
      Disaster = ifelse(iY1ak %in% c(1,2,3,4,5)| iY1al %in% c(1,2,3,4,5), 1, 0),
      WarZone = ifelse(iY1aj %in% c(1,2,3,4,5), 1, 0),
      Migration = ifelse(iY1ai %in% c(1,2,3,4,5), 1, 0)
    ), na.rm=TRUE))

#########################################################
# TSS__scale
#################################################

Combined <- Combined %>% 
  mutate(TSS__scale = case_when(
    is.na(ALEIC__scale) ~ NA,
    TRUE ~ (ifelse(iE1pp %in% 1:5, 1, 0) +
              ifelse(iE1ss %in% 1:5, 1, 0) +
              ifelse(iE1vv %in% 1:5, 1, 0) +
              ifelse(iE1ww %in% 1:5, 1, 0) +
              ifelse(iE1xx %in% 1:5, 1, 0) +
              ifelse(iE1yy %in% 1:5, 1, 0) +
              ifelse(iE1aaa %in% 1:5, 1, 0) +
              ifelse(iE1iii %in% 1:5, 1, 0) +
              ifelse(iE1jjj %in% 1:5, 1, 0) +
              ifelse(iE1kkk %in% 1:5, 1, 0) +
              ifelse(iE1lll %in% 1:5, 1, 0) +
              ifelse(iE1eeee %in% 1:5, 1, 0) +
              ifelse(iE1qqq %in% 1:5, 1, 0) +
              ifelse(iE1sss %in% 1:5, 1, 0) +
              ifelse(iE1ttt %in% 1:5, 1, 0) +
              ifelse(iE1yyy %in% 1:5, 1, 0) +
              ifelse(iE1zzz %in% 1:5, 1, 0) +
              ifelse(iB10a %in% c(0, 8), 0, ifelse(iB10a == 1, 1, 0)) +
              ifelse(iY1b %in% c(0, 8), 0, ifelse(iY1b == 1, 1, 0)))))


############################################################################
############################################################################
###                                                                      ###
###                  SELECT COLUMNS FOR INTERRAI BI CSV                  ###
###                                                                      ###
############################################################################
############################################################################
# goals met, sex, etc. have changed names
# discharge_a to discharge_d have changed to oGoal1:oGoal4
# PAIN__scale temporarily removed

interRAI <- Combined %>%
 select("iA3", "client_id", "iA2", "ref", "compl", "survey_type", "program_name", "instrument", "oV5", "oGoal1", "oGoal2", "oGoal3", "oGoal4", "iA5a", "record_id", "client_id", "worker_id", "program_id", "cihiA2a", "cihiA2c", "iA2", "Tool", "Type", "EMHID", "Age", "FirstChYMH", "FirstAx", "FirstScreener", "LastAx", "LastChYMH", "LastScreener", "DSI__scale", "ANX__scale", "CHAMHPS__scale", "DABS__scale", "SOCDIS__scale", "DISTRACT__scale", "KinarkRiskHTO_comb", "KinarkRiskHTS_comb", "KinarkRiskHTP_comb", "KinarkRiskSM_comb", "KinarkRiskVCP_comb", "KinarkRiskFB_comb", "KinarkRiskOC_comb", "Acute", "Complex", "KinarkRiskHTO_cat", "KinarkRiskHTS_cat", "KinarkRiskHTP_cat", "KinarkRiskSM_cat", "KinarkRiskVCP_cat", "KinarkRiskFB_cat", "KinarkRiskOC_cat", "Acute_cat", "Complex_cat", "ED_Screen", "ID_Screen", "ComorbidMedical_Screen", "PSS__scale", "Trauma", "RISSK__scale", "RIO__scale", "SOS__scale", "RHO__scale", "IADLC__scale", "CAREDIS__scale", "PARENTING__scale", "COMM__scale", "CAS", "Psychiatrist", "FamilyEngaged", "Physical Activity", "Attachment", "Caffeine Use", "Caregiver Distress", "Communication", "Control Interventions", "Criminality Prevention", "Education", "Hazardous Fire Involvement", "Gambling", "Harm to Others", "Informal Support", "Interpersonal Conflict", "Life Skills", "Medication Adherence", "Medication Review", "Parenting2", "Readmission", "Suicidality and Purposeful Self-Harm", "Sexual Behaviour", "Sleep Disturbance", "Social and Peer Relationships", "Strengths", "Substance Use", "Support Systems for Discharge", "Tobacco and Nicotine Use", "Transitions", "Traumatic Life Events", "Video Gaming", "Eating/Weight", "ABS__scale", "EXT__scale", "INT__scale", "ADL__scale", "PEER__scale", "FAM__scale", "STRENGTHS__scale", "SCHLDISRUPT__scale", "SENSORY__scale", "INT-S__scale", "EXT-S__scale", "AUT__scale", "COG__scale", "MANIA__scale", "SLEEP__scale", "Psychiatric Diagnoses", "Medical Diagnoses", "ID/GDD", "Residential Issues", "RIChY_scale", "ALEIC__scale", "TSS__scale")

rm(ChYMH_export, DetailedHistory_export, ID_Lookup, interRAI_ideasWeb, Table1, Table4, df_list, Combined) # Remove unnecessary columns

# save(list = ls(all.names = TRUE), file= "all.rda")
# ## restore the saved values to the current environment
# local({
#   load("all.rda")
#  # ls()
# })

#write.csv(interRAI, "InterRAI_b.csv")

```


